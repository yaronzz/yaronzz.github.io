<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>YaornzZ</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://doc.yaronzz.com/"/>
  <updated>2023-09-11T06:16:29.212Z</updated>
  <id>http://doc.yaronzz.com/</id>
  
  <author>
    <name>YaornzZ</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>开发常用软件</title>
    <link href="http://doc.yaronzz.com/post/developer_software/"/>
    <id>http://doc.yaronzz.com/post/developer_software/</id>
    <published>2023-09-01T08:31:17.000Z</published>
    <updated>2023-09-11T06:16:29.212Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id=""><a href="#" class="headerlink" title=""></a></h1><h2 id="系统软件"><a href="#系统软件" class="headerlink" title="系统软件"></a>系统软件</h2><h3 id="卸载geek-推荐：5💖"><a href="#卸载geek-推荐：5💖" class="headerlink" title="卸载geek (推荐：5💖)"></a>卸载geek (推荐：5💖)</h3><ul><li>Geek是一款体免安装的，大小不到10MB的Windows软件卸载工具 </li><li>相比较于Windows自带的软件卸载程序，界面简洁易懂、操作简单</li><li>最为重要的一点是它会帮忙清理注册表及残留的文件和文件夹</li></ul><p><img src="https://s2.loli.net/2023/05/06/p43r1gcZEoOUf79.png" alt="img"></p><span id="more"></span><h3 id="压缩bandizip-推荐：3💖"><a href="#压缩bandizip-推荐：3💖" class="headerlink" title="压缩bandizip(推荐：3💖)"></a>压缩bandizip(推荐：3💖)</h3><p>Bandizip 一度是口碑极佳的最优秀好用的“免费压缩解压软件神器”！也是无数人装机必备的工具之一，可完美替代 WinRAR 和 7-Zip，因此广受欢迎。</p><p><img src="https://s2.loli.net/2023/05/06/zRaM2PHCTy1L3Qr.png" alt="img"></p><h3 id="截图snipaste-推荐：5💖"><a href="#截图snipaste-推荐：5💖" class="headerlink" title="截图snipaste(推荐：5💖)"></a>截图snipaste(推荐：5💖)</h3><p>Snipaste 是一款集截图、标注和贴图功能于一体的截图工具，2.0 版本对个人免费，不需要安装，自定义程度很高，支持 Windows、Mac 和 Linux 平台。</p><p>你还可以将剪贴板里的文字或者颜色信息转化为图片窗口，并且将它们进行缩放、旋转、翻转、设为半透明，甚至让鼠标能穿透它们！如果你是程序员、设计师，或者是大部分工作时间都在电脑前，贴图功能将改变你的工作方式、提升工作效率。</p><p><img src="https://s2.loli.net/2023/05/06/c4aXjbVlLUPNxny.png" alt="img"></p><h3 id="复制ditto-推荐：4💖"><a href="#复制ditto-推荐：4💖" class="headerlink" title="复制ditto(推荐：4💖)"></a>复制ditto(推荐：4💖)</h3><ul><li>Ditto是一款开源、免费、支持Window扩展的剪贴板工具。</li><li>可以保存纯文本、图片、HTML等等格式内容。</li><li>Ditto使用C语言开发，目前GitHub星为1.2k。</li><li>最新版的安装包仅5M，及其的轻量级。</li></ul><p><img src="https://pic2.zhimg.com/80/v2-1be557f9e88f8c07f0012a6e38ca518d_720w.webp" alt="img"></p><h3 id="搜索listary、utools-推荐：5💖"><a href="#搜索listary、utools-推荐：5💖" class="headerlink" title="搜索listary、utools(推荐：5💖)"></a>搜索listary、utools(推荐：5💖)</h3><h4 id="listary"><a href="#listary" class="headerlink" title="listary"></a>listary</h4><ul><li><p>Listary是一款经典的 Windows 文件浏览与快速文件搜索工具，能极大地提高用户的操作速度。</p></li><li><p>Listary 拥有两大核心功能，一个是拥有闪电般毫秒级的全盘文件搜索功能 (支持拼音模糊搜索)；另一个是让资源管理器和文件对话框的集成增强，支持超方便的“路径跳转”+“文件快速定位”等功能。</p><p><img src="https://s2.loli.net/2023/05/06/BgjY6TsVAtXHMfv.png" alt="img"></p></li></ul><h4 id="utools"><a href="#utools" class="headerlink" title="utools"></a>utools</h4><ul><li>uTools 是一个极简、插件化、跨平台的现代桌面软件。通过自由选配丰富的插件，打造你得心应手的工具集合。</li><li>通过快捷键（默认 <code>alt + space</code> ）就可以快速呼出这个<a href="https://so.csdn.net/so/search?q=搜索框&spm=1001.2101.3001.7020">搜索框</a>。它相当聪明，你可以往输入框内粘贴文本、图片、截图、文件、文件夹等等，能够处理此内容的插件也早已准备就绪，统一的设计风格和操作方式，助你高效的得到结果。</li><li>一旦你熟悉它后，除了能够为你节约大量时间，不<a href="https://so.csdn.net/so/search?q=中断&spm=1001.2101.3001.7020">中断</a>、无干扰，让你可以更加专注地改变世界。</li></ul><p><img src="https://s2.loli.net/2023/05/06/GjfDY6Sy2lKBPZ3.png" alt="img"></p><h3 id="查看quicklook-推荐：4💖"><a href="#查看quicklook-推荐：4💖" class="headerlink" title="查看quicklook(推荐：4💖)"></a>查看quicklook(推荐：4💖)</h3><p>QuickLook 是一款可以在Windows系统上运行使用的桌面快速预览工具，开源、免费。只需要用鼠标选中文件，然后点击空格，即可预览。就像 macOS 里的那样，支持图片、压缩包、PDF、Office 文档、视频等等。</p><p><img src="https://s2.loli.net/2023/05/06/Cr8gpYDEbivKVs7.png" alt="image-20230506095123558"></p><h3 id="双屏display-fusion-推荐：2💖"><a href="#双屏display-fusion-推荐：2💖" class="headerlink" title="双屏display fusion(推荐：2💖)"></a>双屏display fusion(推荐：2💖)</h3><p>DisplayFusion是一款强大实用的多屏显示器管理工具，可以同时对多个显示器进行管理，包括多显示器任务栏管理、壁纸设置、窗口管理、设置屏幕保护或者进行远程控制等操作，可以帮助用户更好地管理电脑，让每个屏幕上都能够独自运行。</p><p><img src="https://s2.loli.net/2023/05/06/ZUC27v69ARLaMsE.png" alt="image-20230506095359351"></p><h3 id="监控TrafficMonitor-推荐：3💖"><a href="#监控TrafficMonitor-推荐：3💖" class="headerlink" title="监控TrafficMonitor(推荐：3💖)"></a>监控TrafficMonitor(推荐：3💖)</h3><p>Traffic Monitor是一款用于Windows平台的网速监控悬浮窗软件，可以显示当前网速、CPU及内存利用率，支持嵌入到任务栏显示，支持更换皮肤、历史流量统计等功能。</p><p><img src="https://s2.loli.net/2023/05/06/7lrS4bdXeQnBT8R.png" alt="img"></p><h3 id="文件管理器q-dir-推荐：4💖"><a href="#文件管理器q-dir-推荐：4💖" class="headerlink" title="文件管理器q-dir(推荐：4💖)"></a>文件管理器q-dir(推荐：4💖)</h3><p>Q-Dir一款开源免费的工具，可以替代Windows文件管理器的工具，强化拓展了Windows文件管理器功能，更符合我们日常操作电脑使用。</p><p><img src="https://s2.loli.net/2023/05/06/Qw5LZqmbBIM6FGu.png" alt="img"></p><h2 id="日常冲浪"><a href="#日常冲浪" class="headerlink" title="日常冲浪"></a>日常冲浪</h2><h3 id="下载motrix-推荐：3💖"><a href="#下载motrix-推荐：3💖" class="headerlink" title="下载motrix(推荐：3💖)"></a>下载motrix(推荐：3💖)</h3><p><strong>Motrix</strong> 是一款开源的，基于aria2的下载工具，支持Windows、MacOS、Linux等操作系统，同时支持下载HTTP、FTP、BT、磁力链接等资源，界面清爽，没有广告，而且免登录的一款下载工具，即开即用。</p><p><img src="https://s2.loli.net/2023/05/06/yQPLAqnkWFTEwNO.png" alt="motrix-screenshot-task-en.png"></p><h3 id="上网v2rayn-推荐：1💖"><a href="#上网v2rayn-推荐：1💖" class="headerlink" title="上网v2rayn(推荐：1💖)"></a>上网v2rayn(推荐：1💖)</h3><p>科学上网软件，需要账号</p><p><img src="https://s2.loli.net/2023/05/06/ORDXW3fCUeMrx79.png" alt="image-20230506100634117"></p><h2 id="开发"><a href="#开发" class="headerlink" title="开发"></a>开发</h2><h3 id="远程windterm-推荐：4💖"><a href="#远程windterm-推荐：4💖" class="headerlink" title="远程windterm(推荐：4💖)"></a>远程windterm(推荐：4💖)</h3><p>windterm是一款风格独特、开源、且完全免费的SSH/Telnet/Serial/Shell/Sftp 客户端</p><p><img src="https://s2.loli.net/2023/05/06/VNmjft3xA67HLGe.png" alt="image-20230506101302193"></p><h3 id="抓包charles-推荐：3💖"><a href="#抓包charles-推荐：3💖" class="headerlink" title="抓包charles(推荐：3💖)"></a>抓包charles(推荐：3💖)</h3><p>Charles是一个HTTP代理服务器,HTTP监视器,反转代理服务器，当浏览器连接Charles的代理访问互联网时，Charles可以监控浏览器发送和接收的所有数据。它允许一个开发者查看所有连接互联网的HTTP通信，这些包括request, response和HTTP headers （包含cookies与caching信息）。</p><p><img src="https://s2.loli.net/2023/05/06/Blat1Lk5NsovPGF.png" alt="在这里插入图片描述"></p><h3 id="串口virtual-serial-推荐：4💖"><a href="#串口virtual-serial-推荐：4💖" class="headerlink" title="串口virtual serial(推荐：4💖)"></a>串口virtual serial(推荐：4💖)</h3><p>Virtual Serial Port Driver是一款爱不释手的虚拟<a href="https://so.csdn.net/so/search?q=串口&spm=1001.2101.3001.7020">串口</a>工具，其由著名软件公司Eltima开发，简称为VSPD，是虚拟串口软件中的佼佼者。它支持快速调试代码、添加无限个虚拟串口、实时虚拟串口数据传输监控等多种功能，并且能够创建任何你想使用的端口号</p><p><img src="https://s2.loli.net/2023/05/06/b8z6lLYvtHaf3hi.png" alt="在这里插入图片描述"></p><h3 id="modbus协议modbus-poll-slave-推荐：5💖"><a href="#modbus协议modbus-poll-slave-推荐：5💖" class="headerlink" title="modbus协议modbus poll\slave(推荐：5💖)"></a>modbus协议modbus poll\slave(推荐：5💖)</h3><p> <a href="https://so.csdn.net/so/search?q=Modbus&spm=1001.2101.3001.7020">Modbus</a> Poll是一个模拟Modbus协议主机的上位机软件，主要用于模拟测试跟其他从机设备通信的过程。与之成套存在的另一个软件–Modbus Slave，则是模拟Modbus协议从机的上位机软件。该软件内部封装标准Modbus协议栈，通过图形化界面使得操作更为简便。目前软件支持01、02、03、04、05、06、15、16功能码，异常报文检测，原始报文查看，数据记录等功能，是调试Modbus协议栈的好帮手。</p><p><img src="https://s2.loli.net/2023/05/06/43yOshmXBZEHxTY.png" alt="image-20230506101940083"></p><h3 id="虚拟机"><a href="#虚拟机" class="headerlink" title="虚拟机"></a>虚拟机</h3><h2 id="浏览器edge与插件-推荐：5💖"><a href="#浏览器edge与插件-推荐：5💖" class="headerlink" title="浏览器edge与插件(推荐：5💖)"></a>浏览器edge与插件(推荐：5💖)</h2><p>Edge更换内核之后能兼容大部分Chrome的插件且不用去墙外，也可以在Chrome商店里安装插件，包含手机端的同步功能国内网就能实现。Edge的市场份额也在逐年递增。</p><p><img src="https://s2.loli.net/2023/07/13/lGyPNEDQRnaZH1L.jpg" alt="img"></p><p>插件安装：<a href="https://microsoftedge.microsoft.com/addons/Microsoft-Edge-Extensions-Home?hl=zh-CN">Microsoft Edge 加载项</a></p><p><img src="https://s2.loli.net/2023/07/13/KzolmTxvRYehrt6.png" alt="image-20230713101736645"></p><h3 id="插件-启动页Infinity"><a href="#插件-启动页Infinity" class="headerlink" title="插件 - 启动页Infinity"></a>插件 - 启动页Infinity</h3><p>启动页优化，能够自定义常用网址且可以云端同步，跨机时也能快速恢复，目前在Chrome、Firefox、Edge等常用浏览器都支持，使用界面如下</p><p><img src="https://s2.loli.net/2023/07/13/aCOR7FWcXtMvbUD.webp" alt="图片"></p><h3 id="插件-广告屏蔽uBlock"><a href="#插件-广告屏蔽uBlock" class="headerlink" title="插件 - 广告屏蔽uBlock"></a>插件 - 广告屏蔽uBlock</h3><p>拦截广告的插件，可以拦截国内大部分网页的(如百度搜索)的弹出广告，并可以在一些网站自定义需要拦截的元素，与之类似的插件就是大名鼎鼎的Adblock。</p><p><img src="https://s2.loli.net/2023/07/13/RiBGwCFAMIrnD9T.png" alt="image-20230713101933007"></p><h3 id="插件-油猴Tampermonkey-必装"><a href="#插件-油猴Tampermonkey-必装" class="headerlink" title="插件 - 油猴Tampermonkey(必装)"></a>插件 - 油猴Tampermonkey(必装)</h3><p>这是一个脚本世界的神器，通过这个插件可以采用脚本来达到对特定网页的一些操作，如解除百度文库的复制限制、下载B站优酷视频等</p><p>脚本搜索安装网站：<a href="https://greasyfork.org/zh-CN">Greasy Fork - 安全、实用的用户脚本大全</a></p><p><img src="https://s2.loli.net/2023/07/13/OS3dbKLjB6hUkRP.png" alt="image-20230713102342321"></p><p><strong>很好用的脚本有：</strong></p><ul><li><a href="https://greasyfork.org/zh-CN/scripts/405130-文本选中复制">🔥🔥🔥文本选中复制🔥🔥🔥 (greasyfork.org)</a></li><li><a href="https://greasyfork.org/zh-CN/scripts/14178-ac-baidu-重定向优化百度搜狗谷歌必应搜索-favicon-双列">AC-baidu-重定向优化百度搜狗谷歌必应搜索_favicon_双列 (greasyfork.org)</a></li><li><a href="https://greasyfork.org/zh-CN/scripts/407485-github-internationalization">GitHub汉化插件 (greasyfork.org)</a></li><li><a href="https://greasyfork.org/zh-CN/scripts/329484-豆瓣资源下载大师-1秒搞定豆瓣电影-音乐-图书下载">豆瓣资源下载大师：1秒搞定豆瓣电影|音乐|图书下载 (greasyfork.org)</a></li><li><a href="https://greasyfork.org/zh-CN/scripts/378351-持续更新-csdn广告完全过滤-人性化脚本优化-不用再登录了-让你体验令人惊喜的崭新csdn">🔥持续更新🔥 CSDN广告完全过滤、人性化脚本优化：🆕 不用再登录了！让你体验令人惊喜的崭新CSDN。 (greasyfork.org)</a></li></ul><h2 id="系统"><a href="#系统" class="headerlink" title="系统"></a>系统</h2><ol><li><p>win7专业版: </p><p><code>ed2k://|file|cn_windows_7_professional_x64_dvd_x15-65791.iso|3341268992|3474800521D169FBF3F5E527CD835156|/</code></p></li><li><p>win7旗舰版: </p><p><code>ed2k://|file|cn_windows_7_ultimate_x64_dvd_x15-66043.iso|3341268992|7DD7FA757CE6D2DB78B6901F81A6907A|/</code></p></li><li><p>win7旗舰版SP1: </p><p><code>ed2k://|file|cn_windows_7_ultimate_with_sp1_x64_dvd_u_677408.iso|3420557312|B58548681854236C7939003B583A8078|/</code></p></li><li><p>win10零售版:<br><code>ed2k://|file|cn_windows_10_consumer_editions_version_1909_updated_jan_2020_x64_dvd_47161f17.iso|5417457664|274FEBA5BF0C874C291674182FA9C851|/</code></p></li><li><p>win10商业版: </p><p><code>ed2k://|file|cn_windows_10_business_editions_version_1909_updated_jan_2020_x64_dvd_b3e1f3a6.iso|5311711232|3527D2A9845FF4105F485CC364655B66|/</code></p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;/h1&gt;&lt;h2 id=&quot;系统软件&quot;&gt;&lt;a href=&quot;#系统软件&quot; class=&quot;headerlink&quot; title=&quot;系统软件&quot;&gt;&lt;/a&gt;系统软件&lt;/h2&gt;&lt;h3 id=&quot;卸载geek-推荐：5💖&quot;&gt;&lt;a href=&quot;#卸载geek-推荐：5💖&quot; class=&quot;headerlink&quot; title=&quot;卸载geek (推荐：5💖)&quot;&gt;&lt;/a&gt;卸载geek (推荐：5💖)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Geek是一款体免安装的，大小不到10MB的Windows软件卸载工具 &lt;/li&gt;
&lt;li&gt;相比较于Windows自带的软件卸载程序，界面简洁易懂、操作简单&lt;/li&gt;
&lt;li&gt;最为重要的一点是它会帮忙清理注册表及残留的文件和文件夹&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;https://s2.loli.net/2023/05/06/p43r1gcZEoOUf79.png&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="windows" scheme="http://doc.yaronzz.com/categories/windows/"/>
    
    
      <category term="软件" scheme="http://doc.yaronzz.com/tags/%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>Docker更新容器版本</title>
    <link href="http://doc.yaronzz.com/post/docker_update_containers/"/>
    <id>http://doc.yaronzz.com/post/docker_update_containers/</id>
    <published>2023-01-30T02:02:20.000Z</published>
    <updated>2023-09-11T06:16:29.236Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><em>Docker</em> 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的镜像中，然后发布到任何流行的 Linux或Windows操作系统的机器上，也可以实现虚拟化。容器是完全使用沙箱机制，相互之间不会有任何接口。</p><p>可用通过官网<a href="https://hub.docker.com/search?q=jellyfin">Explore Docker’s Container Image Repository | Docker Hub</a>查看最新镜像的版本。</p><p><img src="https://s2.loli.net/2023/01/30/tcnTl7LFK3qgM2f.png" alt="image-20230130104154084"></p><span id="more"></span><h2 id="检查镜像与容器"><a href="#检查镜像与容器" class="headerlink" title="检查镜像与容器"></a>检查镜像与容器</h2><ol><li>查看已安装的镜像<code>sudo docker images</code></li></ol><p><img src="https://s2.loli.net/2023/01/30/xPtuO9SoJAjarwY.png" alt="image-20230130104423215"></p><ol start="2"><li>查看已安装的容器<code>sudo docker ps</code></li></ol><p><img src="https://s2.loli.net/2023/01/30/Q671CzcHZ5RigFa.png" alt="image-20230130104552901"></p><h2 id="更新容器"><a href="#更新容器" class="headerlink" title="更新容器"></a>更新容器</h2><ol><li><p>安装最新的镜像<code>sudo docker pull jellyfin/jellyfin</code></p></li><li><p>查看容器的启动参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo pip install runlike</span><br><span class="line">sudo runlike jellyfin</span><br></pre></td></tr></table></figure></li><li><p>更新容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">停止删除容器</span></span><br><span class="line">sudo docker stop jellyfin</span><br><span class="line">sudo docker rm -f jellyfin</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">根据上一步获取的启动参数来启动容器</span></span><br><span class="line">sudo docker run --name=jellyfin --hostname=jellyfin</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">删除旧镜像</span></span><br><span class="line">sudo docker rmi [镜像ID]</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;em&gt;Docker&lt;/em&gt; 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的镜像中，然后发布到任何流行的 Linux或Windows操作系统的机器上，也可以实现虚拟化。容器是完全使用沙箱机制，相互之间不会有任何接口。&lt;/p&gt;
&lt;p&gt;可用通过官网&lt;a href=&quot;https://hub.docker.com/search?q=jellyfin&quot;&gt;Explore Docker’s Container Image Repository | Docker Hub&lt;/a&gt;查看最新镜像的版本。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://s2.loli.net/2023/01/30/tcnTl7LFK3qgM2f.png&quot; alt=&quot;image-20230130104154084&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="笔记" scheme="http://doc.yaronzz.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="docker" scheme="http://doc.yaronzz.com/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>Qt-ffmpeg移植</title>
    <link href="http://doc.yaronzz.com/post/qt_ffmpeg_compile/"/>
    <id>http://doc.yaronzz.com/post/qt_ffmpeg_compile/</id>
    <published>2022-11-21T00:06:30.000Z</published>
    <updated>2023-09-11T06:16:29.250Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><h3 id="下载ffmpeg："><a href="#下载ffmpeg：" class="headerlink" title="下载ffmpeg："></a>下载ffmpeg：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">克隆ffmpeg工程</span></span><br><span class="line">git clone https://gitee.com/mirrors/ffmpeg.git ffmpeg</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">新建安装目录</span></span><br><span class="line">cd ffmpeg</span><br><span class="line">mkdir install</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/11/21/RKWM6jPOo2ZSB4U.png" alt="image-20221121084820000"></p><h3 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h3><p>将交叉编译链的目录设置到环境变量中：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH=/opt_RTU/gcc-linaro-arm-linux-gnueabihf-4.9-2014.09_linux/bin:$PATH</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/11/21/J2OXr6YpCFLHTkA.png" alt="image-20221121085040099"></p><h2 id="编译移植"><a href="#编译移植" class="headerlink" title="编译移植"></a>编译移植</h2><h3 id="编译选项配置"><a href="#编译选项配置" class="headerlink" title="编译选项配置"></a>编译选项配置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=./install --enable-cross-compile --target-os=linux --cross-prefix=/opt_RTU/gcc-linaro-arm-linux-gnueabihf-4.9-2014.09_linux/bin/ --cc=arm-linux-gnueabihf-gcc --cxx=arm-linux-gnueabihf-g++ --nm=arm-linux-gnueabihf-nm --strip=arm-linux-gnueabihf-strip --ar=arm-linux-gnueabihf-ar --ranlib=arm-linux-gnueabihf-ranlib  --pkg-config=arm-linux-gnueabihf-pkg-config --cpu=cortex-a7 arch=arm32 --disable-yasm --disable-x86asm --disable-static --enable-shared --enable-small --enable-ffmpeg</span><br></pre></td></tr></table></figure><ul><li>–prefix：输出目录</li><li>–enable-cross-compile : 开启交叉编译</li><li>–target-os : 目录系统</li><li>–cross-prefix : 编译前缀,通常是指定的编译目录</li><li>–cc : 指编c编译程序</li><li>–cxx : 指定c++编译程序</li><li>–cpu : 指定cpu类型</li><li>-arch : 指定程序运行版本</li><li>–disable-yasm : 不启用汇编指令</li><li>–disable-static : 禁用静态库生成</li><li>–enable-shared : 启用动态库</li><li>–enable-small : 启用最小生成</li><li>–enable-ffmpeg : 生成ffmpeg可执行文件</li></ul><h3 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make -j12</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/11/21/xWzw1m6cbV4kCsg.png" alt="image-20221121085356829"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="code" scheme="http://doc.yaronzz.com/categories/code/"/>
    
    
      <category term="qt" scheme="http://doc.yaronzz.com/tags/qt/"/>
    
      <category term="arm" scheme="http://doc.yaronzz.com/tags/arm/"/>
    
  </entry>
  
  <entry>
    <title>Qt-Opencv移植</title>
    <link href="http://doc.yaronzz.com/post/qt_opencv_compile/"/>
    <id>http://doc.yaronzz.com/post/qt_opencv_compile/</id>
    <published>2022-11-17T09:06:30.000Z</published>
    <updated>2023-09-11T06:16:29.251Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><h3 id="下载cmake"><a href="#下载cmake" class="headerlink" title="下载cmake"></a>下载cmake</h3><p>下载<a href="https://cmake.org/download/">Download | CMake</a>软件，并安装：</p><p><img src="https://s2.loli.net/2022/11/17/WLach2M9e4Ron15.png" alt="image-20221117170329077"></p><h3 id="下载Opencv"><a href="#下载Opencv" class="headerlink" title="下载Opencv"></a>下载Opencv</h3><p>下载<a href="https://opencv.org/releases.html">Opencv</a>源码：</p><p><img src="https://s2.loli.net/2022/11/17/VHZyNJ2rf6UBzXg.png" alt="image-20221117170514707"></p><h2 id="编译移植"><a href="#编译移植" class="headerlink" title="编译移植"></a>编译移植</h2><h3 id="opencv源码解压"><a href="#opencv源码解压" class="headerlink" title="opencv源码解压"></a>opencv源码解压</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">解压</span></span><br><span class="line">unzip opencv-4.6.0</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">移动</span></span><br><span class="line">cd opencv-4.6.0</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">新建编译目录与输出目录</span></span><br><span class="line">mkdir build install</span><br></pre></td></tr></table></figure><h3 id="cmake配置"><a href="#cmake配置" class="headerlink" title="cmake配置"></a>cmake配置</h3><h4 id="设置路径"><a href="#设置路径" class="headerlink" title="设置路径"></a>设置路径</h4><p>第一个选择源码路径，第二个选择编译目录</p><p><img src="https://s2.loli.net/2022/11/17/95LDUKNC4xmg8rz.png" alt="image-20221117170914152"></p><h4 id="设置交叉编译链"><a href="#设置交叉编译链" class="headerlink" title="设置交叉编译链"></a>设置交叉编译链</h4><p>点击<code>Configure</code>之后，开始设置编译环境</p><p><img src="https://s2.loli.net/2022/11/17/ux8UEqZmgie6t4F.png" alt="image-20221117171813013"></p><p><img src="https://s2.loli.net/2022/11/17/Mv95IfSnLhOwrlE.png" alt="image-20221117171836307"></p><h4 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h4><ol><li>设置生成的模块</li></ol><p><img src="https://s2.loli.net/2022/11/17/E4s9IBXKxpQ3dwb.png" alt="image-20221117171215688"></p><p><img src="https://s2.loli.net/2022/11/17/dfvYNwZz9nM3P2J.png" alt="image-20221117171304773"></p><ol start="2"><li><p>设置编译的模块</p><p><img src="https://s2.loli.net/2022/11/17/qUuJdYzt8CgrXmy.png" alt="image-20221117171416669"></p></li></ol><p><img src="https://s2.loli.net/2022/11/17/2rbxzvEpiuFRU5Y.png" alt="image-20221117171443902"></p><p><img src="https://s2.loli.net/2022/11/17/f3sqPwlbH7UMhNZ.png" alt="image-20221117171455816"></p><ol start="3"><li><p>设置QT环境</p><p><img src="https://s2.loli.net/2022/11/17/xQiz81IAvj2GPuR.png" alt="image-20221117171518437"></p></li><li><p>设置输出目录</p><p><img src="https://s2.loli.net/2022/11/17/BDWK7hXFbnGy1V5.png" alt="image-20221117171556346"></p></li></ol><h3 id="生成"><a href="#生成" class="headerlink" title="生成"></a>生成</h3><p>点击<code>Generate</code>之后，进入build目录下，执行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make -j12</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h2 id="QT中使用Opencv"><a href="#QT中使用Opencv" class="headerlink" title="QT中使用Opencv"></a>QT中使用Opencv</h2><ol><li>修改pro文件</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">INCLUDEPATH += ./lib/include/opencv4</span><br><span class="line">LIBS += -L$$PWD/lib/lib -lopencv_world</span><br></pre></td></tr></table></figure><ol start="2"><li>新建工程，并在MainWindow中修改：</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">MainWindow::<span class="built_in">MainWindow</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QMainWindow</span>(parent)</span><br><span class="line">    , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::MainWindow)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line">    </span><br><span class="line">    Mat img=<span class="built_in">imread</span>(<span class="string">&quot;./4.jpg&quot;</span>,<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="comment">// Convert to graycsale</span></span><br><span class="line">    Mat img_gray;</span><br><span class="line">    <span class="built_in">cvtColor</span>(img, img_gray, COLOR_BGR2GRAY);</span><br><span class="line">    <span class="comment">// Blur the image for better edge detection</span></span><br><span class="line">    Mat img_blur;</span><br><span class="line">    <span class="built_in">GaussianBlur</span>(img_gray, img_blur, <span class="built_in">Size</span>(<span class="number">3</span>,<span class="number">3</span>), <span class="number">0</span>);</span><br><span class="line">    <span class="comment">// Canny edge detection</span></span><br><span class="line">    Mat edges;</span><br><span class="line">    <span class="built_in">Canny</span>(img_blur, edges, <span class="number">75</span>, <span class="number">200</span>, <span class="number">3</span>, <span class="literal">false</span>);</span><br><span class="line">    <span class="comment">// Display canny edge detected image</span></span><br><span class="line">    <span class="built_in">imshow</span>(<span class="string">&quot;Canny edge detection&quot;</span>, edges);</span><br><span class="line">    <span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="code" scheme="http://doc.yaronzz.com/categories/code/"/>
    
    
      <category term="qt" scheme="http://doc.yaronzz.com/tags/qt/"/>
    
      <category term="arm" scheme="http://doc.yaronzz.com/tags/arm/"/>
    
  </entry>
  
  <entry>
    <title>远程桌面RustDesk</title>
    <link href="http://doc.yaronzz.com/post/rustdesk/"/>
    <id>http://doc.yaronzz.com/post/rustdesk/</id>
    <published>2022-11-04T02:31:17.000Z</published>
    <updated>2023-09-11T06:16:29.215Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><a href="https://github.com/rustdesk/rustdesk">RustDesk</a>是一款远程桌面软件，开箱即用，无需任何配置。可以完全掌控数据，不用担心安全问题。可以使用免费的注册/中继服务器， 也可以自己搭建中继服务器。</p><p>另外RustDesk还提供多个平台的软件，包括Windows、macOS、iOS 还有 Android 在内的多个平台。</p><p><img src="https://s2.loli.net/2022/11/04/BnGFXoeaHD5rJOQ.png" alt="image"></p><h2 id="下载设置"><a href="#下载设置" class="headerlink" title="下载设置"></a>下载设置</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><ul><li>官方网站下载：<a href="https://rustdesk.com/zh/">https://rustdesk.com/zh/</a></li><li>开源网站下载：<a href="https://github.com/rustdesk/rustdesk/releases">https://github.com/rustdesk/rustdesk/releases</a></li></ul><p><img src="https://s2.loli.net/2022/11/04/Cy8Z76QmfAa2KlH.png" alt="image-20221104101123734"></p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>点击ID旁边的按钮，设置允许IP直接访问。在右侧的控制远程桌面输入框中，可以输入对方的ID，也可以输入局域网的IP进行远程控制。</p><p><img src="https://s2.loli.net/2022/11/04/ANLspckU5xlgRVu.png" alt="image-20221104101539780"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="windows" scheme="http://doc.yaronzz.com/categories/windows/"/>
    
    
      <category term="软件" scheme="http://doc.yaronzz.com/tags/%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>Mysql日志清理</title>
    <link href="http://doc.yaronzz.com/post/clean_mysql_logs/"/>
    <id>http://doc.yaronzz.com/post/clean_mysql_logs/</id>
    <published>2022-10-17T03:16:03.000Z</published>
    <updated>2023-09-11T06:16:29.228Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>服务器运行一段时间之后，突然报磁盘已满了，查询了一下服务器磁盘后，发现mysql有一个文件占用了快20G</p><p><img src="https://s2.loli.net/2022/10/17/kxfSs6cy3EgbZQJ.png" alt="image-20221017101019387"></p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><ol><li>修改慢日志保存路径</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">#查询慢日志保存路径</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;%slow%&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------+-----------------------------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name             <span class="operator">|</span> <span class="keyword">Value</span>                       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------+-----------------------------+</span></span><br><span class="line"><span class="operator">|</span> log_slow_admin_statements <span class="operator">|</span> OFF                         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> log_slow_slave_statements <span class="operator">|</span> OFF                         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> slow_launch_time          <span class="operator">|</span> <span class="number">2</span>                           <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> slow_query_log            <span class="operator">|</span> <span class="keyword">ON</span>                          <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> slow_query_log_file       <span class="operator">|</span> <span class="operator">/</span>var<span class="operator">/</span>lib<span class="operator">/</span>mysql<span class="operator">/</span>web<span class="operator">-</span>slow.log <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------+-----------------------------+</span></span><br><span class="line"><span class="number">5</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.03</span> sec)</span><br><span class="line"></span><br><span class="line">#关闭慢日志</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">set</span> <span class="keyword">global</span> slow_query_log<span class="operator">=</span><span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">#设置新保存路径</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">set</span> <span class="keyword">global</span> slow_query_log_file<span class="operator">=</span><span class="string">&#x27;/var/lib/mysql/web-slow-new.log&#x27;</span>;</span><br><span class="line"></span><br><span class="line">#打开慢日志</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">set</span> <span class="keyword">global</span> slow_query_log<span class="operator">=</span><span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">#查询结果</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;%slow%&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------+---------------------------------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name             <span class="operator">|</span> <span class="keyword">Value</span>                           <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------+---------------------------------+</span></span><br><span class="line"><span class="operator">|</span> log_slow_admin_statements <span class="operator">|</span> OFF                             <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> log_slow_slave_statements <span class="operator">|</span> OFF                             <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> slow_launch_time          <span class="operator">|</span> <span class="number">2</span>                               <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> slow_query_log            <span class="operator">|</span> <span class="keyword">ON</span>                              <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> slow_query_log_file       <span class="operator">|</span> <span class="operator">/</span>var<span class="operator">/</span>lib<span class="operator">/</span>mysql<span class="operator">/</span>web<span class="operator">-</span>slow<span class="operator">-</span>new.log <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------+---------------------------------+</span></span><br><span class="line"><span class="number">5</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.04</span> sec)</span><br></pre></td></tr></table></figure><ol start="2"><li>删除原来的慢日志</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm /var/lib/mysql/web-slow.log</span><br></pre></td></tr></table></figure><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#查询正在运行的<span class="keyword">sql</span>语句</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> information_schema.`PROCESSLIST` <span class="keyword">where</span> info <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="笔记" scheme="http://doc.yaronzz.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="数据库" scheme="http://doc.yaronzz.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>Clickhouse日志清理</title>
    <link href="http://doc.yaronzz.com/post/clean_clickhouse_logs/"/>
    <id>http://doc.yaronzz.com/post/clean_clickhouse_logs/</id>
    <published>2022-09-08T03:16:03.000Z</published>
    <updated>2023-09-11T06:16:29.225Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>Clickhouse有很多<a href="https://clickhouse.com/docs/en/operations/system-tables">系统表</a>，其中包含了很多日志表，比如query_log、query_thread_log、trace_log。</p><p>默认情况下，ClickHouse不清理日志，因此随着时间推移，这些表会占用大量磁盘空间。</p><p><img src="https://s2.loli.net/2022/09/08/RgjeLPVFrW83lsf.png" alt="image-20220908100840263"></p><p>可以通过以下语句查询system中的各个表大小：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    <span class="built_in">sum</span>(<span class="keyword">rows</span>) <span class="keyword">AS</span> `总行数`,</span><br><span class="line">    formatReadableSize(<span class="built_in">sum</span>(data_uncompressed_bytes)) <span class="keyword">AS</span> `原始大小`,</span><br><span class="line">    formatReadableSize(<span class="built_in">sum</span>(data_compressed_bytes)) <span class="keyword">AS</span> `压缩大小`,</span><br><span class="line">    round((<span class="built_in">sum</span>(data_compressed_bytes) <span class="operator">/</span> <span class="built_in">sum</span>(data_uncompressed_bytes)) <span class="operator">*</span> <span class="number">100</span>, <span class="number">0</span>) <span class="keyword">AS</span> `压缩率`,</span><br><span class="line">    `<span class="keyword">table</span>` <span class="keyword">AS</span> `表名`</span><br><span class="line"><span class="keyword">FROM</span> system.parts <span class="keyword">where</span> database <span class="operator">=</span> <span class="string">&#x27;system&#x27;</span> <span class="keyword">group</span> <span class="keyword">by</span> `<span class="keyword">table</span>`</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/09/08/sNbjtpZvRJWXwGf.png" alt="image-20220908100549528"></p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>从查询的结果可以看到 <code>query_log</code>、<code>query_thread_log</code>占比比较大，需要进行清理。</p><p>可以通过设置相应日志表的TTL来清理：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#保存一个月的数据</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> query_log MODIFY TTL event_date <span class="operator">+</span> toIntervalMonth(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> query_thread_log MODIFY TTL event_date <span class="operator">+</span> toIntervalMonth(<span class="number">1</span>);</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/09/08/37diupb5vVxChOE.png" alt="image-20220908133700170"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="笔记" scheme="http://doc.yaronzz.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="数据库" scheme="http://doc.yaronzz.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>Linux初始化配置</title>
    <link href="http://doc.yaronzz.com/post/linux_init/"/>
    <id>http://doc.yaronzz.com/post/linux_init/</id>
    <published>2022-08-04T02:47:20.000Z</published>
    <updated>2023-09-11T06:16:29.201Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="更换软件源"><a href="#更换软件源" class="headerlink" title="更换软件源"></a>更换软件源</h2><ol><li><p>查看Linux版本 <code>lsb_release -a</code>，获取codename</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@root:~$ lsb_release -a</span><br><span class="line">No LSB modules are available.</span><br><span class="line">Distributor ID: Ubuntu</span><br><span class="line">Description:    Ubuntu 22.04 LTS</span><br><span class="line">Release:        22.04</span><br><span class="line">Codename:       jammy</span><br></pre></td></tr></table></figure></li><li><p>替换源</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo cp /etc/apt/sources.list /etc/apt/sources.list.old</span><br><span class="line">sudo chmod 777 /etc/apt/sources.list</span><br><span class="line">sudo gedit /etc/apt/sources.list</span><br></pre></td></tr></table></figure><p>输入（jammy为第一步获取的名字）：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">deb http://mirrors.aliyun.com/ubuntu/ jammy main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ jammy-security main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ jammy-updates main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ jammy-proposed main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ jammy-backports main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ jammy main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ jammy-security main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ jammy-updates main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ jammy-proposed main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ jammy-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure><p>更新：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update  #这个命令会访问源列表里的每个网址，并读取软件列表，将其保存在本地</span><br><span class="line">sudo apt-get upgrade  #这个命令会更新本地已安装的软件</span><br></pre></td></tr></table></figure></li></ol><h2 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h2><ol><li><p>配置管理员密码与基础工具</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">修改管理员密码</span></span><br><span class="line">sudo passwd root</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装网络工具|ssh|vim</span></span><br><span class="line">sudo apt-get install net-tools ssh vim -y</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">关闭防火墙</span></span><br><span class="line">sudo ufw disable</span><br></pre></td></tr></table></figure></li><li><p>安装远程目录<code>samba</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install samba -y</span><br><span class="line">sudo vim /etc/samba/smb.conf</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">输入</span></span><br><span class="line">[home]</span><br><span class="line">path = /home</span><br><span class="line">comment = Home Disk</span><br><span class="line">public = yes</span><br><span class="line">writeable = yes</span><br><span class="line">directory mask = 0777</span><br><span class="line">create mask = 0777</span><br><span class="line">browseable = yes</span><br><span class="line">available = yes</span><br><span class="line">force user = root</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">添加用户</span></span><br><span class="line">sudo pdbedit -a xxxxx</span><br></pre></td></tr></table></figure></li></ol><ol start="3"><li><p>安装远程挂载服务 <code>nfs</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install nfs-kernel-server -y</span><br><span class="line">sudo chmod 777 /etc/exports</span><br><span class="line">sudo vim /etc/exports</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">再文档最后写上挂载目录</span></span><br><span class="line">/home *(rw,sync,no_root_squash)</span><br></pre></td></tr></table></figure></li></ol><h2 id="安装远程桌面"><a href="#安装远程桌面" class="headerlink" title="安装远程桌面"></a>安装远程桌面</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装xfce4</span></span><br><span class="line">sudo apt-get -y install xfce4 xrdp -y</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">配置xfce4桌面</span></span><br><span class="line">echo xfce4-session &gt; ~.xsession</span><br></pre></td></tr></table></figure><p>打开windows桌面远程连接，输入账号密码即可：</p><p><img src="https://s2.loli.net/2022/08/04/S8j16WpqutN3sYi.png" alt="image-20220804102041880"></p><p><img src="https://s2.loli.net/2022/08/04/EnxAOUlFmaiq7oI.png" alt="image-20220804102104140"></p><h2 id="新建用户"><a href="#新建用户" class="headerlink" title="新建用户"></a>新建用户</h2><ol><li><p>复制用户初始文件到 <code>/etc/skel/</code> 目录下，比如QT配置等</p></li><li><p>添加用户</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">添加普通用户</span></span><br><span class="line">sudo adduser xxxx</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">ubuntu添加管理员用户</span></span><br><span class="line">sudo usermod -G sudo xxxx</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">centos添加管理员用户</span></span><br><span class="line">chmod u+w /etc/sudoers</span><br><span class="line">vim /etc/sudoers</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">添加行</span></span><br><span class="line">xxxx ALL=(ALL) AL</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">删除权限</span></span><br><span class="line">chmod u-w /etc/sudoers</span><br></pre></td></tr></table></figure></li></ol><h2 id="Linux扩展命令"><a href="#Linux扩展命令" class="headerlink" title="Linux扩展命令"></a>Linux扩展命令</h2><ol><li><p>查看磁盘情况 [duf](<a href="https://github.com/muesli/duf">muesli/duf: Disk Usage/Free Utility - a better ‘df’ alternative (github.com)</a>)，类似<code>df</code>命令，可用来看挂载情况</p><p><img src="https://s2.loli.net/2022/08/05/TrJ5ApMUKEeCQq6.png" alt="image-20220805092957317"></p></li><li><p>查看文件夹大小 <a href="https://github.com/bootandy/dust">dust -d 1</a>，1表示深度，类似<code>du</code>命令</p><p><img src="https://s2.loli.net/2022/08/05/jqYBTEy8J7FG1VW.png" alt="image-20220805093151159"></p></li><li><p>查看Linux资源情况 [btm](<a href="https://github.com/ClementTsang/bottom">ClementTsang/bottom: Yet another cross-platform graphical process/system monitor. (github.com)</a>)，类似 <code>top</code>命令</p><p><img src="https://s2.loli.net/2022/08/05/iNHnpaKmIk6zvJW.png" alt="image-20220805093258646"></p></li></ol><h2 id="挂载新硬盘到home"><a href="#挂载新硬盘到home" class="headerlink" title="挂载新硬盘到home"></a>挂载新硬盘到home</h2><ol><li><p>查看当前的连接的硬盘 <code>fdisk -l</code></p></li><li><p>挂载新硬盘 <code>fdisk /dev/sdb</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Command (m for help): n(创建新分区)</span><br><span class="line">... ...(全都默认操作)</span><br><span class="line">Command (m for help): w(完成退出)</span><br></pre></td></tr></table></figure></li><li><p>格式化分区 <code>mkfs -t ext4 -c /dev/sdb</code></p></li><li><p>挂载临时目录并拷贝home目录文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mount /dev/sdb1 /mnt</span><br><span class="line">cp -rf /home/* /mnt</span><br><span class="line">umount /mnt</span><br></pre></td></tr></table></figure></li><li><p>挂载到home</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mount /dev/sdb1 /home/   #将sdb1挂载到/home</span><br><span class="line">blkid /dev/sdb1    #记录sdb1的UUID</span><br></pre></td></tr></table></figure></li><li><p>开机自动挂载</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看UUID</span></span><br><span class="line">lsblk -f </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">修改开机挂载脚本</span></span><br><span class="line">vi /etc/fstab</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">在最后增加一行</span></span><br><span class="line">UUID=da797df3-cfa3-4a8b-aea6-2df53e41ba42 /home ext4 defaults 1 2</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="linux" scheme="http://doc.yaronzz.com/categories/linux/"/>
    
    
      <category term="系统" scheme="http://doc.yaronzz.com/tags/%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>Linux git版本升级</title>
    <link href="http://doc.yaronzz.com/post/upgrade_git_version/"/>
    <id>http://doc.yaronzz.com/post/upgrade_git_version/</id>
    <published>2022-07-27T02:47:20.000Z</published>
    <updated>2023-09-11T06:16:29.198Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ol><li><p>删除旧版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum remove git</span><br><span class="line">git --version</span><br></pre></td></tr></table></figure></li><li><p>安装需求</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel</span><br></pre></td></tr></table></figure></li><li><p>下载新版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://mirrors.edge.kernel.org/pub/software/scm/git/git-2.9.5.tar.gz</span><br></pre></td></tr></table></figure></li></ol><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol><li><p>编译</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar -zxf git-2.9.5.tar.gz</span><br><span class="line">cd git-2.9.5</span><br><span class="line">make prefix=/usr/local/git all</span><br><span class="line">make prefix=/usr/local/git install</span><br></pre></td></tr></table></figure></li><li><p>添加环境变量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br><span class="line">export PATH=$PATH:/usr/local/git/bin</span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure></li><li><p>查看版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="linux" scheme="http://doc.yaronzz.com/categories/linux/"/>
    
    
      <category term="git" scheme="http://doc.yaronzz.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>设计模式-工厂模式</title>
    <link href="http://doc.yaronzz.com/post/design_patterns_factory/"/>
    <id>http://doc.yaronzz.com/post/design_patterns_factory/</id>
    <published>2022-06-09T02:55:33.000Z</published>
    <updated>2023-09-11T06:17:40.447Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>为了提高内聚和降低耦合，我们经常会定义一些抽象基类或接口，然后声明一个基类指针指向实际子类，来达到多态的目的。外部使用时，需要知道子类的具体名称才能创建相应的对象。</p><p>但这样的话，当子类的种类变多时，就会变得凌乱，于是就需要一个工厂类来进行管理，使用枚举等方式来选择要创建的子类。</p><span id="more"></span><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>工厂模式包含：简单工厂模式、工厂方法模式、抽象工厂模式。</p><p><strong>简单工厂</strong>：定义对象创建接口，将其封到工厂类中，外部不需要知道具体的子类对象。</p><p><img src="https://s2.loli.net/2022/06/09/JOsjeCQ6oZg2N3U.png" alt="image-20220609103204358"></p><p><strong>工厂方法</strong>：简单工厂升级，抽象工厂类的创建对象接口，让工厂子类决定如何创建对象。</p><p><img src="https://s2.loli.net/2022/06/09/JTLuMa4IxYVZnCS.png" alt="image-20220609103334048"></p><p><strong>抽象工厂</strong>：  工厂方法升级，工厂类中定义多个创建不同对象的接口，减少工厂类。</p><p><img src="https://s2.loli.net/2022/06/09/oEqHAcOs7nmVaMT.png" alt="image-20220609103348748"></p><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p>定义抽象基类<code>Protocol</code>，延伸子类<code>TcpProtocol</code>和<code>UdpProtocol</code>:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Protocol</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> string <span class="title">name</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TcpProtocol</span> : <span class="keyword">public</span> Protocol</span><br><span class="line">&#123;</span><br><span class="line"><span class="function">string <span class="title">name</span><span class="params">()</span> </span>&#123;<span class="keyword">return</span> <span class="string">&quot;Tcp&quot;</span>&#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UdpProtocol</span> : <span class="keyword">public</span> Protocol</span><br><span class="line">&#123;</span><br><span class="line"><span class="function">string <span class="title">name</span><span class="params">()</span> </span>&#123;<span class="keyword">return</span> <span class="string">&quot;Udp&quot;</span>&#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="简单工厂"><a href="#简单工厂" class="headerlink" title="简单工厂"></a>简单工厂</h3><p>唯一工厂类，一个产品抽象类，工厂类的创建方法依据入参判断并创建具体产品对象。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Factory</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="function">Protocol* <span class="title">createProtocol</span><span class="params">(ProtocolType type)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (type == ProtocolType::Tcp)</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">TcpProtocol</span>();</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (type == ProtocolType::Udp)</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">UdpProtocol</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="工厂方法"><a href="#工厂方法" class="headerlink" title="工厂方法"></a>工厂方法</h3><p>多个工厂类，一个产品抽象类，利用多态创建不同的产品对象，避免了大量的if-else判断。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Factory</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> Protocol* <span class="title">createProtocol</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TcpFactory</span> : <span class="keyword">public</span> Factory</span><br><span class="line">&#123;</span><br><span class="line"><span class="function">Protocol* <span class="title">createProtocol</span><span class="params">(ProtocolType type)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">TcpProtocol</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="抽象工厂"><a href="#抽象工厂" class="headerlink" title="抽象工厂"></a>抽象工厂</h3><p>多个工厂类，多个产品抽象类，产品子类分组，同一个工厂实现类创建同组中的不同产品，减少了工厂子类的数量。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Modbus</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> string <span class="title">device</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">NetModbus</span> : <span class="keyword">public</span> Modbus</span><br><span class="line">&#123;</span><br><span class="line"><span class="function">string <span class="title">device</span><span class="params">()</span> </span>&#123;<span class="keyword">return</span> <span class="string">&quot;net&quot;</span>&#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SerialModbus</span> : <span class="keyword">public</span> Modbus</span><br><span class="line">&#123;</span><br><span class="line"><span class="function">string <span class="title">device</span><span class="params">()</span> </span>&#123;<span class="keyword">return</span> <span class="string">&quot;serial&quot;</span>&#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Factory</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> Protocol* <span class="title">createProtocol</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> Modbus* <span class="title">createModbus</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TcpFactory</span> : <span class="keyword">public</span> Factory</span><br><span class="line">&#123;</span><br><span class="line"><span class="function">Protocol* <span class="title">createProtocol</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">TcpProtocol</span>();</span><br><span class="line">&#125;</span><br><span class="line">    <span class="function">Modbus* <span class="title">createModbus</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">NetProtocol</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>参考：</strong></p><ul><li><p><a href="https://www.zhihu.com/question/27125796/answer/1615074467">简单工厂模式、工厂方法模式和抽象工厂模式有何区别？</a></p></li><li><p><a href="http://www.mscenter.edu.cn/blog/k_eckel">GoF 23 种设计模式</a> </p></li><li><p><a href="https://www.runoob.com/design-pattern/design-pattern-intro.html">设计模式简介 | 菜鸟教程 </a></p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;为了提高内聚和降低耦合，我们经常会定义一些抽象基类或接口，然后声明一个基类指针指向实际子类，来达到多态的目的。外部使用时，需要知道子类的具体名称才能创建相应的对象。&lt;/p&gt;
&lt;p&gt;但这样的话，当子类的种类变多时，就会变得凌乱，于是就需要一个工厂类来进行管理，使用枚举等方式来选择要创建的子类。&lt;/p&gt;
    
    </summary>
    
    
      <category term="设计模式" scheme="http://doc.yaronzz.com/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="cpp" scheme="http://doc.yaronzz.com/tags/cpp/"/>
    
  </entry>
  
  <entry>
    <title>设计模式简介</title>
    <link href="http://doc.yaronzz.com/post/design_patterns/"/>
    <id>http://doc.yaronzz.com/post/design_patterns/</id>
    <published>2022-06-08T01:55:33.000Z</published>
    <updated>2023-09-11T06:17:40.444Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>设计模式常用于面向对象的开发语言，主要是为了重用代码、让代码更容易被他人理解、保证代码可靠性。</p><p>设计模式最早于1994年被<code>GOF(GANG OF FOUR四人班)</code>提出，他们合著了一本名为 <strong>《Design Patterns - Elements of Reusable Object-Oriented Software》</strong>（<strong>设计模式 - 可复用的面向对象软件元素</strong>）的书，书中总共提到了23种设计模式，可以分为三大类：<code>创造型（Creational Patterns）</code>、<code>结构型（Structural Patterns）</code>和<code>行为模式型（Behavioral Patterns）</code>。</p><h2 id="创建型模式"><a href="#创建型模式" class="headerlink" title="创建型模式"></a>创建型模式</h2><p>提供了一种在创建对象的同时隐藏创建逻辑的方式，使某个给定实例需要创建哪些对象时更加灵活。</p><table><thead><tr><th>模式</th><th>描述</th></tr></thead><tbody><tr><td>单例模式（Singleton Pattern）</td><td>保证一个类仅有一个实例，并提供一个访问它的全局访问点。</td></tr><tr><td>简单工厂（Simple Factory Pattern）</td><td>提供一个工厂类，定义一个用于创建对象的接口</td></tr><tr><td>工厂方法（Factory Method Pattern）</td><td>简单工厂升级，抽象工厂类的创建对象接口，让工厂子类决定如何创建对象。</td></tr><tr><td>抽象工厂（Abstract Factory Pattern）</td><td>工厂方法升级，工厂类中定义多个创建不同对象的接口，减少工厂类。</td></tr><tr><td>建造者模式（Builder Pattern）</td><td>将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。</td></tr><tr><td>原型模式（Prototype Pattern）</td><td>用原型实例指定创建对象的种类，并且通过拷贝这个原型来创建新的对象。</td></tr></tbody></table><h2 id="结构型模式"><a href="#结构型模式" class="headerlink" title="结构型模式"></a>结构型模式</h2><table><thead><tr><th>模式</th><th>描述</th></tr></thead><tbody><tr><td>适配器模式（Adapter Pattern）</td><td>将一个类的接口转换成客户希望的另外一个接口。<br />使得原本由于接口不兼容而不能一起工作的那些类可以一起工作。</td></tr><tr><td>桥接模式（Bridge Pattern）</td><td>将抽象部分与它的实现部分分离，使它们都可以独立地变化。</td></tr><tr><td>装饰者模式（Decorator Pattern）</td><td>动态地给一个对象添加一些额外的职责。就扩展功能而言，它比生成子类方式更为灵活。</td></tr><tr><td>组合模式（Composite Pattern）</td><td>将对象组合成树形结构以表示“部分-整体”的层次结构。它使得客户对单个对象和复合对象的使用具有一致性。</td></tr><tr><td>外观模式（Facade Pattern）</td><td>为子系统中的一组接口提供一个一致的界面，定义了一个高层接口，这个接口使得这一子系统更加容易使用。</td></tr><tr><td>享元模式（Flyweight Pattern）</td><td>运用共享技术有效地支持大量细粒度的对象。</td></tr><tr><td>代理模式（Proxy Pattern）</td><td>为其他对象提供一个代理以控制对这个对象的访问。</td></tr></tbody></table><h2 id="行为型模式"><a href="#行为型模式" class="headerlink" title="行为型模式"></a>行为型模式</h2><table><thead><tr><th>模式</th><th>描述</th></tr></thead><tbody><tr><td>模版方法（Template Method Pattern）</td><td>定义一个操作中的算法的骨架，而将一些步骤延迟到子类中。Template Method 使得子类可以不改变一个算法的结构即可重定义该算法的某些特定步骤。</td></tr><tr><td>命令模式（Command Pattern）</td><td>将一个请求封装为一个对象，从而使你可用不同的请求对客户进行参数化；对请求排队或记录请求日志，以及支持可取消的操作。</td></tr><tr><td>迭代器模式（Iterator Pattern）</td><td>提供一种方法顺序访问一个聚合对象中各个元素，而又不需暴露该对象的内部表示。</td></tr><tr><td>观察者模式（Observer Pattern）</td><td>定义对象间的一种一对多的依赖关系，以便当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并自动刷新。</td></tr><tr><td>中介者模式（Mediator Pattern）</td><td>用一个中介对象来封装一系列的对象交互。中介者使各对象不需要显式地相互引用，从而使其耦合松散，而且可以独立地改变它们之间的交互。</td></tr><tr><td>备忘录模式（Memento Pattern）</td><td>在不破坏封装性的前提下，捕获一个对象的内部状态，并在该对象之外保存这个状态。这样以后就可将该对象恢复到保存的状态。</td></tr><tr><td>解释器模式（Interpreter Pattern）</td><td>给定一个语言，定义它的文法的一种表示，并定义一个解释器，该解释器使用该表示来解释语言中的句子。</td></tr><tr><td>状态模式（State Pattern）</td><td>允许一个对象在其内部状态改变时改变它的行为。对象看起来似乎修改了它所属的类。</td></tr><tr><td>策略模式（Strategy Pattern）</td><td>定义一系列的算法，把它们一个个封装起来，并且使它们可相互替换。本模式使得算法的变化可独立于使用它的客户端。</td></tr><tr><td>职责链模式 （Chain of Responsibility Pattern）</td><td>为解除请求的发送者和接收者之间耦合，而使多个对象都有机会处理这个请求。将这些对象连成一条链，并沿着这条链传递该请求，直到有一个对象处理它。</td></tr><tr><td>访问者模式（Visitor Pattern）</td><td>表示一个作用于某对象结构中的各元素的操作。它使你可以在不改变各元素的类的前提下定义作用于这些元素的新操作。</td></tr></tbody></table><blockquote><p> 简单工厂模式和策略模式的区别</p></blockquote><p>如果在适合用策略模式的情况下用简单工厂模式，如果新增加策略就要修改工厂类，而这个可能会导致其他错误和比较繁琐，而如果使用了策略模式，只要将新增加的策略当做参数传递到Context类中即可.</p><p>工厂模式是创建型<a href="https://so.csdn.net/so/search?q=设计模式&spm=1001.2101.3001.7020">设计模式</a>，它主要关心如何去创建一个对象。策略模式是行为型设计模式，它不关注如何去创建一个对象，而是去挑选一个最符合当前应用场景的策略</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="设计模式" scheme="http://doc.yaronzz.com/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="cpp" scheme="http://doc.yaronzz.com/tags/cpp/"/>
    
  </entry>
  
  <entry>
    <title>设计模式-单例模式</title>
    <link href="http://doc.yaronzz.com/post/design_patterns_singleton/"/>
    <id>http://doc.yaronzz.com/post/design_patterns_singleton/</id>
    <published>2022-06-07T01:55:33.000Z</published>
    <updated>2023-09-11T06:17:40.446Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p><strong>目的：</strong>为了保证一个类在程序中只有一个实例，并且能被全局访问</p><p><strong>要点：</strong></p><ol><li>全局性：使用static关键字，变量需要存在于静态存储区</li><li>多线程：使用mutex进行保护</li><li>唯一性：构造函数私有，只生成一个实例，并且由自己创建</li></ol><span id="more"></span><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><h3 id="单例类"><a href="#单例类" class="headerlink" title="单例类"></a>单例类</h3><p>通过 <code>Test::Instance()</code>获取类指针</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Test</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">static</span> Test* <span class="title">Instance</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (m_instance == <span class="literal">nullptr</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="function">std::lock_guard&lt;std::mutex&gt; <span class="title">lock</span><span class="params">(m_mutex)</span></span>;</span><br><span class="line">            <span class="keyword">if</span> (m_instance == <span class="literal">nullptr</span>)</span><br><span class="line">                m_instance = <span class="keyword">new</span> Test;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> m_instance;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">DeleteInstance</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (m_instance)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="function">std::lock_guard&lt;std::mutex&gt; <span class="title">lock</span><span class="params">(m_mutex)</span></span>;</span><br><span class="line">            <span class="keyword">if</span> (m_instance)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">delete</span> m_instance;</span><br><span class="line">                m_instance = <span class="literal">nullptr</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="built_in">Test</span>() &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="type">static</span> Test *m_instance;</span><br><span class="line">    <span class="type">static</span> std::mutex m_mutex;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Test* Test::m_instance = <span class="literal">NULL</span>;</span><br><span class="line">std::mutex Test::m_mutex;</span><br></pre></td></tr></table></figure><h3 id="单例宏"><a href="#单例宏" class="headerlink" title="单例宏"></a>单例宏</h3><p>每个类想要实现单例模式，都要写一遍<code>Instance</code>的接口，有点麻烦，于是希望能用宏实现单例模式，最终使用效果为：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Test</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">SINGELTON</span>(Test)</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="built_in">Test</span>() &#123;&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>可以用类模板的方式来进行：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">class</span> <span class="title class_">T</span>&gt;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Singleton</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">static</span> T *<span class="title">Instance</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (m_instance == <span class="literal">nullptr</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="function">std::lock_guard&lt;std::mutex&gt; <span class="title">lock</span><span class="params">(m_instanceMutex)</span></span>;</span><br><span class="line">            <span class="keyword">if</span> (m_instance == <span class="literal">nullptr</span>)</span><br><span class="line">                m_instance = std::<span class="built_in">unique_ptr</span>&lt;T&gt;(<span class="keyword">new</span> T);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> m_instance.<span class="built_in">get</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="type">static</span> std::unique_ptr&lt;T&gt; m_instance;</span><br><span class="line">    <span class="type">static</span> std::mutex m_instanceMutex;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">class</span> <span class="title class_">T</span>&gt; std::mutex Singleton&lt;T&gt;::m_instanceMutex;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">class</span> <span class="title class_">T</span>&gt; std::unique_ptr&lt;T&gt; Singleton&lt;T&gt;::<span class="built_in">m_instance</span>(<span class="literal">nullptr</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//单例宏</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SINGELTON(OBJ_CLASS)                            \</span></span><br><span class="line"><span class="meta">    friend Singleton<span class="string">&lt;OBJ_CLASS&gt;</span>;                        \</span></span><br><span class="line"><span class="meta">                                                        \</span></span><br><span class="line"><span class="meta">public:                                                 \</span></span><br><span class="line"><span class="meta">    static OBJ_CLASS *Instance()                        \</span></span><br><span class="line"><span class="meta">    &#123;                                                   \</span></span><br><span class="line"><span class="meta">        return Singleton<span class="string">&lt;OBJ_CLASS&gt;</span>::Instance();        \</span></span><br><span class="line"><span class="meta">    &#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;目的：&lt;/strong&gt;为了保证一个类在程序中只有一个实例，并且能被全局访问&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;要点：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;全局性：使用static关键字，变量需要存在于静态存储区&lt;/li&gt;
&lt;li&gt;多线程：使用mutex进行保护&lt;/li&gt;
&lt;li&gt;唯一性：构造函数私有，只生成一个实例，并且由自己创建&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="设计模式" scheme="http://doc.yaronzz.com/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="cpp" scheme="http://doc.yaronzz.com/tags/cpp/"/>
    
  </entry>
  
  <entry>
    <title>Qt嵌入式笔记</title>
    <link href="http://doc.yaronzz.com/post/qt_arm/"/>
    <id>http://doc.yaronzz.com/post/qt_arm/</id>
    <published>2022-05-11T02:40:33.000Z</published>
    <updated>2022-06-20T03:22:47.308Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><span id="more"></span><h2 id="触摸屏使用"><a href="#触摸屏使用" class="headerlink" title="触摸屏使用"></a>触摸屏使用</h2><ol><li><p>查看触摸屏输入设备</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">event0或1等，点击触摸屏即可打印相应信息</span></span><br><span class="line">hexdump  /dev/input/event1</span><br></pre></td></tr></table></figure></li><li><p>触摸屏校准</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/tslib/bin/ts_calibrate</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/11/tmGobd3aAYg6x1e.png" alt="img"></p></li><li><p>触摸屏测试</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/tslib/bin/ts_test</span><br></pre></td></tr></table></figure></li></ol><h2 id="lrzsz移植"><a href="#lrzsz移植" class="headerlink" title="lrzsz移植"></a>lrzsz移植</h2><ol><li><p>下载并解压lrzsz源码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://www.ohse.de/uwe/releases/lrzsz-0.12.20.tar.gz</span><br><span class="line">tar -xzvf lrzsz-0.12.20.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>修改交叉编译链并配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">修改配置：CC（交叉编译链）、host、build</span></span><br><span class="line">CC=arm-linux-gnueabihf-gcc ./configure \</span><br><span class="line">--cache-file=./arm-linux.cache \</span><br><span class="line">--prefix=$(pwd)/../output \</span><br><span class="line">--host=arm-linux-gnueabihf \</span><br><span class="line">--build=arm-linux-gnueabihf</span><br></pre></td></tr></table></figure></li><li><p>编译生成</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure></li></ol><h2 id="arm内核编译"><a href="#arm内核编译" class="headerlink" title="arm内核编译"></a>arm内核编译</h2><ol><li><p>准备工作</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install lzop</span><br><span class="line">sudo apt-get install libncurses5-dev libncursesw5-dev</span><br><span class="line">sudo apt-get install libc6-dev-i386 lib32z1</span><br><span class="line">sudo apt-get install libgtk2.0-dev libglib2.0-dev libglade2-dev</span><br></pre></td></tr></table></figure></li><li><p>功能命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">清除编译生成的文件，保留配置文件</span></span><br><span class="line">make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf-  clean       </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">清除编译生成的文件和配置文件</span></span><br><span class="line">make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf-  mrproper </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">清除所有文件</span></span><br><span class="line">make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf-  distclean </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">使用epc_m6y2c_defconfig作为配置文件</span></span><br><span class="line">make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf-  epc_m6y2c_defconfig &amp;&amp;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">基于文本模式的菜单型配置</span></span><br><span class="line">make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- menuconfig</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">图形化配置</span></span><br><span class="line">make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- gconfig</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">编译全部</span></span><br><span class="line">make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- all -j8</span><br></pre></td></tr></table></figure></li><li><p>生成文件</p><ul><li>arch/arm/boot/zImage</li><li>linux-imx/arch/arm/boot/dts/imx6y2c-512m-nand.dtb</li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="code" scheme="http://doc.yaronzz.com/categories/code/"/>
    
    
      <category term="qt" scheme="http://doc.yaronzz.com/tags/qt/"/>
    
      <category term="arm" scheme="http://doc.yaronzz.com/tags/arm/"/>
    
  </entry>
  
  <entry>
    <title>FRP内网穿透</title>
    <link href="http://doc.yaronzz.com/post/frp_use/"/>
    <id>http://doc.yaronzz.com/post/frp_use/</id>
    <published>2022-03-30T10:00:20.000Z</published>
    <updated>2023-09-11T06:16:29.195Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>frp 是一个专注于内网穿透的高性能的反向代理应用，支持 TCP、UDP、HTTP、HTTPS 等多种协议。可以将内网服务以安全、便捷的方式通过具有公网 IP 节点的中转暴露到公网。frp提供跨平台的客户端与服务端，开源免费，地址：<a href="https://github.com/fatedier/frp">frp (github.com)</a></p><p>根据系统版本，<a href="https://github.com/fatedier/frp/releases">下载不同的文件</a>并解压如下：</p><p><img src="https://s2.loli.net/2022/03/30/VYOMHWu3AglD8t2.png" alt="image-20220330172447439"></p><span id="more"></span><p>文件包括：</p><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>frpc</td><td>客户端执行程序</td></tr><tr><td>frpc.ini</td><td>客户端配置</td></tr><tr><td>frps</td><td>服务端执行程序</td></tr><tr><td>frps.ini</td><td>服务端配置</td></tr></tbody></table><h2 id="服务端使用"><a href="#服务端使用" class="headerlink" title="服务端使用"></a>服务端使用</h2><h3 id="手动安装与配置"><a href="#手动安装与配置" class="headerlink" title="手动安装与配置"></a>手动安装与配置</h3><ol><li><p>修改配置文件，详细配置参数请参考<a href="https://gofrp.org/docs/reference/server-configures/">服务端配置 | frp (gofrp.org)</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">绑定的IP与端口</span></span><br><span class="line">bind_addr = 0.0.0.0</span><br><span class="line">bind_port = 5000</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">用于接收采用 KCP 连接的 frpc</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">kcp_bind_port = 0</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">用于接收采用 HTTP\HTTPS 连接的 frpc</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">vhost_http_port = 0</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">vhost_https_port = 0</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">http、https类型的二级域名后缀</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">subdomain_host = test.com</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">web仪表盘端口，可以查看服务详情与已连接的客户端</span></span><br><span class="line">dashboard_port = 5001</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">web仪表盘用户与密码</span></span><br><span class="line">dashboard_user = admin</span><br><span class="line">dashboard_pwd = admin</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">日志级别 debug, info, warn, error | 日志最大天数</span></span><br><span class="line">log_file = ./frps.log</span><br><span class="line">log_level = info</span><br><span class="line">log_max_days = 3</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">服务端返回详细错误信息给客户端</span></span><br><span class="line">detailed_errors_to_client = true</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">验证码</span></span><br><span class="line">token = xxxxxxxxxxxxxxx</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">客户端可以绑定的端口</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">allow_ports = 1-65535</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="keyword">if</span> tcp stream multiplexing is used, default is <span class="literal">true</span></span></span><br><span class="line">tcp_mux = true</span><br></pre></td></tr></table></figure></li><li><p>启动程序</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./frps -c ./frps.ini</span><br></pre></td></tr></table></figure></li></ol><h3 id="一键安装"><a href="#一键安装" class="headerlink" title="一键安装"></a>一键安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://code.aliyun.com/MvsCode/frps-onekey/raw/master/install-frps.sh -O ./install-frps.sh</span><br><span class="line">chmod 700 ./install-frps.sh</span><br><span class="line">./install-frps.sh install</span><br></pre></td></tr></table></figure><p>管理与配置：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/frps &#123;start|stop|restart|status|config|version&#125;</span><br></pre></td></tr></table></figure><h2 id="客户端使用"><a href="#客户端使用" class="headerlink" title="客户端使用"></a>客户端使用</h2><ol><li><p>修改配置文件，详细配置参数请参考<a href="https://gofrp.org/docs/reference/client-configures/">客户端配置 | frp (gofrp.org)</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">frps服务端地址与通讯端口</span></span><br><span class="line">server_addr = 192.168.0.1</span><br><span class="line">server_port = 5000</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">验证码</span></span><br><span class="line">token = xxxxxxxxxxxxxxx</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">设置为<span class="literal">false</span>，frpc连接frps失败后重连，默认为<span class="literal">true</span>不重连</span></span><br><span class="line">login_fail_exit = false</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">KCP协议在弱网环境下传输效率提升明显，但是对frps会有一些额外的流量消耗。服务端须先设置kcp_bind_port = 7000，www.yourdomain.com服务端已设置支持</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">连接服务端的通信协议 tcp, kcp, websocket</span></span><br><span class="line">protocol = tcp</span><br><span class="line"></span><br><span class="line">[SSH]  </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">代理类型 tcp, udp, http, https, stcp, sudp, xtcp, tcpmux</span></span><br><span class="line">type = tcp</span><br><span class="line">local_ip = 127.0.0.1</span><br><span class="line">local_port = 22</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">压缩传输 | 加密传输</span></span><br><span class="line">use_compression = true</span><br><span class="line">use_encryption = true</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">tcp\udp绑定的服务端口</span></span><br><span class="line">remote_port = 6453</span><br></pre></td></tr></table></figure></li><li><p>启动程序</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./frpc -c ./frpc.ini</span><br></pre></td></tr></table></figure><p>直接访问 <code>192.168.0.1:6453</code>即可</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;frp 是一个专注于内网穿透的高性能的反向代理应用，支持 TCP、UDP、HTTP、HTTPS 等多种协议。可以将内网服务以安全、便捷的方式通过具有公网 IP 节点的中转暴露到公网。frp提供跨平台的客户端与服务端，开源免费，地址：&lt;a href=&quot;https://github.com/fatedier/frp&quot;&gt;frp (github.com)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;根据系统版本，&lt;a href=&quot;https://github.com/fatedier/frp/releases&quot;&gt;下载不同的文件&lt;/a&gt;并解压如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://s2.loli.net/2022/03/30/VYOMHWu3AglD8t2.png&quot; alt=&quot;image-20220330172447439&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://doc.yaronzz.com/categories/linux/"/>
    
    
      <category term="网络" scheme="http://doc.yaronzz.com/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>Linux不同网段网络通信</title>
    <link href="http://doc.yaronzz.com/post/linux_netmask/"/>
    <id>http://doc.yaronzz.com/post/linux_netmask/</id>
    <published>2022-02-28T09:26:17.000Z</published>
    <updated>2023-09-11T06:16:29.200Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>有两台机子，各自设置了静态 IP：</p><ul><li>A 机：<code>ifconfig eth0 192.168.32.10 netmask 255.255.254.0</code></li><li>B 机：<code>ifconfig eth0 192.168.1.15 netmask 255.255.254.0</code></li></ul><p>A 机 Ping B 机时，显示异常：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@<span class="built_in">test</span>]<span class="comment"># ping 192.168.1.15</span></span><br><span class="line">PING 192.168.1.15 (192.168.1.15): 56 data bytes</span><br><span class="line">ping: sendto: Network is unreachable</span><br></pre></td></tr></table></figure><p>需要在不改变 AB 机 IP 的情况下，让网络互通。</p><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p><strong>子网掩码</strong>是一个32位的2进制数，常见格式为<code>255.255.255.255</code>（即FF.FF.FF.FF）。子网掩码由1和0组成，且1和0分别连续。 其对应网络地址的所有位都置为1，对应于主机地址的所有位置都为0。用于告知路由器，地址的哪一部分是网络地址，哪一部分是主机地址，使路由器正确判断任意IP地址是否是本网段)的，从而正确地进行路由。</p><p><code>注意：只有网络标识相同的两台主机在无路由的情况下才能相互通信。</code></p><p>通过子网掩码判断两台设备是否属于同一网段的方法是，将IP地址和子网掩码转换为二进制，然后进行二进制“与”计算，如果得出的结果是相同的，那么这两台计算机就属于同一网段。</p><p><strong>比如：</strong></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#子网掩码：255.255.254.0</span></span><br><span class="line"><span class="comment">#设备1地址：192.168.0.55</span></span><br><span class="line"><span class="comment">#设备2地址：192.168.1.45</span></span><br><span class="line"></span><br><span class="line">可知：</span><br><span class="line">设备1网段192.168.0，设备2网段192.168.0</span><br></pre></td></tr></table></figure><p>使用子网掩码划分子网后，<a href="https://baike.baidu.com/item/子网/1186929">子网</a>内可以通信，跨子网不能通信，子网间通信应该使用路由器，并正确配置<a href="https://baike.baidu.com/item/静态路由/100778">静态路由</a>信息。</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><ol><li><p>设置掩码为<code>255.255.192.0</code>，从而在二层打通 192.168.0.0 - 192.168.63.255 ，两个设备间可以走二层直接交付</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># A机</span></span><br><span class="line">ifconfig eth0 192.168.32.10 netmask 255.255.192.0</span><br><span class="line"><span class="comment"># B机</span></span><br><span class="line">ifconfig eth0 192.168.1.15 netmask 255.255.192.0</span><br></pre></td></tr></table></figure></li><li><p>设置静态路由：</p><p>由于掩码是 23 位，A 机所在局域网 IP 地址范围是 192.168.32.1 ~ 192.168.33.254 (0 和 255 一般不分配给主机)，B 机所在局域网 IP 地址范围是 192.168.0.1 ~ 192.168.1.254。所以不是同一个 network ，网络不可达，无法 ping 通，只能在 A 机上添加一条到 B 机 network 的静态路由，并且在 B 机器上添加 A 机器的 static route </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># A机</span></span><br><span class="line">ip route add 192.168.0.0/23 dev eth0</span><br><span class="line"><span class="comment"># B机 </span></span><br><span class="line">ip route add 192.168.32.0/23 dev eth0</span><br></pre></td></tr></table></figure></li></ol><p><strong>参考：</strong><a href="https://www.v2ex.com/t/836870#reply11">请教大佬一个关于网络的问题 - V2EX</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="linux" scheme="http://doc.yaronzz.com/categories/linux/"/>
    
    
      <category term="网络" scheme="http://doc.yaronzz.com/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>DHCP局域网协议使用教程</title>
    <link href="http://doc.yaronzz.com/post/dhcp_use/"/>
    <id>http://doc.yaronzz.com/post/dhcp_use/</id>
    <published>2022-02-25T02:52:20.000Z</published>
    <updated>2023-09-11T06:16:29.193Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>DHCP（<a href="https://baike.baidu.com/item/动态主机配置协议/10778663">动态主机配置协议</a>）是一个局域网的网络协议。指的是由服务器控制一段IP地址范围，客户机登录服务器时就可以自动获得服务器分配的IP地址和子网掩码。默认情况下，DHCP作为Windows Server的一个服务组件不会被系统自动安装，还需要管理员手动安装并进行必要的配置。</p><span id="more"></span><h2 id="客户端模式"><a href="#客户端模式" class="headerlink" title="客户端模式"></a>客户端模式</h2><p>作为客户端接入DHCP服务：连接路由器，使用自动IP搜索功能：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@<span class="built_in">test</span> ~]<span class="comment">#/sbin/udhcpc</span></span><br><span class="line">udhcpc (v1.22.1) started</span><br><span class="line">Setting IP address 0.0.0.0 on eth0</span><br><span class="line">Sending discover...</span><br><span class="line">Sending <span class="keyword">select</span> <span class="keyword">for</span> 192.168.0.233...</span><br><span class="line">Lease of 192.168.0.233 obtained, lease time 7200</span><br><span class="line">Setting IP address 192.168.0.233 on eth0</span><br><span class="line">Deleting routers</span><br><span class="line">route: SIOCDELRT: No such process</span><br><span class="line">Adding router 192.168.1.1</span><br><span class="line">Recreating /etc/resolv.conf</span><br><span class="line"> Adding DNS server 114.114.114.114</span><br><span class="line"> Adding DNS server 223.5.5.5</span><br></pre></td></tr></table></figure><h2 id="服务端模式"><a href="#服务端模式" class="headerlink" title="服务端模式"></a>服务端模式</h2><p>作为DHCP服务，可以与其他客户端通过网线直连：</p><ol><li><p>关闭<code>dhcpc</code>自动IP搜索功能</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">killall -9 udhcpc</span><br></pre></td></tr></table></figure></li><li><p>设置本地静态IP地址</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig eth0 192.168.32.10 netmask 255.255.254.0</span><br></pre></td></tr></table></figure><p>eth0: 本地使用的网卡</p><p>192.168.32.10: 本地使用的IP地址</p></li><li><p>配置DHCP服务：<code>vi /etc/udhcpd.conf</code></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Sample udhcpd configuration file (/etc/udhcpd.conf)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The start and end of the IP lease block</span></span><br><span class="line"></span><br><span class="line">start192.168.32.20<span class="comment">#客户端的起始地址</span></span><br><span class="line">end192.168.32.254<span class="comment">#客户端的结束地址</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># The interface that udhcpd will use</span></span><br><span class="line"></span><br><span class="line">interfaceeth0<span class="comment">#网卡</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># The maximim number of leases (includes addressesd reserved</span></span><br><span class="line"><span class="comment"># by OFFER&#x27;s, DECLINE&#x27;s, and ARP conficts</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#max_leases254#default: 254</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># If remaining is true (default), udhcpd will store the time</span></span><br><span class="line"><span class="comment"># remaining for each lease in the udhcpd leases file. This is</span></span><br><span class="line"><span class="comment"># for embedded systems that cannot keep time between reboots.</span></span><br><span class="line"><span class="comment"># If you set remaining to no, the absolute time that the lease</span></span><br><span class="line"><span class="comment"># expires at will be stored in the dhcpd.leases file.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#remainingyes#default: yes</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># The time period at which udhcpd will write out a dhcpd.leases</span></span><br><span class="line"><span class="comment"># file. If this is 0, udhcpd will never automatically write a</span></span><br><span class="line"><span class="comment"># lease file. (specified in seconds)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#auto_time7200#default: 7200 (2 hours)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># The amount of time that an IP will be reserved (leased) for if a</span></span><br><span class="line"><span class="comment"># DHCP decline message is received (seconds).</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#decline_time3600#default: 3600 (1 hour)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># The amount of time that an IP will be reserved (leased) for if an</span></span><br><span class="line"><span class="comment"># ARP conflct occurs. (seconds</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#conflict_time3600#default: 3600 (1 hour)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># How long an offered address is reserved (leased) in seconds</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#offer_time60#default: 60 (1 minute)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># If a lease to be given is below this value, the full lease time is</span></span><br><span class="line"><span class="comment"># instead used (seconds).</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#min_lease60#defult: 60</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># The location of the leases file</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#lease_file/var/lib/misc/udhcpd.leases#defualt: /var/lib/misc/udhcpd.leases</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The location of the pid file</span></span><br><span class="line"><span class="comment">#pidfile/var/run/udhcpd.pid#default: /var/run/udhcpd.pid</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Everytime udhcpd writes a leases file, the below script will be called.</span></span><br><span class="line"><span class="comment"># Useful for writing the lease file to flash every few hours.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#notify_file#default: (no script)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#notify_filedumpleases# &lt;--- useful for debugging</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The following are bootp specific options, setable by udhcpd.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#siaddr192.168.0.22#default: 0.0.0.0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#snamezorak#default: (none)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#boot_file/var/nfs_root#default: (none)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The remainer of options are DHCP options and can be specifed with the</span></span><br><span class="line"><span class="comment"># keyword &#x27;opt&#x27; or &#x27;option&#x27;. If an option can take multiple items, such</span></span><br><span class="line"><span class="comment"># as the dns option, they can be listed on the same line, or multiple</span></span><br><span class="line"><span class="comment"># lines. The only option with a default is &#x27;lease&#x27;.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Examles</span></span><br><span class="line">optdns114.114.114.114 223.5.5.5 <span class="comment">#192.168.10.2 192.168.10.10</span></span><br><span class="line">optionsubnet255.255.255.0</span><br><span class="line">optrouter192.168.32.10</span><br><span class="line"><span class="comment">#optwins192.168.10.10</span></span><br><span class="line">optiondns192.168.32.10 <span class="comment">#129.219.13.81# appened to above DNS servers for a total of 3</span></span><br><span class="line">optiondomainlocal</span><br><span class="line">optionlease864000<span class="comment"># 10 days of seconds</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Currently supported options, for more info, see options.c</span></span><br><span class="line"><span class="comment">#opt subnet</span></span><br><span class="line"><span class="comment">#opt timezone</span></span><br><span class="line"><span class="comment">#opt router</span></span><br><span class="line"><span class="comment">#opt timesrv</span></span><br><span class="line"><span class="comment">#opt namesrv</span></span><br><span class="line"><span class="comment">#opt dns</span></span><br><span class="line"><span class="comment">#opt logsrv</span></span><br><span class="line"><span class="comment">#opt cookiesrv</span></span><br><span class="line"><span class="comment">#opt lprsrv</span></span><br><span class="line"><span class="comment">#opt bootsize</span></span><br><span class="line"><span class="comment">#opt domain</span></span><br><span class="line"><span class="comment">#opt swapsrv</span></span><br><span class="line"><span class="comment">#opt rootpath</span></span><br><span class="line"><span class="comment">#opt ipttl</span></span><br><span class="line"><span class="comment">#opt mtu</span></span><br><span class="line"><span class="comment">#opt broadcast</span></span><br><span class="line"><span class="comment">#opt wins</span></span><br><span class="line"><span class="comment">#opt lease</span></span><br><span class="line"><span class="comment">#opt ntpsrv</span></span><br><span class="line"><span class="comment">#opt tftp</span></span><br><span class="line"><span class="comment">#opt bootfile</span></span><br><span class="line"><span class="comment">#opt wpad</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Static leases map</span></span><br><span class="line"><span class="comment">#static_lease 00:60:08:11:CE:4E 192.168.0.54</span></span><br><span class="line"><span class="comment">#static_lease 00:60:08:11:CE:3E 192.168.0.44</span></span><br></pre></td></tr></table></figure></li><li><p>启动DHCP服务</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">udhcpd -fS -I 192.168.32.10 /etc/udhcpd.conf</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;DHCP（&lt;a href=&quot;https://baike.baidu.com/item/动态主机配置协议/10778663&quot;&gt;动态主机配置协议&lt;/a&gt;）是一个局域网的网络协议。指的是由服务器控制一段IP地址范围，客户机登录服务器时就可以自动获得服务器分配的IP地址和子网掩码。默认情况下，DHCP作为Windows Server的一个服务组件不会被系统自动安装，还需要管理员手动安装并进行必要的配置。&lt;/p&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://doc.yaronzz.com/categories/linux/"/>
    
    
      <category term="网络" scheme="http://doc.yaronzz.com/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>Github配置仓库Git环境</title>
    <link href="http://doc.yaronzz.com/post/github_git/"/>
    <id>http://doc.yaronzz.com/post/github_git/</id>
    <published>2022-02-25T02:00:20.000Z</published>
    <updated>2023-09-11T06:16:29.238Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>将代码提交到Github时，突然报错：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">➜  RemoteWorking git:(master) git push</span><br><span class="line">remote: Support <span class="keyword">for</span> password authentication was removed on August 13, 2021. Please use a personal access token instead.</span><br><span class="line">remote: Please see https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations/ <span class="keyword">for</span> more information.</span><br><span class="line">fatal: Authentication failed <span class="keyword">for</span> <span class="string">&#x27;https://github.com/yaronzz/xxxxx.git/&#x27;</span></span><br></pre></td></tr></table></figure><p>这是由于Github提高了仓库的安全性，访问仓库时需要提供令牌<code>token</code></p><span id="more"></span><h2 id="生成token"><a href="#生成token" class="headerlink" title="生成token"></a>生成token</h2><ol><li>访问<a href="https://github.com/settings/tokens">Personal Access Tokens (github.com)</a> ，点击生成新token</li></ol><p><img src="https://s2.loli.net/2022/06/07/4lRDUVL95Tks7nm.png" alt="image-20220225095049918"></p><ol start="2"><li>配置名称、有效期、访问权限</li></ol><p><img src="https://s2.loli.net/2022/02/25/AFh7VxdQlMCi6eL.png" alt="image-20220225095152285"></p><ol start="3"><li>点击复制<code>token</code>，此token只能查看一次，最好自己保存到其他地方</li></ol><p><img src="https://s2.loli.net/2022/02/25/4jyWiXASvoMr5g3.png" alt="image-20220225095350129"></p><h2 id="使用token"><a href="#使用token" class="headerlink" title="使用token"></a>使用token</h2><p>重新设置git的远程地址：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote set-url origin https://&lt;你的token&gt;@github.com/&lt;你的github名称&gt;/&lt;你的仓库名&gt;.git</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;将代码提交到Github时，突然报错：&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;➜  RemoteWorking git:(master) git push&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;remote: Support &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; password authentication was removed on August 13, 2021. Please use a personal access token instead.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;remote: Please see https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations/ &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; more information.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fatal: Authentication failed &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;#x27;https://github.com/yaronzz/xxxxx.git/&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这是由于Github提高了仓库的安全性，访问仓库时需要提供令牌&lt;code&gt;token&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="笔记" scheme="http://doc.yaronzz.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="github" scheme="http://doc.yaronzz.com/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>Linux安装ss客户端</title>
    <link href="http://doc.yaronzz.com/post/ss_install/"/>
    <id>http://doc.yaronzz.com/post/ss_install/</id>
    <published>2022-02-18T01:59:51.000Z</published>
    <updated>2023-09-11T06:16:29.203Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="安装ss"><a href="#安装ss" class="headerlink" title="安装ss"></a>安装ss</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install python-pip</span><br><span class="line">pip install shadowsocks</span><br></pre></td></tr></table></figure><h3 id="创建配置文件"><a href="#创建配置文件" class="headerlink" title="创建配置文件"></a>创建配置文件</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/shadowsocks.json</span><br><span class="line"></span><br><span class="line"><span class="comment">#在文件中添加一下内容：</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="string">&quot;server&quot;</span>:[<span class="string">&quot;101.101.101.101&quot;</span>],</span><br><span class="line">   <span class="string">&quot;server_port&quot;</span>:6666,</span><br><span class="line">   <span class="string">&quot;password&quot;</span>:<span class="string">&quot;xxxxxxxx&quot;</span>,</span><br><span class="line">   <span class="string">&quot;timeout&quot;</span>:300,</span><br><span class="line">   <span class="string">&quot;method&quot;</span>:<span class="string">&quot;aes-256-cfb&quot;</span>,</span><br><span class="line">   <span class="string">&quot;local_address&quot;</span>:<span class="string">&quot;127.0.0.1&quot;</span>,</span><br><span class="line">   <span class="string">&quot;local_port&quot;</span>:1080,</span><br><span class="line">   <span class="string">&quot;fast_open&quot;</span>:<span class="literal">false</span>,</span><br><span class="line">   <span class="string">&quot;tunnel_remote&quot;</span>:<span class="string">&quot;8.8.8.8&quot;</span>,</span><br><span class="line">   <span class="string">&quot;dns_server&quot;</span>:[<span class="string">&quot;8.8.8.8&quot;</span>, <span class="string">&quot;8.8.4.4&quot;</span>],</span><br><span class="line">   <span class="string">&quot;tunnel_remote_port&quot;</span>:53,</span><br><span class="line">   <span class="string">&quot;tunnel_port&quot;</span>:53</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>server : 服务器地址</li><li>server_port：服务器端口号</li><li>password：密码</li><li>method：加密方式</li></ul><span id="more"></span><h3 id="启动ss"><a href="#启动ss" class="headerlink" title="启动ss"></a>启动ss</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sslocal -c /etc/shadowsocks.json</span><br></pre></td></tr></table></figure><ol><li><p>错误：<code>ERROR method aes-256-gcm not supported</code></p><p>ss版本太低，可以用<code>sslocal --version</code>，一般都是<code>2.8.2</code>，需要升级到<code>3.0</code>：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/shadowsocks/shadowsocks.git master</span><br><span class="line"><span class="built_in">cd</span> master</span><br><span class="line">git checkout master</span><br><span class="line">python setup.py install</span><br><span class="line">sslocal --version</span><br></pre></td></tr></table></figure><p>也可以直接使用<code>pip</code>进行安装：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install https://github.com/shadowsocks/shadowsocks/archive/master.zip -U</span><br></pre></td></tr></table></figure></li><li><p>错误：<code>libsodium not found</code>，需要手动编译 <code>libsodium 1.0.8</code> 及以上版本</p><ul><li>Debian 7/8、Ubuntu 14/15/16 及其衍生系列：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install build-essential wget -y</span><br></pre></td></tr></table></figure><ul><li>Centos 6/7、RHEL 7 及其衍生系列：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum groupinstall <span class="string">&quot;Development Tools&quot;</span> -y</span><br><span class="line">yum install wget -y</span><br></pre></td></tr></table></figure><p>安装<code>libsodium</code>:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wget https://download.libsodium.org/libsodium/releases/LATEST.tar.gz</span><br><span class="line">tar xzvf LATEST.tar.gz</span><br><span class="line"><span class="built_in">cd</span> libsodium*</span><br><span class="line">./configure --prefix=/usr/local/libsodium</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><p>添加运行库位置并加载运行库：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#编辑文件</span></span><br><span class="line">vim /etc/ld.so.conf</span><br><span class="line"></span><br><span class="line"><span class="comment">#输入以下内容</span></span><br><span class="line">include ld.so.conf.d/*.conf<span class="string">&quot;</span></span><br><span class="line"><span class="string">/lib</span></span><br><span class="line"><span class="string">/usr/lib64</span></span><br><span class="line"><span class="string">/usr/local/lib</span></span><br><span class="line"><span class="string">/usr/local/libsodium/lib</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#使配置生效</span></span><br><span class="line"><span class="string">ldconfig</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="配置服务"><a href="#配置服务" class="headerlink" title="配置服务"></a>配置服务</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#编辑文件</span></span><br><span class="line">vi /etc/systemd/system/shadowsocks.service</span><br><span class="line"></span><br><span class="line"><span class="comment">#输入以下内容</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=Shadowsocks</span><br><span class="line">[Service]</span><br><span class="line">TimeoutStartSec=0</span><br><span class="line">ExecStart=sslocal -c /etc/shadowsocks.json</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动</span></span><br><span class="line">systemctl <span class="built_in">enable</span> shadowsocks.service</span><br><span class="line">systemctl start shadowsocks.service</span><br><span class="line">systemctl status shadowsocks</span><br></pre></td></tr></table></figure><p>检查服务是否运行正常：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl --socks5 127.0.0.1:1080 http://httpbin.org/ip</span><br></pre></td></tr></table></figure><h2 id="使用ss代理"><a href="#使用ss代理" class="headerlink" title="使用ss代理"></a>使用ss代理</h2><h3 id="安装privoxy"><a href="#安装privoxy" class="headerlink" title="安装privoxy"></a>安装privoxy</h3><p>privoxy可以将ss提供的socket5代理转为http代理</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装</span></span><br><span class="line">yum install privoxy</span><br><span class="line"></span><br><span class="line"><span class="comment">#配置</span></span><br><span class="line">vi /etc/privoxy/config</span><br><span class="line"><span class="comment">#确保文件中有以下两行</span></span><br><span class="line">listen-address 127.0.0.1:8118</span><br><span class="line">forward-socks5t / 127.0.0.1:1080 .</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动服务</span></span><br><span class="line">systemctl <span class="built_in">enable</span> privoxy</span><br><span class="line">systemctl start privoxy</span><br><span class="line">systemctl status privoxy</span><br></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>临时启动http代理：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> http_proxy=http://127.0.0.1:8118</span><br><span class="line"><span class="built_in">export</span> https_proxy=http://127.0.0.1:8118</span><br></pre></td></tr></table></figure><p>测试：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl www.google.com</span><br></pre></td></tr></table></figure><p>永久启用http代理：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#编辑配置文件</span></span><br><span class="line">vi /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment">#配置</span></span><br><span class="line"><span class="built_in">export</span> http_proxy=http://127.0.0.1:8118</span><br><span class="line"><span class="built_in">export</span> https_proxy=http://127.0.0.1:8118</span><br><span class="line"></span><br><span class="line"><span class="comment">#生效</span></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安装ss&quot;&gt;&lt;a href=&quot;#安装ss&quot; class=&quot;headerlink&quot; title=&quot;安装ss&quot;&gt;&lt;/a&gt;安装ss&lt;/h2&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yum install python-pip&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pip install shadowsocks&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;创建配置文件&quot;&gt;&lt;a href=&quot;#创建配置文件&quot; class=&quot;headerlink&quot; title=&quot;创建配置文件&quot;&gt;&lt;/a&gt;创建配置文件&lt;/h3&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vi /etc/shadowsocks.json&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#在文件中添加一下内容：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;string&quot;&gt;&amp;quot;server&amp;quot;&lt;/span&gt;:[&lt;span class=&quot;string&quot;&gt;&amp;quot;101.101.101.101&amp;quot;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;string&quot;&gt;&amp;quot;server_port&amp;quot;&lt;/span&gt;:6666,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;string&quot;&gt;&amp;quot;password&amp;quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&amp;quot;xxxxxxxx&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;string&quot;&gt;&amp;quot;timeout&amp;quot;&lt;/span&gt;:300,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;string&quot;&gt;&amp;quot;method&amp;quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&amp;quot;aes-256-cfb&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;string&quot;&gt;&amp;quot;local_address&amp;quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&amp;quot;127.0.0.1&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;string&quot;&gt;&amp;quot;local_port&amp;quot;&lt;/span&gt;:1080,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;string&quot;&gt;&amp;quot;fast_open&amp;quot;&lt;/span&gt;:&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;string&quot;&gt;&amp;quot;tunnel_remote&amp;quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&amp;quot;8.8.8.8&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;string&quot;&gt;&amp;quot;dns_server&amp;quot;&lt;/span&gt;:[&lt;span class=&quot;string&quot;&gt;&amp;quot;8.8.8.8&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;8.8.4.4&amp;quot;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;string&quot;&gt;&amp;quot;tunnel_remote_port&amp;quot;&lt;/span&gt;:53,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;string&quot;&gt;&amp;quot;tunnel_port&amp;quot;&lt;/span&gt;:53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;server : 服务器地址&lt;/li&gt;
&lt;li&gt;server_port：服务器端口号&lt;/li&gt;
&lt;li&gt;password：密码&lt;/li&gt;
&lt;li&gt;method：加密方式&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://doc.yaronzz.com/categories/linux/"/>
    
    
      <category term="代理" scheme="http://doc.yaronzz.com/tags/%E4%BB%A3%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>Qt-QScrollArea使用</title>
    <link href="http://doc.yaronzz.com/post/qt_qscrollarea/"/>
    <id>http://doc.yaronzz.com/post/qt_qscrollarea/</id>
    <published>2022-01-20T03:12:30.000Z</published>
    <updated>2022-06-20T03:22:47.266Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>QScrollArea作为一个控件容器，主要用于提供横向和纵向的滚动条，常用在图片查看等场景。由于它只作为一个容器存在，所以需要为其设置一个控制：<code>QScrollArea::setWidget(QWidget *)</code>。</p><p>QScrollArea也可以用来设计复杂的列表：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyScrollArea</span> : <span class="keyword">public</span> QScrollArea</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">MyScrollArea</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        m_numItem = <span class="number">0</span>;</span><br><span class="line">        m_layout = <span class="keyword">new</span> <span class="built_in">QVBoxLayout</span>();</span><br><span class="line">        m_layout-&gt;<span class="built_in">addStretch</span>(<span class="number">1</span>);</span><br><span class="line">        m_widget = <span class="keyword">new</span> <span class="built_in">QWidget</span>();</span><br><span class="line">        m_widget-&gt;<span class="built_in">setLayout</span>(m_layout);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>-&gt;<span class="built_in">setWidget</span>(m_widget);</span><br><span class="line">        <span class="keyword">this</span>-&gt;<span class="built_in">setWidgetResizable</span>(True);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">addItem</span><span class="params">(QWidget* item)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        m_layout-&gt;<span class="built_in">insertWidget</span>(m_numItem, item);</span><br><span class="line">        m_numItem ++;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">delItem</span><span class="params">(QWidget* item)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        m_layout-&gt;<span class="built_in">removeWidget</span>(item);</span><br><span class="line">        m_numItem --;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>列表项一般只需要纵向的滚动条，横向宽度保持与外部窗口一致，所以需要重写QScrollArea的<strong>resizeEvent</strong>：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">resizeEvent</span><span class="params">(QResizeEvent* e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">QScrollArea::<span class="built_in">resizeEvent</span>(e);</span><br><span class="line"><span class="keyword">auto</span> width = e-&gt;<span class="built_in">size</span>()-&gt;<span class="built_in">width</span>();</span><br><span class="line"><span class="keyword">if</span> (width &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">m_widget-&gt;<span class="built_in">setMaximumWidth</span>(width);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="code" scheme="http://doc.yaronzz.com/categories/code/"/>
    
    
      <category term="qt" scheme="http://doc.yaronzz.com/tags/qt/"/>
    
  </entry>
  
  <entry>
    <title>C++NFS挂载</title>
    <link href="http://doc.yaronzz.com/post/cpp_nfs/"/>
    <id>http://doc.yaronzz.com/post/cpp_nfs/</id>
    <published>2021-12-24T02:20:33.000Z</published>
    <updated>2022-06-20T03:22:47.347Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="挂载NFS"><a href="#挂载NFS" class="headerlink" title="挂载NFS"></a>挂载NFS</h2><h3 id="挂载命令"><a href="#挂载命令" class="headerlink" title="挂载命令"></a>挂载命令</h3><p>挂载NFS时，常用的命令比如：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#将远程目录挂载到本地/home/share目录下</span></span><br><span class="line">mount -t nfs -o nolock 192.168.1.10:/tmp /home/share</span><br></pre></td></tr></table></figure><p>在Linux 下可以用<code>mount</code>函数进行挂载：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">Mount</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string remotePath = m_remoteIP + <span class="string">&quot;:&quot;</span> + m_remotePath;</span><br><span class="line">    string localPath = m_localPath;</span><br><span class="line">    string params = <span class="string">&quot;nolock,soft,fg,tcp,timeo=5,retrans=1,rsize=4096,vers=3,addr=&quot;</span> + m_remoteIP;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> ret = <span class="built_in">mount</span>(remotePath.<span class="built_in">c_str</span>(),</span><br><span class="line">                    localPath.<span class="built_in">c_str</span>(),</span><br><span class="line">                    <span class="string">&quot;nfs&quot;</span>,</span><br><span class="line">                    MS_SYNCHRONOUS,</span><br><span class="line">                    params.<span class="built_in">c_str</span>());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (ret != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">auto</span> errInfo = errno;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="错误码"><a href="#错误码" class="headerlink" title="错误码"></a>错误码</h3><p>挂载失败时，常见错误码<code>errno</code>有：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span>EINVAL22<span class="comment">/* Invalid argument 挂载参数问题，可能是没加addr*/</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>EACCES13<span class="comment">/* Permission denied 权限问题*/</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>EPERM 1<span class="comment">/* Operation not permitted 权限问题*/</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>EBUSY16<span class="comment">/* Device or resource busy 挂载目录正被使用*/</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>ENOENT 2<span class="comment">/* No such file or directory 挂载目录错误*/</span></span></span><br></pre></td></tr></table></figure><h3 id="挂载参数"><a href="#挂载参数" class="headerlink" title="挂载参数"></a>挂载参数</h3><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>rsize=n</td><td>读时最大字节数</td></tr><tr><td>wsize=n</td><td>写时最大字节数</td></tr><tr><td>timeo=n</td><td>客户端重传请求前等待时间,默认等待重传时间为60s</td></tr><tr><td>retrans=n</td><td>客户端返回错误前的重传次数。默认为重传3次。retrans与soft参数一起使用时才有效。</td></tr><tr><td>soft/hard</td><td>软挂载方式挂载系统，若NFS请求超时，则客户端向调用程序返回错误；<br />如果使用硬连接方式则客户端一直重新请求直至成功。默认为hard</td></tr><tr><td>bg/fg</td><td>设置挂载失败后的行为方式。<br />默认的fg方式将立刻退出返回错误状态，bg方式是退出前将产生一个子进程在后台继续尝试挂载</td></tr><tr><td>vers=xxx</td><td>设置版本</td></tr><tr><td>addr=xxx</td><td>设置服务地址</td></tr><tr><td>tcp/udp</td><td>设置协议，一般使用tcp，网络不稳定可以换udp</td></tr><tr><td>port=n</td><td>设置服务端口号</td></tr><tr><td>lock/nolock</td><td>选择是否使用NLM协议在服务器上锁文件。当选择nolock选项时，锁对于同一主机的应用有效，对不同主机不受锁的影响。默认为lock。</td></tr></tbody></table><h2 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h2><p>卸载函数有<code>mount</code>和<code>mount2</code>，第二个可以加参数，所以一般情况下使用<code>mount2</code>进行强制卸载：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">UnMount</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">umount2</span>(m_localPath.<span class="built_in">c_str</span>(), MNT_FORCE) == <span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果<code>m_localPath</code>目录没有被挂载，则会返回错误</p><h2 id="检查是否挂载"><a href="#检查是否挂载" class="headerlink" title="检查是否挂载"></a>检查是否挂载</h2><h3 id="检查命令"><a href="#检查命令" class="headerlink" title="检查命令"></a>检查命令</h3><p>Linux下使用命令检查nfs是否挂载成功的方式有很多，比如：</p><ol><li><p>检查文件系统的磁盘空间占用情况 <code>df -h</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Filesystem                Size      Used Available Use% Mounted on</span><br><span class="line">ubi0:rootfs              54.1M     50.8M      3.3M  94% /</span><br><span class="line">devtmpfs                215.8M         0    215.8M   0% /dev</span><br><span class="line">192.168.0.249:/nfs       59.6G      1.6G     57.9G   3% /mnt/udisk</span><br></pre></td></tr></table></figure></li><li><p>查看挂载信息文件 <code>cat /proc/mounts</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ubi0:rootfs / ubifs rw,<span class="built_in">sync</span>,relatime 0 0</span><br><span class="line">devtmpfs /dev devtmpfs rw,relatime,size=220936k,nr_inodes=55234,mode=755 0 0</span><br><span class="line">192.168.0.249:/nfs /mnt/udisk nfs rw,<span class="built_in">sync</span>,relatime,vers=3,rsize=4096,wsize=8192,namlen=255,soft,nolock,proto=tcp,timeo=5,retrans=1,sec=sys,mountaddr=192.168.0.249,mountvers=3,mountproto=tcp,local_lock=all,addr=192.168.0.249 0 0</span><br></pre></td></tr></table></figure></li><li><p>直接使用挂载命令 <code>mount</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ubi0:rootfs on / <span class="built_in">type</span> ubifs (rw,<span class="built_in">sync</span>,relatime)</span><br><span class="line">devtmpfs on /dev <span class="built_in">type</span> devtmpfs (rw,relatime,size=220936k,nr_inodes=55234,mode=755)</span><br><span class="line">192.168.0.249:/nfs on /mnt/udisk <span class="built_in">type</span> nfs (rw,<span class="built_in">sync</span>,relatime,vers=3,rsize=4096,wsize=8192,namlen=255,soft,nolock,proto=tcp,timeo=5,retrans=1,sec=sys,mountaddr=192.168.0.249,mountvers=3,mountproto=tcp,local_lock=all,addr=192.168.0.249)</span><br></pre></td></tr></table></figure></li><li><p>查看指定目录是否挂载点 <code>mountpoint -d /mnt/udisk</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#打印文件系统的主设备号和次设备号</span></span><br><span class="line">0:21</span><br></pre></td></tr></table></figure></li></ol><h3 id="功能实现"><a href="#功能实现" class="headerlink" title="功能实现"></a>功能实现</h3><p><strong>功能需求：</strong></p><ul><li>检查目录是否挂载成功</li><li>当NFS服务关闭时，检查结果也需要同步</li></ul><p>经过测试，只有<code>mountpoint</code> 能完成第二点功能需求，所以直接使用shell命令来进行检查：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">CheckMount</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string shell = <span class="string">&quot;mountpoint -d &quot;</span> + m_localPath;</span><br><span class="line"></span><br><span class="line">    QProcess proc;</span><br><span class="line">    proc.<span class="built_in">start</span>(shell.<span class="built_in">c_str</span>());</span><br><span class="line">    <span class="keyword">if</span> (!proc.<span class="built_in">waitForFinished</span>(<span class="number">10000</span>))</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">auto</span> output = proc.<span class="built_in">readAll</span>();</span><br><span class="line">    <span class="keyword">return</span> !output.<span class="built_in">isEmpty</span>())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="NFS服务"><a href="#NFS服务" class="headerlink" title="NFS服务"></a>NFS服务</h2><h3 id="Windows下安装"><a href="#Windows下安装" class="headerlink" title="Windows下安装"></a>Windows下安装</h3><p>Windows下常见的NFS服务软件可以使用<a href="https://www.hanewin.net/nfs-e.htm">haneWIN NFS Server</a></p><p><strong>1. 下载地址</strong>：<a href="https://r.hanewin.net/nfs1261.zip">https://r.hanewin.net/nfs1261.zip</a></p><p><strong>2. 配置方法</strong>：打开目录下的<strong>exports</strong>文件，配置NFS服务目录，比如共享D盘下的<strong>NFSData</strong>目录：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D:\NFSData  -name:nfs -exec -maproot:0 -alldirs</span><br></pre></td></tr></table></figure><ul><li>name：设置挂载的目录名给客户端使用，比如<code>mount -t nfs -o nolock 192.168.1.10:/nfs /home/share</code></li><li>maproot：将root权限开放给客户端</li><li>alldirs：将全部路径开放给客户端</li></ul><p>Linux下安装</p><ol><li>安装：<code>sudo apt-get install nfs-kernel-server</code></li><li>配置方法：编辑文件 <code>/etc/exports</code></li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/mnt/nfstest *(rw,<span class="built_in">sync</span>,no_root_squash,no_subtree_check)</span><br></pre></td></tr></table></figure><ul><li>rw：可读可写</li><li>no_root_squash：root的权限</li><li>sync：资料同步写入存储器中</li><li>no_subtree_check：输出目录是一个子目录，nfs服务器也不检查其父目录的权限，这样可以提高效率</li></ul><p>编辑成功之后运行命令<code>exportfs -au</code>刷新</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;挂载NFS&quot;&gt;&lt;a href=&quot;#挂载NFS&quot; class=&quot;headerlink&quot; title=&quot;挂载NFS&quot;&gt;&lt;/a&gt;挂载NFS&lt;/h2&gt;&lt;h3 id=&quot;挂载命令&quot;&gt;&lt;a href=&quot;#挂载命令&quot; class=&quot;headerlink&quot; title=&quot;挂载命令&quot;&gt;&lt;/a&gt;挂载命令&lt;/h3&gt;&lt;p&gt;挂载NFS时，常用的命令比如：&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#将远程目录挂载到本地/home/share目录下&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mount -t nfs -o nolock 192.168.1.10:/tmp /home/share&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在Linux 下可以用&lt;code&gt;mount&lt;/code&gt;函数进行挂载：&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;type&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Mount&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    string remotePath = m_remoteIP + &lt;span class=&quot;string&quot;&gt;&amp;quot;:&amp;quot;&lt;/span&gt; + m_remotePath;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    string localPath = m_localPath;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    string params = &lt;span class=&quot;string&quot;&gt;&amp;quot;nolock,soft,fg,tcp,timeo=5,retrans=1,rsize=4096,vers=3,addr=&amp;quot;&lt;/span&gt; + m_remoteIP;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; ret = &lt;span class=&quot;built_in&quot;&gt;mount&lt;/span&gt;(remotePath.&lt;span class=&quot;built_in&quot;&gt;c_str&lt;/span&gt;(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    localPath.&lt;span class=&quot;built_in&quot;&gt;c_str&lt;/span&gt;(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&amp;quot;nfs&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    MS_SYNCHRONOUS,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    params.&lt;span class=&quot;built_in&quot;&gt;c_str&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (ret != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;auto&lt;/span&gt; errInfo = errno;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="code" scheme="http://doc.yaronzz.com/categories/code/"/>
    
    
      <category term="cpp" scheme="http://doc.yaronzz.com/tags/cpp/"/>
    
      <category term="nfs" scheme="http://doc.yaronzz.com/tags/nfs/"/>
    
  </entry>
  
</feed>
