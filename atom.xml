<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Yaronzz</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.yaronzz.com/"/>
  <updated>2021-12-21T08:08:35.350Z</updated>
  <id>https://www.yaronzz.com/</id>
  
  <author>
    <name>YaornzZ</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>UDP组播的说明与使用</title>
    <link href="https://www.yaronzz.com/post/udp_membership/"/>
    <id>https://www.yaronzz.com/post/udp_membership/</id>
    <published>2021-12-21T04:00:33.000Z</published>
    <updated>2021-12-21T08:08:35.350Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>网络通讯中，数据传输方式有：单播，广播和组播。单播是一对一的通信，广播则是对网络中所有主机进行通信。在需要对网络中某些主机进行通信时，单播会多次重复发送数据，广播则会造成资源浪费与安全问题。而组播是将信息发送到某个组播组，只有加入组播组的主机才能接收到消息，这种方式解决了单播情况下数据的重复拷贝及带宽的重复占用，也解决了广播方式下带宽资源的浪费。</p><p>组播中数据发送者和接收者之间是一对多点的连接方式，多个接收者加入同一个组播组，共享同一个IP地址，同时组播组中的成员是动态的，某个成员的加入和退出并不影响原有的组播组。当网络中的某些用户需要特定数据时，组播数据发送者（即组播源）仅发送一次数据，借助组播路由协议为组播数据包建立组播分发树，被传递的数据到达距离用户端尽可能近的节点后才开始复制和分发。</p><a id="more"></a><h3 id="组播地址"><a href="#组播地址" class="headerlink" title="组播地址"></a>组播地址</h3><p>组播组可以是永久的也可以是临时的。组播组地址中，有一部分由官方分配的，称为永久组播组。永久组播组保持不变的是它的ip地址，组中的成员构成可以发生变化。永久组播组中成员的数量都可以是任意的，甚至可以为零。那些没有保留下来供永久组播组使用的ip组播地址，可以被临时组播组利用。</p><p><code>224.0.0.0～224.0.0.255</code>为预留的组播地址（永久组地址），地址224.0.0.0保留不做分配，其它地址供路由协议使用；<br><code>224.0.1.0～224.0.1.255</code>是公用组播地址，可以用于Internet；<br><code>224.0.2.0～238.255.255.255</code>为用户可用的组播地址（临时组地址），全网范围内有效；<br><code>239.0.0.0～239.255.255.255</code>为本地管理组播地址，仅在特定的本地范围内有效。</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="配置流程"><a href="#配置流程" class="headerlink" title="配置流程"></a>配置流程</h3><ol><li><p>创建套接字</p><p>  由于UDP与TCP都是全双工的，所以可以使用同一个套接字进行同时收发操作。</p>  <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> UDP_MCAST_PORT 37102        <span class="comment">//组播端口</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> UDP_MCAST_ADDR <span class="meta-string">"224.0.1.88"</span> <span class="comment">//组播地址</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">auto</span> socket = socket(AF_INET,SOCK_DGRAM,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (socket &lt;= <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br></pre></td></tr></table></figure></li></ol><ol start="2"><li><p>设置端口复用</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> opt = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (setsockopt(socket, SOL_SOCKET, SO_REUSEADDR ,(<span class="keyword">char</span>*)&amp;opt, <span class="keyword">sizeof</span>(opt)) &lt; <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br></pre></td></tr></table></figure></li><li><p>绑定组播端口</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">addr</span>;</span></span><br><span class="line">addr.sin_family = AF_INET;</span><br><span class="line">addr.sin_port = htons(UDP_MCAST_PORT);</span><br><span class="line">addr.sin_addr.s_addr = htonl(INADDR_ANY);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (bind(socket, (struct sockaddr*)&amp;addr, <span class="keyword">sizeof</span>(addr)) &lt; <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br></pre></td></tr></table></figure></li><li><p>加入组播</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ip_mreq</span> <span class="title">mreq</span>;</span></span><br><span class="line">mreq.imr_multiaddr.s_addr = inet_addr(UDP_MCAST_ADDR);</span><br><span class="line">mreq.imr_interface.s_addr = htonl(INADDR_ANY);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (setsockopt(socket, IPPROTO_IP, IP_ADD_MEMBERSHIP, (<span class="keyword">char</span>*)&amp;mreq, <span class="keyword">sizeof</span>(mreq)) &lt; <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br></pre></td></tr></table></figure></li><li><p>发送与接收</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//发送</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">addrSrv</span>;</span></span><br><span class="line">addrSrv.sin_family=AF_INET;</span><br><span class="line">addrSrv.sin_addr.s_addr = inet_addr(UDP_MCAST_ADDR);</span><br><span class="line">addrSrv.sin_port=htons(UDP_MCAST_PORT);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (sendto(socket, data, dataLen, <span class="number">0</span>, (struct sockaddr *)&amp;addrSrv,<span class="keyword">sizeof</span>(addrSrv)) &gt; <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//接收</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">group_addr</span>;</span></span><br><span class="line"><span class="keyword">socklen_t</span> addr_len = <span class="keyword">sizeof</span>(group_addr);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> len = recvfrom(socket, buff, buffLen, <span class="number">0</span>, (struct sockaddr *) &amp;group_addr, (<span class="keyword">int</span> *)&amp;addr_len);</span><br><span class="line">recvIP = inet_ntoa(group_addr.sin_addr);</span><br><span class="line">recvPort = group_addr.sin_port;</span><br></pre></td></tr></table></figure></li></ol><h3 id="多网卡配置流程"><a href="#多网卡配置流程" class="headerlink" title="多网卡配置流程"></a>多网卡配置流程</h3><p>多网卡组播需要在加入组播时指定本地IP地址，并且需要在最后多加一步指定组播的出口网卡：</p><ol><li><p>加入组播</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ip_mreq</span> <span class="title">mreq</span>;</span></span><br><span class="line">mreq.imr_multiaddr.s_addr = inet_addr(UDP_MCAST_ADDR);</span><br><span class="line">mreq.imr_interface.s_addr = htonl(INADDR_ANY);</span><br><span class="line"></span><br><span class="line"><span class="comment">//指定接口接收组播信息</span></span><br><span class="line">mreq.imr_interface.s_addr = inet_addr(<span class="built_in">localIP</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (setsockopt(socket, IPPROTO_IP, IP_ADD_MEMBERSHIP, (<span class="keyword">char</span>*)&amp;mreq, <span class="keyword">sizeof</span>(mreq)) &lt; <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br></pre></td></tr></table></figure></li><li><p>指定组播出口网卡</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">in_addr</span> <span class="title">addr</span>;</span></span><br><span class="line"><span class="built_in">memset</span>(&amp;addr, <span class="number">0</span>, <span class="keyword">sizeof</span>(struct in_addr));</span><br><span class="line"></span><br><span class="line">addr.s_addr=inet_addr(<span class="built_in">localIP</span>);</span><br><span class="line"><span class="keyword">if</span> (setsockopt(socket, IPPROTO_IP, IP_MULTICAST_IF, (<span class="keyword">char</span>*)&amp;addr, <span class="keyword">sizeof</span>(addr)) &lt; <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br></pre></td></tr></table></figure></li></ol><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><p><a href="https://blog.csdn.net/wangzhen_csdn/article/details/76467811" target="_blank" rel="noopener">IP地址划分、组播地址、公有IP、私有IP</a></p></li><li><p><a href="https://blog.csdn.net/weixin_41482303/article/details/88132412" target="_blank" rel="noopener">组播基础</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;h3 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h3&gt;&lt;p&gt;网络通讯中，数据传输方式有：单播，广播和组播。单播是一对一的通信，广播则是对网络中所有主机进行通信。在需要对网络中某些主机进行通信时，单播会多次重复发送数据，广播则会造成资源浪费与安全问题。而组播是将信息发送到某个组播组，只有加入组播组的主机才能接收到消息，这种方式解决了单播情况下数据的重复拷贝及带宽的重复占用，也解决了广播方式下带宽资源的浪费。&lt;/p&gt;
&lt;p&gt;组播中数据发送者和接收者之间是一对多点的连接方式，多个接收者加入同一个组播组，共享同一个IP地址，同时组播组中的成员是动态的，某个成员的加入和退出并不影响原有的组播组。当网络中的某些用户需要特定数据时，组播数据发送者（即组播源）仅发送一次数据，借助组播路由协议为组播数据包建立组播分发树，被传递的数据到达距离用户端尽可能近的节点后才开始复制和分发。&lt;/p&gt;
    
    </summary>
    
    
      <category term="code" scheme="https://www.yaronzz.com/categories/code/"/>
    
    
      <category term="cpp" scheme="https://www.yaronzz.com/tags/cpp/"/>
    
      <category term="udp" scheme="https://www.yaronzz.com/tags/udp/"/>
    
  </entry>
  
  <entry>
    <title>WSL系统安装与使用</title>
    <link href="https://www.yaronzz.com/post/wsl_system_install/"/>
    <id>https://www.yaronzz.com/post/wsl_system_install/</id>
    <published>2021-12-08T02:47:20.000Z</published>
    <updated>2021-12-21T07:54:29.222Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>WSL是适用于 Linux 的 Windows 子系统，可让开发人员按原样运行 GNU/Linux 环境 - 包括大多数命令行工具、实用工具和应用程序 - 且不会产生传统虚拟机或双启动设置开销。</p><p><a href="https://docs.microsoft.com/zh-cn/windows/wsl/" target="_blank" rel="noopener">官方教程</a></p><a id="more"></a><h2 id="启用子系统"><a href="#启用子系统" class="headerlink" title="启用子系统"></a>启用子系统</h2><ul><li><p>控制面板 -&gt; 程序和功能 -&gt; 启用或关闭Windows功能 -&gt; 勾选 <code>适用于Linux的Windows子系统</code></p></li><li><p>控制面板 -&gt; 程序和功能 -&gt; 启用或关闭Windows功能 -&gt; 勾选 <code>虚拟机平台</code></p></li></ul><p><img src="https://s2.loli.net/2021/12/08/p3jtFmLgwvfnshu.png" alt="image-20211208114609489"></p><h2 id="安装Ubuntu"><a href="#安装Ubuntu" class="headerlink" title="安装Ubuntu"></a>安装Ubuntu</h2><ol><li><p>下载<a href="https://wsldownload.azureedge.net/Ubuntu_2004.2020.424.0_x64.appx" target="_blank" rel="noopener">Ubuntu20.04系统</a>，可以将系统下载到其他盘上</p></li><li><p>修改文件后缀名：<code>Ubuntu20.04.appx --&gt; Ubuntu.zip</code>，并解压</p></li><li><p>双击exe文件，输入用户名与密码即可</p><p><img src="https://s2.loli.net/2021/12/08/AUDceGguX1ZH7bs.png" alt="image-20211208114959128"></p></li></ol><h2 id="WSL配置与使用"><a href="#WSL配置与使用" class="headerlink" title="WSL配置与使用"></a>WSL配置与使用</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">更新</span></span><br><span class="line">wsl --update</span><br><span class="line"><span class="meta">#</span><span class="bash">查询已安装的子系统</span></span><br><span class="line">wsl -l -v</span><br><span class="line"><span class="meta">#</span><span class="bash">设置默认系统为wsl2</span></span><br><span class="line">wsl --set-default-version 2</span><br><span class="line"><span class="meta">#</span><span class="bash">将已安装的子系统升级到wsl2</span></span><br><span class="line">wsl --set-version Ubuntu 2</span><br><span class="line"><span class="meta">#</span><span class="bash">删除子系统</span></span><br><span class="line">wslconfig /unregister xxx</span><br></pre></td></tr></table></figure><ul><li>WSL2需要保证Winows版本不低于<code>19041</code></li><li>windwos下访问子系统目录，在文件夹路径栏上输入：<code>\\wsl$</code></li><li>WSL1和WSL2的区别</li></ul><p><img src="https://s2.loli.net/2021/12/09/QNCXqZuv8siFmRV.png" alt="image-20211209090047432"></p><ul><li>WSL2与VMware和VirtualBox的共存：需要VMware15.5.5+，VirtualBox 6+才能打开</li></ul><h2 id="32位交叉编译环境配置"><a href="#32位交叉编译环境配置" class="headerlink" title="32位交叉编译环境配置"></a>32位交叉编译环境配置</h2><ul><li>只支持WSL2版本</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg --add-architecture i386</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install libc6:i386 libncurses5:i386 libstdc++6:i386 zlib1g:i386 -y</span><br><span class="line">sudo apt-get install g++ -y</span><br></pre></td></tr></table></figure><h2 id="运行图形界面"><a href="#运行图形界面" class="headerlink" title="运行图形界面"></a>运行图形界面</h2><h3 id="window内核版本为21"><a href="#window内核版本为21" class="headerlink" title="window内核版本为21+"></a>window内核版本为21+</h3><p>先在windows更新WSL：<code>wsl --update</code>， 再在linux安装界面程序：<code>apt-get install gedit</code>，win10 21+系统内置了WSLG（GUI）功能，可以在Window菜单发现多了一个Ubuntu目录，其中显示了已经安装的界面程序，直接点击即可运行：</p><p><img src="https://s2.loli.net/2021/12/16/cmMN4Rrv3qiQ2y5.png" alt="image-20211216103137449"></p><h3 id="内核版本不支持"><a href="#内核版本不支持" class="headerlink" title="内核版本不支持"></a>内核版本不支持</h3><ol><li><p>安装<a href="https://sourceforge.net/projects/vcxsrv/" target="_blank" rel="noopener">VcXsrv Windows X Server download | SourceForge.net</a></p></li><li><p>打开并配置VcXsrv</p><p><img src="https://s2.loli.net/2021/12/16/YxVTGItse5mULNA.png" alt="image-20211216103507780"></p><p><img src="https://s2.loli.net/2021/12/16/DyLqijtZauOf2C7.png" alt="image-20211216103527258"></p><p><img src="https://s2.loli.net/2021/12/16/wZUgAy9H452sRbo.png" alt="image-20211216103540971"></p><ol start="3"><li><p>linux设置显示的服务端</p><ul><li>打开bashrc文件：<code>vi ~/.bashrc</code></li><li>在文件最后添加两行并保存：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">下面的IP地址为window的ip</span></span><br><span class="line">export DISPLAY=192.168.0.218:0</span><br><span class="line">export LIBGL_ALWAYS_INDIRECT=1</span><br></pre></td></tr></table></figure><ul><li><p>刷新配置：<code>source .bashrc</code></p></li><li><p>测试界面软件：<code>gedit test.ini</code></p></li></ul></li></ol></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;WSL是适用于 Linux 的 Windows 子系统，可让开发人员按原样运行 GNU/Linux 环境 - 包括大多数命令行工具、实用工具和应用程序 - 且不会产生传统虚拟机或双启动设置开销。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.microsoft.com/zh-cn/windows/wsl/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官方教程&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="软件" scheme="https://www.yaronzz.com/categories/%E8%BD%AF%E4%BB%B6/"/>
    
    
      <category term="windows" scheme="https://www.yaronzz.com/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>Qt笔记</title>
    <link href="https://www.yaronzz.com/post/qt_note/"/>
    <id>https://www.yaronzz.com/post/qt_note/</id>
    <published>2021-10-22T02:40:33.000Z</published>
    <updated>2021-12-21T07:54:29.370Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>Qt是一个1991年由Qt Company开发的跨平台C++图形用户界面应用程序开发框架。它既可以开发GUI程序，也可用于开发非GUI程序，比如控制台工具和服务器。Qt是面向对象的框架，使用特殊的代码生成扩展（称为元对象编译器(Meta Object Compiler, moc)）以及一些宏，Qt很容易扩展，并且允许真正地组件编程。</p></blockquote><a id="more"></a><h2 id="QT配置"><a href="#QT配置" class="headerlink" title="QT配置"></a>QT配置</h2><h3 id="设置代码片段"><a href="#设置代码片段" class="headerlink" title="设置代码片段"></a>设置代码片段</h3><p>配置路径：<code>工具-&gt;选项-&gt;文本编辑器-&gt;片段</code> </p><ul><li><p>文件头说明</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * @brief $$</span><br><span class="line"> * @author yaronhuang@foxmail.com</span><br><span class="line"> * @date %&#123;CurrentDate:yyyy/MM/dd&#125;</span><br><span class="line"> * @note </span><br><span class="line"> */</span><br></pre></td></tr></table></figure></li><li><p>函数注释</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * @brief $$</span><br><span class="line"> * @param string</span><br><span class="line"> * @return void</span><br><span class="line"> */</span><br></pre></td></tr></table></figure></li></ul><h3 id="库编译与引用"><a href="#库编译与引用" class="headerlink" title="库编译与引用"></a>库编译与引用</h3><p>库分为动态库和静态库，通过文件名后缀可以知道库的类型：<code>so、dll(动态库)</code>;<code>a、lib(静态库)</code>。</p><p>在windows平台下使用QT编译，库的后缀为dll和a。</p><h4 id="编译库"><a href="#编译库" class="headerlink" title="编译库"></a>编译库</h4><ol><li><p>静态库配置：</p><p>在pro文件中加入以下语句即可：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">TEMPLATE = lib      #生成库</span><br><span class="line">CONFIG += staticlib #类型为静态库</span><br></pre></td></tr></table></figure></li><li><p>动态库配置：</p><p>在pro文件中加入以下语句：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">TEMPLATE = lib      #生成库</span><br><span class="line">DEFINES += BIL_EXPORT</span><br></pre></td></tr></table></figure><p>提供给外部使用的类需要增加导出前缀：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QtCore/qglobal.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> BIL_EXPORT</span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">define</span> LUIP_SHARE Q_DECL_EXPORT</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">define</span> LUIP_SHARE Q_DECL_IMPORT</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LUIP_SHARE</span> <span class="title">SumObj</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    SumObj();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">run</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>生成的动态库目录下会出现dll和a文件，其中a文件是没用的，它并不能用于静态库，因为它是不完整的，可以看出a文件的体积也很小。</p></li></ol><h4 id="引用库"><a href="#引用库" class="headerlink" title="引用库"></a>引用库</h4><p>正常的库名格式为<code>libxxxx.a</code>指定时只需要xxxx即可，如<code>libtest.a</code>,则为 <code>-ltest</code>。</p><p>同时有动态库和静态库，那么优先链接<code>.so</code>，如果想要强制使用静态库，那么写成<code>-static -lxxxx</code>即可。不过QT编译器好像也会通过类名是否添加导入关键字<code>Q_DECL_IMPORT</code>来确定是链接动态库还是静态库。</p><p>在pro文件中加入以下语句：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LIBS   += -L$$PWD/../bin/ -ltest #引用bin目录下的test库</span><br></pre></td></tr></table></figure><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="调用SetObjectName无效"><a href="#调用SetObjectName无效" class="headerlink" title="调用SetObjectName无效"></a>调用<code>SetObjectName</code>无效</h3><p>自定义界面时，界面类继承QWidget，然后调用<code>setObjectName()</code>设置样式，但并没有起作用，解决方法如下：</p><ul><li><p>方法1：设置<code>WA_StyledBackground</code>属性<code>this-&gt;setAttribute(Qt::WA_StyledBackground);</code></p></li><li><p>方法2：将<code>QWidget</code>改成<code>QFrame</code></p></li><li><p>方法3：重写<code>paintEvent</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ClassName::paintEvent</span><span class="params">(QPaintEvent *)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  QStyleOption opt;</span><br><span class="line">  opt.init(<span class="keyword">this</span>);</span><br><span class="line">  <span class="function">QPainter <span class="title">p</span><span class="params">(<span class="keyword">this</span>)</span></span>;</span><br><span class="line">  style()-&gt;drawPrimitive(QStyle::PE_Widget, &amp;opt, &amp;p, <span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="编译异常multiple-definition-of-qMain-int-char"><a href="#编译异常multiple-definition-of-qMain-int-char" class="headerlink" title="编译异常multiple definition of qMain(int, char**)"></a>编译异常<code>multiple definition of qMain(int, char**)</code></h3><p>一般是重复定义main函数了，可以全局搜索<code>main()</code>，或者检查pro文件中是否有重复添加的cpp和h，有时给工程中乱添加文件时会导致这种情况。</p><h3 id="多个pro项目管理"><a href="#多个pro项目管理" class="headerlink" title="多个pro项目管理"></a>多个pro项目管理</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">TEMPLATE = subdirs</span><br><span class="line">CONFIG += ordered  #顺序编译</span><br><span class="line">SUBDIRS += pro0\</span><br><span class="line">pro1\</span><br><span class="line">app</span><br></pre></td></tr></table></figure><h2 id="QT知识点"><a href="#QT知识点" class="headerlink" title="QT知识点"></a>QT知识点</h2><ol><li><p>设置无标题窗口</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setWindowFlags(Qt::Window | Qt::FramelessWindowHint);</span><br></pre></td></tr></table></figure></li><li><p>显示图片</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ui-&gt;label-&gt;setPixmap(QPixmap(<span class="string">":/4.jpg"</span>));</span><br></pre></td></tr></table></figure></li><li><p>信号与槽</p><p>设置按钮名称为<code>BtnShowDialog</code> </p><p>a. 自动绑定点击信号槽（特定的函数名）</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> slots:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">on_BtnShowDialog_clicked</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><p>b. 手动绑定点击信号与槽</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> slots:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">ShowDialog</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">connect</span>(ui-&gt;BtnShowDialog, SIGNAL(clicked()), <span class="keyword">this</span>, SLOT(showDialog()));</span><br></pre></td></tr></table></figure></li><li><p>同步线程</p><ul><li><strong>QMutex</strong>互斥锁：只有一个资源，任何时间最多只有一个线程可以获取此锁</li><li><strong>QReadWriteLock</strong>读写锁：分读访问与写访问，允许多个线程同时多数据进行读访问，代替QMutex使用可以提高多线程的并发度</li><li><strong>QSemaphore</strong>信号量：有多个资源可以访问</li><li><strong>QWaitCondition</strong>条件变量：允许一个线程在一些条件满足时唤醒其他线程</li></ul></li><li><p>线程<strong>QObject::moveToThread</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QtCore/QCoreApplication&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QtCore/QObject&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QtCore/QThread&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QtCore/QDebug&gt; </span></span></span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dummy</span>:</span><span class="keyword">public</span> QObject </span><br><span class="line">&#123; </span><br><span class="line">    Q_OBJECT </span><br><span class="line"><span class="keyword">public</span>: </span><br><span class="line">    Dummy(QObject* parent=<span class="number">0</span>):QObject(parent)     &#123;&#125; </span><br><span class="line"><span class="keyword">public</span> slots: </span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">emitsig</span><span class="params">()</span> </span></span><br><span class="line"><span class="function">    </span>&#123; </span><br><span class="line">        <span class="function">emit <span class="title">sig</span><span class="params">()</span></span>; </span><br><span class="line">    &#125; </span><br><span class="line">signals: </span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">sig</span><span class="params">()</span></span>; </span><br><span class="line">&#125;; </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Object</span>:</span><span class="keyword">public</span> QObject </span><br><span class="line">&#123; </span><br><span class="line">    Q_OBJECT </span><br><span class="line"><span class="keyword">public</span>: </span><br><span class="line">    Object()&#123;&#125; </span><br><span class="line"><span class="keyword">public</span> slots: </span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">slot</span><span class="params">()</span> </span></span><br><span class="line"><span class="function">    </span>&#123; </span><br><span class="line">        qDebug()&lt;&lt;<span class="string">"from thread slot:"</span> &lt;&lt;QThread::currentThreadId(); </span><br><span class="line">    &#125; </span><br><span class="line">&#125;; </span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"main.moc"</span> </span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    <span class="function">QCoreApplication <span class="title">a</span><span class="params">(argc, argv)</span></span>; </span><br><span class="line">    qDebug()&lt;&lt;<span class="string">"main thread:"</span>&lt;&lt;QThread::currentThreadId(); </span><br><span class="line">    QThread thread; </span><br><span class="line">    Object obj; </span><br><span class="line">    Dummy dummy; </span><br><span class="line">    obj.moveToThread(&amp;thread); </span><br><span class="line">    QObject::<span class="built_in">connect</span>(&amp;dummy, SIGNAL(sig()), &amp;obj, SLOT(slot())); </span><br><span class="line">    thread.start(); </span><br><span class="line">    dummy.emitsig(); </span><br><span class="line">    <span class="keyword">return</span> a.exec(); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Qt是一个1991年由Qt Company开发的跨平台C++图形用户界面应用程序开发框架。它既可以开发GUI程序，也可用于开发非GUI程序，比如控制台工具和服务器。Qt是面向对象的框架，使用特殊的代码生成扩展（称为元对象编译器(Meta Object Compiler, moc)）以及一些宏，Qt很容易扩展，并且允许真正地组件编程。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="code" scheme="https://www.yaronzz.com/categories/code/"/>
    
    
      <category term="qt" scheme="https://www.yaronzz.com/tags/qt/"/>
    
  </entry>
  
  <entry>
    <title>Python笔记</title>
    <link href="https://www.yaronzz.com/post/python_note/"/>
    <id>https://www.yaronzz.com/post/python_note/</id>
    <published>2021-10-20T02:06:33.000Z</published>
    <updated>2021-10-20T02:26:51.810Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h2><ol><li>判断类型</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#使用isinstance或type判断变量类型</span></span><br><span class="line"><span class="comment">#isinstance可判断父类，type不支持判断父类</span></span><br><span class="line">test = A()</span><br><span class="line">check = isinstance(test, A) <span class="comment">#True</span></span><br><span class="line">check = (type(test) == A)   <span class="comment">#True</span></span><br></pre></td></tr></table></figure><ol start="2"><li>运算</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#数值的除法包含两个运算符：/ 返回一个浮点数，// 返回一个整数。</span></span><br><span class="line">a = <span class="number">10</span></span><br><span class="line">b = <span class="number">6</span></span><br><span class="line">c = a / b<span class="comment">#1.66</span></span><br><span class="line">d = a // b<span class="comment">#1</span></span><br><span class="line">e = a % b<span class="comment">#求余 4</span></span><br><span class="line">f = <span class="number">2</span> ** <span class="number">3</span>  <span class="comment">#乘方 8</span></span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="Lambda"><a href="#Lambda" class="headerlink" title="Lambda"></a>Lambda</h2><p>Lambda匿名函数的格式为：<code>lambda 参数:表达式</code></p><ul><li>参数可以多个，中间以逗号隔开</li><li>表达式只有一个，省略return</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sum</span><span class="params">(x, y)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> x + y</span><br><span class="line"><span class="comment">#使用lambda的形式为</span></span><br><span class="line">sum = <span class="keyword">lambda</span> x,y:x+y</span><br></pre></td></tr></table></figure><p>Lambda经常与map函数同时使用，用于处理列表数据：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#计算数组内元素平方，[1,9,36]</span></span><br><span class="line">list(map(<span class="keyword">lambda</span> x:x**<span class="number">2</span>, [<span class="number">1</span>,<span class="number">3</span>,<span class="number">6</span>]))</span><br><span class="line"><span class="comment">#计算两组数组内元素之和，[3,7,11,15,19]</span></span><br><span class="line">list(map(<span class="keyword">lambda</span> x, y: x + y, [<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>], [<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">10</span>]))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;基本语法&quot;&gt;&lt;a href=&quot;#基本语法&quot; class=&quot;headerlink&quot; title=&quot;基本语法&quot;&gt;&lt;/a&gt;基本语法&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;判断类型&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#使用isinstance或type判断变量类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#isinstance可判断父类，type不支持判断父类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;test = A()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;check = isinstance(test, A) &lt;span class=&quot;comment&quot;&gt;#True&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;check = (type(test) == A)   &lt;span class=&quot;comment&quot;&gt;#True&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;运算&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#数值的除法包含两个运算符：/ 返回一个浮点数，// 返回一个整数。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b = &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c = a / b	&lt;span class=&quot;comment&quot;&gt;#1.66&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;d = a // b	&lt;span class=&quot;comment&quot;&gt;#1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;e = a % b	&lt;span class=&quot;comment&quot;&gt;#求余 4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; ** &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;#乘方 8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="code" scheme="https://www.yaronzz.com/categories/code/"/>
    
    
      <category term="python" scheme="https://www.yaronzz.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>SQLite笔记</title>
    <link href="https://www.yaronzz.com/post/sqlite_note/"/>
    <id>https://www.yaronzz.com/post/sqlite_note/</id>
    <published>2021-10-18T03:06:33.000Z</published>
    <updated>2021-10-20T02:12:11.413Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><code>SQLite</code> 是一款轻型的数据库，在嵌入式设备中应用十分广泛，它支持<code>Windows/Linux/Unix</code>等等主流的操作系统，其源代码不受版权限制。</p><p>优点：</p><ul><li>不需要安装与配置，以文件的形式作为数据库</li><li>轻量、小型，对嵌入式设备十分友好</li><li>事务是完全兼容 ACID 的，允许从多个进程或线程安全访问</li><li>支持 SQL92（SQL2）标准的大多数查询语言的功能</li></ul><p><code>SQLite</code>的命令包括：</p><table><thead><tr><th>分类</th><th>命令</th><th>描述</th></tr></thead><tbody><tr><td>表操作</td><td>CREATE</td><td>创建表</td></tr><tr><td>表操作</td><td>ALTER</td><td>修改表</td></tr><tr><td>表操作</td><td>DROP</td><td>删除表</td></tr><tr><td>记录操作</td><td>INSERT</td><td>插入记录</td></tr><tr><td>记录操作</td><td>UPDATE</td><td>修改更新表记录</td></tr><tr><td>记录操作</td><td>DELETE</td><td>删除记录</td></tr><tr><td>检索</td><td>SELECT</td><td>查询记录</td></tr></tbody></table><a id="more"></a><h2 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h2><h3 id="表操作"><a href="#表操作" class="headerlink" title="表操作"></a>表操作</h3><h4 id="创建和删除表"><a href="#创建和删除表" class="headerlink" title="创建和删除表"></a>创建和删除表</h4><p>创建格式：<code>CREATE TABLE IF NOT EXISTS 表名 (列名 类型)</code><br>删除格式：<code>DROP 表名</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE IF NOT EXISTS &quot;student&quot; (</span><br><span class="line">    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,</span><br><span class="line">    name VARCHAR(30) NOT NULL,</span><br><span class="line">    age FLOAT);</span><br></pre></td></tr></table></figure><h4 id="更新sqlite-sequence"><a href="#更新sqlite-sequence" class="headerlink" title="更新sqlite_sequence"></a>更新sqlite_sequence</h4><p>由于在Sqlite中使用自增长字段，引擎会自动产生一个<code>sqlite_sequence</code>表，用于记录每个表的自增长字段的已使用的最大值，所以要一起更新下。如果有没有设置自增长，则跳过此步骤。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE &quot;sqlite_sequence&quot; SET seq &#x3D; 3 WHERE name &#x3D; &#39;Student&#39;;</span><br></pre></td></tr></table></figure><h4 id="修改表名称"><a href="#修改表名称" class="headerlink" title="修改表名称"></a>修改表名称</h4><p>格式：<code>ALTER TABLE 旧表名 RENAME TO 新表名</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE or_sql_table RENAME TO new_table;</span><br></pre></td></tr></table></figure><h4 id="增加表字段"><a href="#增加表字段" class="headerlink" title="增加表字段"></a>增加表字段</h4><p>格式：<code>ALTER TABLE 表名 ADD COLUMN 列名 数据类型</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE new_table ADD COLUMN sex Text;</span><br></pre></td></tr></table></figure><h4 id="查询表结构"><a href="#查询表结构" class="headerlink" title="查询表结构"></a>查询表结构</h4><p>格式：<code>RAGMA TABLE_INFO (表名)</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PRAGMA TABLE_INFO (new_table);</span><br></pre></td></tr></table></figure><h3 id="记录操作"><a href="#记录操作" class="headerlink" title="记录操作"></a>记录操作</h3><h4 id="插入和删除记录"><a href="#插入和删除记录" class="headerlink" title="插入和删除记录"></a>插入和删除记录</h4><p>插入格式：<code>INSERT INTO 表名 (列名1,列名2,...) VALUES (值1,值2,...)</code></p><p>删除格式：<code>DELETE FROM 表名</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO sutdent (name,age) VALUES (&#39;xiaoming&#39;,18);</span><br><span class="line">DELETE FROM student WHERE name &#x3D; &#39;xiaoming&#39;;</span><br></pre></td></tr></table></figure><h4 id="更新记录"><a href="#更新记录" class="headerlink" title="更新记录"></a>更新记录</h4><p>格式：<code>UPDATE 表名 SET 列名 = 列值 WHERE 条件</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE student SET age &#x3D; 18 WHERE name &#x3D; &#39;xiaoming&#39;;</span><br></pre></td></tr></table></figure><h2 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h2><h3 id="LIKE与GLOB搜索"><a href="#LIKE与GLOB搜索" class="headerlink" title="LIKE与GLOB搜索"></a>LIKE与GLOB搜索</h3><p>格式：<code>SELECT 列名 FROM 表名 WHERE 列名 LIKE &quot;XXX&quot;</code>或<code>SELECT 列名 FROM 表名 WHERE 列名 GLOB &quot;XXX&quot;</code></p><ul><li><p>LIKE关键字通配符包括：<code>%：表示有N个字符</code>和 <code>_：表示有1个字符</code>，不区分大小写</p></li><li><p>GLOB关键字通配符包括：<code>*：表示有N个字符</code>和 <code>?：表示有1个字符</code>，区分大小写</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM student WHERE name LINK  &#39;%ming&#39;</span><br><span class="line">SELECT * FROM student WHERE name LINK  &#39;%min_&#39;</span><br></pre></td></tr></table></figure><h3 id="LIMIT和OFFSET翻页"><a href="#LIMIT和OFFSET翻页" class="headerlink" title="LIMIT和OFFSET翻页"></a>LIMIT和OFFSET翻页</h3><p>格式：<code>SELECT 列名 FROM 表名 LIMIT 数量 OFFSET 偏移;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-- 显示1到4的行</span><br><span class="line">SELECT * FROM student LIMIT 3 OFFSET 1</span><br></pre></td></tr></table></figure><h3 id="分组与排序"><a href="#分组与排序" class="headerlink" title="分组与排序"></a>分组与排序</h3><p>分组格式：<code>SELECT 列名 FROM 表名 WHERE 条件 GROUP BY 列名</code></p><p>排序格式：<code>SELECT 列名 FROM 表名 WHERE 条件 ORDER BY 列名 关键字;</code></p><p>关键字包括：</p><ul><li><code>ASC</code>：升序</li><li><code>DESC</code>：降序</li></ul><h3 id="唯一值"><a href="#唯一值" class="headerlink" title="唯一值"></a>唯一值</h3><p>格式：<code>SELECT DISTINCT 列名 FROM 表名</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-- 查询所有学生名</span><br><span class="line">SELECT DISTINCT name FROM student</span><br></pre></td></tr></table></figure><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><ol><li><p>计数<code>COUNT</code></p></li><li><p>最大最小值<code>MAX\MIN</code></p></li><li><p>平均值<code>AVG</code></p></li><li><p>和<code>SUM</code></p></li><li><p>绝对值<code>ABS</code></p></li><li><p>获取字符串长度<code>LENGTH</code></p></li><li><p>转换大小写<code>UPPER\LOWER</code></p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;SQLite&lt;/code&gt; 是一款轻型的数据库，在嵌入式设备中应用十分广泛，它支持&lt;code&gt;Windows/Linux/Unix&lt;/code&gt;等等主流的操作系统，其源代码不受版权限制。&lt;/p&gt;
&lt;p&gt;优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不需要安装与配置，以文件的形式作为数据库&lt;/li&gt;
&lt;li&gt;轻量、小型，对嵌入式设备十分友好&lt;/li&gt;
&lt;li&gt;事务是完全兼容 ACID 的，允许从多个进程或线程安全访问&lt;/li&gt;
&lt;li&gt;支持 SQL92（SQL2）标准的大多数查询语言的功能&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;SQLite&lt;/code&gt;的命令包括：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;分类&lt;/th&gt;
&lt;th&gt;命令&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;表操作&lt;/td&gt;
&lt;td&gt;CREATE&lt;/td&gt;
&lt;td&gt;创建表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;表操作&lt;/td&gt;
&lt;td&gt;ALTER&lt;/td&gt;
&lt;td&gt;修改表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;表操作&lt;/td&gt;
&lt;td&gt;DROP&lt;/td&gt;
&lt;td&gt;删除表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;记录操作&lt;/td&gt;
&lt;td&gt;INSERT&lt;/td&gt;
&lt;td&gt;插入记录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;记录操作&lt;/td&gt;
&lt;td&gt;UPDATE&lt;/td&gt;
&lt;td&gt;修改更新表记录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;记录操作&lt;/td&gt;
&lt;td&gt;DELETE&lt;/td&gt;
&lt;td&gt;删除记录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;检索&lt;/td&gt;
&lt;td&gt;SELECT&lt;/td&gt;
&lt;td&gt;查询记录&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
    
    </summary>
    
    
      <category term="code" scheme="https://www.yaronzz.com/categories/code/"/>
    
    
      <category term="sqlite" scheme="https://www.yaronzz.com/tags/sqlite/"/>
    
  </entry>
  
  <entry>
    <title>Python字符串</title>
    <link href="https://www.yaronzz.com/post/python_string/"/>
    <id>https://www.yaronzz.com/post/python_string/</id>
    <published>2021-10-15T00:40:33.000Z</published>
    <updated>2021-10-15T01:09:34.827Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h2><p>字符串的索引是只读，不能修改，从左到右的索引以<code>0</code>开始，从右到左的索引以<code>-1</code>开始（因为<code>-0=0</code>程序无法识别左右）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">test = <span class="string">'name'</span></span><br><span class="line">c1 = test[<span class="number">0</span>]  <span class="comment">#n</span></span><br><span class="line">c2 = test[<span class="number">-1</span>] <span class="comment">#e</span></span><br><span class="line">c3 = test[<span class="number">-2</span>] <span class="comment">#m</span></span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="截取"><a href="#截取" class="headerlink" title="截取"></a>截取</h2><p>从字符串中获取子串，类似<code>substring</code>之类的功能，也是以索引来获取。</p><p>格式为：<code>字符串[头下标，尾下标]</code>，采用前闭后开的规则，表示截取到<code>尾下标</code>前一个字符，示例如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">test = <span class="string">'name'</span></span><br><span class="line">c1 = test[<span class="number">0</span>:<span class="number">-1</span>] <span class="comment">#nam</span></span><br><span class="line">c2 = test[<span class="number">0</span>:<span class="number">3</span>]  <span class="comment">#nam</span></span><br><span class="line">c3 = test[<span class="number">0</span>:]   <span class="comment">#name</span></span><br><span class="line">c4 = test[:<span class="number">3</span>]   <span class="comment">#nam</span></span><br></pre></td></tr></table></figure><h2 id="忽略转义字符"><a href="#忽略转义字符" class="headerlink" title="忽略转义字符"></a>忽略转义字符</h2><p>此用法最适合对<code>windows</code>的路径做处理，路径格式一般为<code>C:\user\file.txt</code>，在代码中需要对转义字符<code>\</code>做处理，操作起来比较繁琐。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#反斜杠可以用来转义，使用r可以让反斜杠不发生转义</span></span><br><span class="line">path = <span class="string">"C:\\user\\file.txt"</span></span><br><span class="line">path2 = <span class="string">r"C:\user\file.txt"</span></span><br><span class="line">test = <span class="string">r"this is a line with \n"</span></span><br></pre></td></tr></table></figure><h2 id="字符串拼接"><a href="#字符串拼接" class="headerlink" title="字符串拼接"></a>字符串拼接</h2><p>python提供多种拼接方式，常见如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#最终组成this is my name</span></span><br><span class="line">s1 = <span class="string">'my'</span></span><br><span class="line">s2 = <span class="string">'name'</span></span><br><span class="line"><span class="comment">#普通拼接</span></span><br><span class="line">s3 = <span class="string">"this is "</span> + s1 + <span class="string">" "</span> + s2</span><br><span class="line"><span class="comment">#format</span></span><br><span class="line">s3 = <span class="string">'this is &#123;&#125; &#123;&#125;'</span>.format(s1, s2)</span><br><span class="line">s3 = <span class="string">'this is &#123;1&#125; &#123;0&#125;'</span>.format(s2, s1)</span><br><span class="line"><span class="comment">#f关键字</span></span><br><span class="line">s3 = <span class="string">f'this is <span class="subst">&#123;s1&#125;</span> <span class="subst">&#123;s2&#125;</span>'</span></span><br></pre></td></tr></table></figure><h2 id="打印"><a href="#打印" class="headerlink" title="打印"></a>打印</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">test = <span class="string">'name'</span></span><br><span class="line">print(test)</span><br><span class="line">print(test, end=<span class="string">''</span>)<span class="comment">#不换行</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;索引&quot;&gt;&lt;a href=&quot;#索引&quot; class=&quot;headerlink&quot; title=&quot;索引&quot;&gt;&lt;/a&gt;索引&lt;/h2&gt;&lt;p&gt;字符串的索引是只读，不能修改，从左到右的索引以&lt;code&gt;0&lt;/code&gt;开始，从右到左的索引以&lt;code&gt;-1&lt;/code&gt;开始（因为&lt;code&gt;-0=0&lt;/code&gt;程序无法识别左右）&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;test = &lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c1 = test[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]  &lt;span class=&quot;comment&quot;&gt;#n&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c2 = test[&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;] &lt;span class=&quot;comment&quot;&gt;#e&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c3 = test[&lt;span class=&quot;number&quot;&gt;-2&lt;/span&gt;] &lt;span class=&quot;comment&quot;&gt;#m&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="code" scheme="https://www.yaronzz.com/categories/code/"/>
    
    
      <category term="python" scheme="https://www.yaronzz.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>C++Lambda表达式</title>
    <link href="https://www.yaronzz.com/post/cpp_lambda/"/>
    <id>https://www.yaronzz.com/post/cpp_lambda/</id>
    <published>2021-10-14T04:40:33.000Z</published>
    <updated>2021-10-15T01:09:34.802Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>C++ 11 中的 Lambda 表达式用于定义并创建匿名的函数对象，以简化编程工作。<code>Lambda</code> 的语法形式如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[捕获列表] (参数) <span class="keyword">mutable</span> 或 exception 声明 -&gt; 返回值类型 &#123;函数体&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//计算两个值的和</span></span><br><span class="line"><span class="keyword">auto</span> func = [](<span class="keyword">int</span> a, <span class="keyword">int</span> b) -&gt; <span class="keyword">int</span>&#123;<span class="keyword">return</span> a+b;&#125;;</span><br><span class="line"><span class="comment">//当返回值的类型是确定时，可以忽略返回值</span></span><br><span class="line"><span class="keyword">auto</span> func = [](<span class="keyword">int</span> a, <span class="keyword">int</span> b)&#123;<span class="keyword">return</span> a + b;&#125;;</span><br><span class="line"><span class="comment">//调用</span></span><br><span class="line"><span class="keyword">int</span> sum = func(<span class="number">1</span>, <span class="number">3</span>);</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="语法分析"><a href="#语法分析" class="headerlink" title="语法分析"></a>语法分析</h2><h3 id="捕获列表"><a href="#捕获列表" class="headerlink" title="捕获列表"></a>捕获列表</h3><p>Lambda 表达式相当于一个类，那么捕获列表就是传递给这个类的类成员。比如：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Labmda</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">int</span> test;</span><br><span class="line">    Labmda(<span class="keyword">int</span> value):test(value)</span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">run</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a + b + test;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> test = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">auto</span> func = Labmda(test);</span><br><span class="line">    <span class="keyword">int</span> sum = func.<span class="built_in">run</span>(<span class="number">1</span>, <span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用Lambda 表达式的写法</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> test = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">auto</span> func = [test](<span class="keyword">int</span> a, <span class="keyword">int</span> b)&#123;<span class="keyword">return</span> a + b + test;&#125;;</span><br><span class="line">    <span class="keyword">int</span> sum = func(<span class="number">1</span>, <span class="number">3</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>捕获列表有以下格式：</p><table><thead><tr><th>格式</th><th>描述</th></tr></thead><tbody><tr><td>[]</td><td>不带任何参数</td></tr><tr><td>[=]</td><td>Lambda表达式之前的局部变量，包括所在类的this，变量按值方式传递</td></tr><tr><td>[&amp;]</td><td>Lambda表达式之前的局部变量，包括所在类的this，变量按引用方式传递</td></tr><tr><td>[this]</td><td>Lambda表达式所在类的this</td></tr><tr><td>[a]</td><td>Lambda表达式之前的局部变量a的值，也可以传入多个值，如<code>[a , b]</code></td></tr><tr><td>[&amp;a]</td><td>Lambda表达式之前的局部变量a的引用</td></tr></tbody></table><h3 id="关键字声明"><a href="#关键字声明" class="headerlink" title="关键字声明"></a>关键字声明</h3><p>关键字声明一般都很少用到，也不建议随便使用，可以忽略不计。</p><h4 id="mutable"><a href="#mutable" class="headerlink" title="mutable"></a><code>mutable</code></h4><p>当捕获列表以值的方式传递时有效，加上此关键字后，可以修改Lambda类成员（带const修饰符）。比如：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> test = <span class="number">10</span>;</span><br><span class="line"><span class="comment">//编译报错，test成员不能修改</span></span><br><span class="line"><span class="keyword">auto</span> func = [test](<span class="keyword">int</span> a, <span class="keyword">int</span> b)&#123;test = <span class="number">8</span>; <span class="keyword">return</span> a + b + test;&#125;; </span><br><span class="line"><span class="comment">//编译正常</span></span><br><span class="line"><span class="keyword">auto</span> func = [test](<span class="keyword">int</span> a, <span class="keyword">int</span> b)<span class="keyword">mutable</span> &#123;test = <span class="number">8</span>; <span class="keyword">return</span> a + b + test;&#125;;</span><br></pre></td></tr></table></figure><p>这里需要注意的是：Lambda类成员<code>test</code>修改之后，并不会改变外部<code>int test</code>的值。</p><h4 id="exception"><a href="#exception" class="headerlink" title="exception"></a><code>exception</code></h4><p>exception 声明用于指定函数抛出的异常，如抛出整数类型的异常，可以使用 throw(int)</p><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><h3 id="捕获列表按值传递"><a href="#捕获列表按值传递" class="headerlink" title="捕获列表按值传递"></a>捕获列表按值传递</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> test = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">auto</span> func = [=](<span class="keyword">int</span> a, <span class="keyword">int</span> b)&#123;<span class="keyword">return</span> a + b + test;&#125;;</span><br><span class="line"><span class="keyword">auto</span> func2 = [test](<span class="keyword">int</span> a, <span class="keyword">int</span> b)&#123;<span class="keyword">return</span> a + b + test;&#125;;</span><br><span class="line"><span class="keyword">int</span> sum = func(<span class="number">1</span>, <span class="number">3</span>); <span class="comment">//sum等于14</span></span><br></pre></td></tr></table></figure><p>这里需要注意的是<code>func</code>表达式中<code>test</code>的值只更新到表达式之前：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> test = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">auto</span> func = [=](<span class="keyword">int</span> a, <span class="keyword">int</span> b)&#123;<span class="keyword">return</span> a + b + test;&#125;;</span><br><span class="line">test = <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> sum = func(<span class="number">1</span>, <span class="number">3</span>); <span class="comment">//sum还是等于14</span></span><br></pre></td></tr></table></figure><h3 id="捕获列表按引用传递"><a href="#捕获列表按引用传递" class="headerlink" title="捕获列表按引用传递"></a>捕获列表按引用传递</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> test = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">auto</span> func = [&amp;](<span class="keyword">int</span> a, <span class="keyword">int</span> b)&#123;test = <span class="number">5</span>; <span class="keyword">return</span> a + b + test;&#125;;</span><br><span class="line"><span class="keyword">auto</span> func2 = [&amp;test](<span class="keyword">int</span> a, <span class="keyword">int</span> b)&#123;test = <span class="number">5</span>; <span class="keyword">return</span> a + b + test;&#125;;</span><br><span class="line"><span class="keyword">int</span> sum = func(<span class="number">1</span>, <span class="number">3</span>); <span class="comment">//sum等于9，test等于5</span></span><br></pre></td></tr></table></figure><p>这里<code>func</code>表达式中<code>test</code>的值就能随时更新：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> test = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">auto</span> func = [&amp;](<span class="keyword">int</span> a, <span class="keyword">int</span> b)&#123;<span class="keyword">return</span> a + b + test;&#125;;</span><br><span class="line">test = <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> sum = func(<span class="number">1</span>, <span class="number">3</span>); <span class="comment">//sum等于9，test等于5</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;C++ 11 中的 Lambda 表达式用于定义并创建匿名的函数对象，以简化编程工作。&lt;code&gt;Lambda&lt;/code&gt; 的语法形式如下：&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[捕获列表] (参数) &lt;span class=&quot;keyword&quot;&gt;mutable&lt;/span&gt; 或 exception 声明 -&amp;gt; 返回值类型 &amp;#123;函数体&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//计算两个值的和&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;auto&lt;/span&gt; func = [](&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b) -&amp;gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;#123;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; a+b;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//当返回值的类型是确定时，可以忽略返回值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;auto&lt;/span&gt; func = [](&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b)&amp;#123;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; a + b;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; sum = func(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="code" scheme="https://www.yaronzz.com/categories/code/"/>
    
    
      <category term="cpp" scheme="https://www.yaronzz.com/tags/cpp/"/>
    
      <category term="lambda" scheme="https://www.yaronzz.com/tags/lambda/"/>
    
  </entry>
  
  <entry>
    <title>Linux常用命令</title>
    <link href="https://www.yaronzz.com/post/linux_cmd/"/>
    <id>https://www.yaronzz.com/post/linux_cmd/</id>
    <published>2021-10-13T04:40:33.000Z</published>
    <updated>2021-12-21T07:54:29.321Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="目录与文件"><a href="#目录与文件" class="headerlink" title="目录与文件"></a>目录与文件</h2><ol><li>创建目录：<code>mkdir xxx</code></li><li>删除目录：<code>rm -rf xxx</code></li><li>切换目录：<code>cd xxx</code>，返回：<code>cd -</code></li><li>复制目录：<code>cp ./test ./test3 -r -p</code>，<code>-r</code>表示递归，<code>-p</code>表示保留文件属性</li><li>创建文件：<code>touch xxx.txt</code></li><li>复制文件：<code>cp xxx.txt newxxx.txt</code></li><li>查看文件：<code>cat xxx.txt</code>，最后5行：<code>cat xxx.txt | tail -n 5</code></li></ol><a id="more"></a><h2 id="压缩解压"><a href="#压缩解压" class="headerlink" title="压缩解压"></a>压缩解压</h2><ol><li>zip加密：<code>zip -r xxx.zip ./* -P &quot;123&quot;</code>，解密：<code>unzip -P &quot;123&quot; xxx.zip</code></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">-A 调整可执行的自动解压缩文件。</span><br><span class="line">-b&lt;工作目录&gt; 指定暂时存放文件的目录。</span><br><span class="line">-c 替每个被压缩的文件加上注释。</span><br><span class="line">-d 从压缩文件内删除指定的文件。</span><br><span class="line">-D 压缩文件内不建立目录名称。</span><br><span class="line">-f 更新现有的文件。</span><br><span class="line">-F 尝试修复已损坏的压缩文件。</span><br><span class="line">-g 将文件压缩后附加在既有的压缩文件之后，而非另行建立新的压缩文件。</span><br><span class="line">-h 在线帮助。</span><br><span class="line">-i&lt;范本样式&gt; 只压缩符合条件的文件。</span><br><span class="line">-j 只保存文件名称及其内容，而不存放任何目录名称。</span><br><span class="line">-J 删除压缩文件前面不必要的数据。</span><br><span class="line">-k 使用MS-DOS兼容格式的文件名称。</span><br><span class="line">-l 压缩文件时，把LF字符置换成LF+CR字符。</span><br><span class="line">-ll 压缩文件时，把LF+CR字符置换成LF字符。</span><br><span class="line">-L 显示版权信息。</span><br><span class="line">-m 将文件压缩并加入压缩文件后，删除原始文件，即把文件移到压缩文件中。</span><br><span class="line">-n&lt;字尾字符串&gt; 不压缩具有特定字尾字符串的文件。</span><br><span class="line">-o 以压缩文件内拥有最新更改时间的文件为准，将压缩文件的更改时间设成和该文件相同。</span><br><span class="line">-q 不显示指令执行过程。</span><br><span class="line">-r 递归处理，将指定目录下的所有文件和子目录一并处理。</span><br><span class="line">-S 包含系统和隐藏文件。</span><br><span class="line">-t&lt;日期时间&gt; 把压缩文件的日期设成指定的日期。</span><br><span class="line">-T 检查备份文件内的每个文件是否正确无误。</span><br><span class="line">-u 与 -f 参数类似，但是除了更新现有的文件外，也会将压缩文件中的其他文件解压缩到目录中。</span><br><span class="line">-v 显示指令执行过程或显示版本信息。</span><br><span class="line">-V 保存VMS操作系统的文件属性。</span><br><span class="line">-w 在文件名称里假如版本编号，本参数仅在VMS操作系统下有效。</span><br><span class="line">-x&lt;范本样式&gt; 压缩时排除符合条件的文件。</span><br><span class="line">-X 不保存额外的文件属性。</span><br><span class="line">-y 直接保存符号连接，而非该连接所指向的文件，本参数仅在UNIX之类的系统下有效。</span><br><span class="line">-z 替压缩文件加上注释。</span><br><span class="line"><span class="meta">-$</span><span class="bash"> 保存第一个被压缩文件所在磁盘的卷册名称。</span></span><br><span class="line">-&lt;压缩效率&gt; 压缩效率是一个介于1-9的数值。</span><br></pre></td></tr></table></figure><ol start="2"><li>tar压缩：<code>tar -zcvf xxx.tar.gz ./*</code>，tar解压：<code>tar -zxvf xxx.tar.gz -C /opt</code></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">c:  创建文档</span><br><span class="line">t： 列出存档内容</span><br><span class="line">x： 提取存档</span><br><span class="line">f： filename 要操作的文档名</span><br><span class="line">v： 详细信息</span><br></pre></td></tr></table></figure><h2 id="过滤、管道与重定向"><a href="#过滤、管道与重定向" class="headerlink" title="过滤、管道与重定向"></a>过滤、管道与重定向</h2><ol><li>文件内容查找</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">过滤出文件 /etc/passwd 中包含 `root` 的记录</span></span><br><span class="line">grep 'root' /etc/passwd</span><br><span class="line"><span class="meta">#</span><span class="bash">过滤出目录 /var/<span class="built_in">log</span>/ 目录中包含linux的记录(递归查找)</span></span><br><span class="line">grep -r 'linux' /var/log/</span><br></pre></td></tr></table></figure><ol start="2"><li>输出过滤</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">打印/etc/passwd 文件中包含 `root` 的记录</span></span><br><span class="line">cat /etc/passwd \| grep 'root'</span><br></pre></td></tr></table></figure><ol start="3"><li>输出重定向</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">输出重定向到一个文件中</span></span><br><span class="line">echo 'Hello World' &gt; test.txt</span><br></pre></td></tr></table></figure><h2 id="运维命令"><a href="#运维命令" class="headerlink" title="运维命令"></a>运维命令</h2><ol><li>测试网络</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">发送 4 个 ping 包, 检查与其是否联通</span></span><br><span class="line">ping -c 4 cloud.tencent.com</span><br></pre></td></tr></table></figure><ol start="2"><li>端口查询</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">列出所有处于监听状态的tcp端口</span></span><br><span class="line">netstat -lt</span><br><span class="line"><span class="meta">#</span><span class="bash">查看所有的端口信息, 包括 PID 和进程名称</span></span><br><span class="line">netstat -tulpn</span><br><span class="line"><span class="meta">#</span><span class="bash">查看系统位数</span></span><br><span class="line">getconf LONG_BIT</span><br></pre></td></tr></table></figure><ol start="3"><li>进程操作</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">查询运行的进程</span></span><br><span class="line">ps -elf</span><br><span class="line"><span class="meta">#</span><span class="bash">过滤查询进程</span></span><br><span class="line"><span class="meta">#</span><span class="bash">a不与terminal有关的所有进程; u有效用户进程; x完整的信息</span></span><br><span class="line">ps aux | grep 'ssh'</span><br><span class="line"><span class="meta">#</span><span class="bash">动态显示运行的进程（动态表格）</span></span><br><span class="line">top</span><br><span class="line"><span class="meta">#</span><span class="bash">杀进程</span></span><br><span class="line">killall -9 xxxx</span><br></pre></td></tr></table></figure><ol start="4"><li>NFS挂载</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">挂载目录d:\demo到/mnt/cp下(cp目录需要先创建)</span></span><br><span class="line">mount -t nfs -o nolock 10.13.150.244:/d/demo /mnt/cp</span><br><span class="line"><span class="meta">#</span><span class="bash">卸载目录</span></span><br><span class="line">mount -v /mnt/cp</span><br></pre></td></tr></table></figure><h2 id="日期时间"><a href="#日期时间" class="headerlink" title="日期时间"></a>日期时间</h2><p>获取系统时间：<code>date</code>，输入格式：<code>Tue Sep 14 11:05:51 CST 2021</code></p><p>其中CST表示上海时区，如果是UTC，则表示伦敦时区。如果想设置系统时区位东八区（北京时间），则运行以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">当前UTC时间减8小时</span></span><br><span class="line">cstTimeStr=$(date '+%Y-%m-%d %H:%M:%S' -d@$(($(date +%s)-60*60*8)))</span><br><span class="line">date -s "$cstTimeStr"</span><br><span class="line"><span class="meta">#</span><span class="bash">拷贝时区文件</span></span><br><span class="line">cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br></pre></td></tr></table></figure><p>date命令用法：%Y表示年，%m表示月，%d表示日，%H表示小时，%M表示分钟，%S表示秒，%s表示从 1970 年 1 月 1 日 00:00:00 UTC 到目前为止的秒数。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">显示时间</span></span><br><span class="line">date "+cur time: %Y-%m-%d %H:%M:%S"</span><br><span class="line"><span class="meta">#</span><span class="bash">显示计算之后的时间</span></span><br><span class="line">date "+cur time: %Y-%m-%d %H:%M:%S" -d "-3 hour"</span><br><span class="line"><span class="meta">#</span><span class="bash">时间戳</span></span><br><span class="line">date +%s</span><br><span class="line"><span class="meta">#</span><span class="bash">设置时间</span></span><br><span class="line">date -s "2050-09-01 01:05:30"</span><br></pre></td></tr></table></figure><h2 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h2><p>查找命令：<code>find [path] [option] [action]</code></p><p>通过文件时间进行查找：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">查找目录下今天修改的文件</span></span><br><span class="line">find ./ -mtime 0</span><br><span class="line"><span class="meta">#</span><span class="bash">查找目录下昨天修改的文件</span></span><br><span class="line">find ./ -mtion 1</span><br></pre></td></tr></table></figure><p>通过文件名与大小进行查找：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">查找文件名</span></span><br><span class="line">find ./ -name 'config.ini'</span><br><span class="line"><span class="meta">#</span><span class="bash">查找大于10k的文件</span></span><br><span class="line">find ./ -size +10k</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;目录与文件&quot;&gt;&lt;a href=&quot;#目录与文件&quot; class=&quot;headerlink&quot; title=&quot;目录与文件&quot;&gt;&lt;/a&gt;目录与文件&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;创建目录：&lt;code&gt;mkdir xxx&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;删除目录：&lt;code&gt;rm -rf xxx&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;切换目录：&lt;code&gt;cd xxx&lt;/code&gt;，返回：&lt;code&gt;cd -&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;复制目录：&lt;code&gt;cp ./test ./test3 -r -p&lt;/code&gt;，&lt;code&gt;-r&lt;/code&gt;表示递归，&lt;code&gt;-p&lt;/code&gt;表示保留文件属性&lt;/li&gt;
&lt;li&gt;创建文件：&lt;code&gt;touch xxx.txt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;复制文件：&lt;code&gt;cp xxx.txt newxxx.txt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;查看文件：&lt;code&gt;cat xxx.txt&lt;/code&gt;，最后5行：&lt;code&gt;cat xxx.txt | tail -n 5&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="linux" scheme="https://www.yaronzz.com/categories/linux/"/>
    
    
      <category term="shell" scheme="https://www.yaronzz.com/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>Qt-Qss笔记</title>
    <link href="https://www.yaronzz.com/post/qt_qss/"/>
    <id>https://www.yaronzz.com/post/qt_qss/</id>
    <published>2021-10-11T03:12:30.000Z</published>
    <updated>2021-10-20T02:12:11.406Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>QT使用QSS<code>（Qt Style Sheet）</code>来设置控件样式并进行个性化定制和界面美化。QSS的语法和CSS十分类似，都是使用选择器来配置控件属性。</p><p>QT导入QSS样式文件的方式也十分简单，只需要调用<code>setStyleSheet</code>进行设置：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">QApplication <span class="title">app</span><span class="params">(argc, argv)</span></span>;</span><br><span class="line"><span class="function">QFile <span class="title">qss</span><span class="params">(<span class="string">"style.qss"</span>)</span></span>;</span><br><span class="line">qss.<span class="built_in">open</span>(QFile::ReadOnly);</span><br><span class="line">app.setStyleSheet(qss.readAll());</span><br><span class="line">qss.<span class="built_in">close</span>();</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="QSS语法"><a href="#QSS语法" class="headerlink" title="QSS语法"></a>QSS语法</h2><p>QSS同CSS语法规则类似：<br><code>selector {attribute:value};</code><br>其中：</p><ul><li><code>selector</code>选择器：通常情况下为控件类名（如<code>QPushButton</code>）；</li><li><code>attribute</code>属性：待设置的样式表属性（如<code>background-color</code>）；</li><li><code>value</code>值：属性赋值（如<code>rgb(40, 85, 20);</code>）；</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">QPushButton</span> &#123; <span class="attribute">color</span>: red &#125;</span><br></pre></td></tr></table></figure><p>Qt样式表<strong>通常不区分大小写</strong>(即，color、Color、color和color指的是同一属性)，但是是<strong>类名、对象名和Qt属性名</strong>，它们区分大小写。</p><p><code>selector</code>选择器的有多种使用方式，如下：</p><table><thead><tr><th align="left">选择器</th><th align="left">举例</th><th align="left">解释</th></tr></thead><tbody><tr><td align="left">通用选择器</td><td align="left">*</td><td align="left">应用于QT的所有控件</td></tr><tr><td align="left">类选择器1</td><td align="left">QPushButton</td><td align="left">只作用于QPushButton及其子类的实例</td></tr><tr><td align="left">类选择器2</td><td align="left">.QPushButton</td><td align="left">只作用于QPushButton</td></tr><tr><td align="left">组选择器</td><td align="left">QPushButton,QComboBox</td><td align="left">作用于QPushButton和QComboBox及其子类的实例</td></tr><tr><td align="left">属性选择器</td><td align="left">QPushButton[flat=“false”]</td><td align="left">作用于非平面（flat=“false”）的QPushButton实例。</td></tr><tr><td align="left">ID选择器</td><td align="left">QPushButton#okButton</td><td align="left">作用于对象名称为okButton的所有QPushButton实例。</td></tr><tr><td align="left">后代选择器</td><td align="left">QDialog QPushButton</td><td align="left">匹配作为QDialog的子体(子级、孙级等)的所有QPushButton实例。</td></tr><tr><td align="left">子选择器</td><td align="left">QDialog &gt; QPushButton</td><td align="left">匹配作为QDialog的直接子级的所有QPushButton实例。</td></tr><tr><td align="left">子控制</td><td align="left">QComboBox::drop-down</td><td align="left">要设置复杂 widget 的样式，需要访问 widget 的子控件，<br />如QComboBox的下拉按钮或QSpinBox的上下箭头。<br />选择器可以包含子控件，从而可以将规则的应用限制到特定的 widget 子控件</td></tr><tr><td align="left">类伪状态</td><td align="left">QPushButton::hover</td><td align="left">用于设置控件在某个状态下的属性，伪状态的类型有多种，在下面介绍。</td></tr></tbody></table><h2 id="QSS伪状态"><a href="#QSS伪状态" class="headerlink" title="QSS伪状态"></a>QSS伪状态</h2><table><thead><tr><th align="left">伪状态</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">:active</td><td align="left">此状态在widget驻留在活动窗口中时设置。</td></tr><tr><td align="left">adjoins-item</td><td align="left">此状态在QTreeView的::branch与项相邻时设置。</td></tr><tr><td align="left">:alternate</td><td align="left">当QAbstractItemView::ternatingRowColors()设置为true时，将为绘制QAbstractItemView的行时的每隔一行设置此状态。</td></tr><tr><td align="left">:bottom</td><td align="left">该项目位于底部。例如，标签位于底部的QTabBar。</td></tr><tr><td align="left">:checked</td><td align="left">该项目已选中。例如，QAbstractButton的选中状态。</td></tr><tr><td align="left">:closable</td><td align="left">这些项目可以关闭。例如，QDockWidget打开了QDockWidget::DockWidgetClosable功能。</td></tr><tr><td align="left">:default</td><td align="left">该项目为默认值。例如，QMenu中的默认QPushButton或默认操作。</td></tr><tr><td align="left">:disabled</td><td align="left">该项目已禁用。</td></tr><tr><td align="left">:editable</td><td align="left">QComboBox是可编辑的。</td></tr><tr><td align="left">:edit-focus</td><td align="left">该项具有编辑焦点(请参见QStyle::State_HasEditFocus)。此状态仅适用于Qt扩展应用程序。</td></tr><tr><td align="left">:enabled</td><td align="left">该项目已启用。</td></tr><tr><td align="left">:exclusive</td><td align="left">该项目是独占项目组的一部分。例如，独占QActionGroup中的菜单项。</td></tr><tr><td align="left">:first</td><td align="left">该项目是(列表中的)第一个项目。例如，QTabBar中的第一个选项卡。</td></tr><tr><td align="left">:flat</td><td align="left">这件物品是平的。例如，平面QPushButton。</td></tr><tr><td align="left">:floatable</td><td align="left">这些项目可以浮动。例如，QDockWidget打开了QDockWidget：：DockWidgetFloatable功能。</td></tr><tr><td align="left">:focus</td><td align="left">该项具有输入焦点。</td></tr><tr><td align="left">:has-children</td><td align="left">该项目具有子项。例如，QTreeView中具有子项的项。</td></tr><tr><td align="left">:has-siblings</td><td align="left">该项目有同级。例如，QTreeView中的同级项。</td></tr><tr><td align="left">:horizontal</td><td align="left">该项目具有水平方向</td></tr><tr><td align="left">:hover</td><td align="left">鼠标悬停在该项目上。</td></tr><tr><td align="left">:indeterminate</td><td align="left">该项具有不确定状态。例如，部分选中QCheckBox或QRadioButton。</td></tr><tr><td align="left">:last</td><td align="left">该项是(列表中的)最后一项。例如，QTabBar中的最后一个选项卡。</td></tr><tr><td align="left">:left</td><td align="left">该项目位于左侧。例如，选项卡位于左侧的QTabBar。</td></tr><tr><td align="left">:maximized</td><td align="left">该项目将最大化。例如，最大化的QMdiSubWindow。</td></tr><tr><td align="left">:middle</td><td align="left">项目在中间(在列表中)。例如，QTabBar中不在开头或结尾的制表符。</td></tr><tr><td align="left">:minimized</td><td align="left">该项目被最小化。例如，最小化的QMdiSubWindow。</td></tr><tr><td align="left">:movable</td><td align="left">物品可以四处移动。例如，QDockWidget打开了QDockWidget::DockWidgetMoovable功能。</td></tr><tr><td align="left">:no-frame</td><td align="left">该项目没有框架。例如，无框架的QSpinBox或QLineEdit。</td></tr><tr><td align="left">:non-exclusive</td><td align="left">该项是非独占项组的一部分。例如，非独占QActionGroup中的菜单项。</td></tr><tr><td align="left">:off</td><td align="left">对于可以切换的项目，这适用于处于“关闭”状态的项目。</td></tr><tr><td align="left">:on</td><td align="left">对于可以切换的项目，这适用于处于“打开”状态的widget。</td></tr><tr><td align="left">:only-one</td><td align="left">该项目是(列表中的)唯一项目。例如，QTabBar中的一个单独的选项卡。</td></tr><tr><td align="left">:open</td><td align="left">该项目处于打开状态。例如，QTreeView中的展开项，或具有打开菜单的QComboBox或QPushButton。</td></tr><tr><td align="left">:next-selected</td><td align="left">选择下一项(在列表中)。例如，QTabBar的选定选项卡紧挨着该项。</td></tr><tr><td align="left">:pressed</td><td align="left">正在使用鼠标按下该项。</td></tr><tr><td align="left">:previous-selected</td><td align="left">选择上一项(在列表中)。例如，QTabBar中选定选项卡旁边的选项卡。</td></tr><tr><td align="left">:read-only</td><td align="left">该项目标记为只读或不可编辑。例如，只读QLineEdit或不可编辑的QComboBox。</td></tr><tr><td align="left">:right</td><td align="left">该项目位于右侧。例如，选项卡位于右侧的QTabBar。</td></tr><tr><td align="left">:selected</td><td align="left">该项目即被选中。例如，QTabBar中的选定选项卡或QMenu中的选定项目。</td></tr><tr><td align="left">:top</td><td align="left">该项目位于顶部。例如，选项卡位于顶部的QTabBar。</td></tr><tr><td align="left">:unchecked</td><td align="left">该项目处于取消选中状态。</td></tr><tr><td align="left">:vertical</td><td align="left">该项目具有垂直方向。</td></tr><tr><td align="left">:window</td><td align="left">widget是窗口(即顶层小部件)</td></tr></tbody></table><h2 id="QSS属性"><a href="#QSS属性" class="headerlink" title="QSS属性"></a>QSS属性</h2><h3 id="背景属性（Background）"><a href="#背景属性（Background）" class="headerlink" title="背景属性（Background）"></a>背景属性（Background）</h3><table><thead><tr><th><strong>属性</strong></th><th><strong>描述</strong></th><th><strong>CSS</strong></th></tr></thead><tbody><tr><td><a href="http://www.w3school.com.cn/cssref/pr_background.asp" target="_blank" rel="noopener">background</a></td><td>在一个声明中设置所有的背景<strong>属性</strong>。</td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_background-attachment.asp" target="_blank" rel="noopener">background-attachment</a></td><td>设置背景图像是否固定或者随着页面的其余部分滚动。</td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_background-color.asp" target="_blank" rel="noopener">background-color</a></td><td>设置元素的背景颜色。</td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_background-image.asp" target="_blank" rel="noopener">background-image</a></td><td>设置元素的背景图像。</td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_background-position.asp" target="_blank" rel="noopener">background-position</a></td><td>设置背景图像的开始位置。</td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_background-repeat.asp" target="_blank" rel="noopener">background-repeat</a></td><td>设置是否及如何重复背景图像。</td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_background-clip.asp" target="_blank" rel="noopener">background-clip</a></td><td>规定背景的绘制区域。</td><td>3</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_background-origin.asp" target="_blank" rel="noopener">background-origin</a></td><td>规定背景图片的定位区域。</td><td>3</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_background-size.asp" target="_blank" rel="noopener">background-size</a></td><td>规定背景图片的尺寸。</td><td>3</td></tr></tbody></table><h3 id="边框属性（Border-和-Outline）"><a href="#边框属性（Border-和-Outline）" class="headerlink" title="边框属性（Border 和 Outline）"></a>边框属性（Border 和 Outline）</h3><table><thead><tr><th><strong>属性</strong></th><th><strong>描述</strong></th><th><strong>CSS</strong></th></tr></thead><tbody><tr><td><a href="http://www.w3school.com.cn/cssref/pr_border.asp" target="_blank" rel="noopener">border</a></td><td>在一个声明中设置所有的边框<strong>属性</strong>。</td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_border-bottom.asp" target="_blank" rel="noopener">border-bottom</a></td><td>在一个声明中设置所有的下边框<strong>属性</strong>。</td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_border-bottom_color.asp" target="_blank" rel="noopener">border-bottom-color</a></td><td>设置下边框的颜色。</td><td>2</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_border-bottom_style.asp" target="_blank" rel="noopener">border-bottom-style</a></td><td>设置下边框的样式。</td><td>2</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_border-bottom_width.asp" target="_blank" rel="noopener">border-bottom-width</a></td><td>设置下边框的宽度。</td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_border-color.asp" target="_blank" rel="noopener">border-color</a></td><td>设置四条边框的颜色。</td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_border-left.asp" target="_blank" rel="noopener">border-left</a></td><td>在一个声明中设置所有的左边框<strong>属性</strong>。</td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_border-left_color.asp" target="_blank" rel="noopener">border-left-color</a></td><td>设置左边框的颜色。</td><td>2</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_border-left_style.asp" target="_blank" rel="noopener">border-left-style</a></td><td>设置左边框的样式。</td><td>2</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_border-left_width.asp" target="_blank" rel="noopener">border-left-width</a></td><td>设置左边框的宽度。</td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_border-right.asp" target="_blank" rel="noopener">border-right</a></td><td>在一个声明中设置所有的右边框<strong>属性</strong>。</td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_border-right_color.asp" target="_blank" rel="noopener">border-right-color</a></td><td>设置右边框的颜色。</td><td>2</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_border-right_style.asp" target="_blank" rel="noopener">border-right-style</a></td><td>设置右边框的样式。</td><td>2</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_border-right_width.asp" target="_blank" rel="noopener">border-right-width</a></td><td>设置右边框的宽度。</td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_border-style.asp" target="_blank" rel="noopener">border-style</a></td><td>设置四条边框的样式。</td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_border-top.asp" target="_blank" rel="noopener">border-top</a></td><td>在一个声明中设置所有的上边框<strong>属性</strong>。</td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_border-top_color.asp" target="_blank" rel="noopener">border-top-color</a></td><td>设置上边框的颜色。</td><td>2</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_border-top_style.asp" target="_blank" rel="noopener">border-top-style</a></td><td>设置上边框的样式。</td><td>2</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_border-top_width.asp" target="_blank" rel="noopener">border-top-width</a></td><td>设置上边框的宽度。</td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_border-width.asp" target="_blank" rel="noopener">border-width</a></td><td>设置四条边框的宽度。</td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_outline.asp" target="_blank" rel="noopener">outline</a></td><td>在一个声明中设置所有的轮廓<strong>属性</strong>。</td><td>2</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_outline-color.asp" target="_blank" rel="noopener">outline-color</a></td><td>设置轮廓的颜色。</td><td>2</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_outline-style.asp" target="_blank" rel="noopener">outline-style</a></td><td>设置轮廓的样式。</td><td>2</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_outline-width.asp" target="_blank" rel="noopener">outline-width</a></td><td>设置轮廓的宽度。</td><td>2</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_border-bottom-left-radius.asp" target="_blank" rel="noopener">border-bottom-left-radius</a></td><td>定义边框左下角的形状。</td><td>3</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_border-bottom-right-radius.asp" target="_blank" rel="noopener">border-bottom-right-radius</a></td><td>定义边框右下角的形状。</td><td>3</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_border-image.asp" target="_blank" rel="noopener">border-image</a></td><td>简写<strong>属性</strong>，设置所有 border-image-* <strong>属性</strong>。</td><td>3</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_border-image-outset.asp" target="_blank" rel="noopener">border-image-outset</a></td><td>规定边框图像区域超出边框的量。</td><td>3</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_border-image-repeat.asp" target="_blank" rel="noopener">border-image-repeat</a></td><td>图像边框是否应平铺(repeated)、铺满(rounded)或拉伸(stretched)。</td><td>3</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_border-image-slice.asp" target="_blank" rel="noopener">border-image-slice</a></td><td>规定图像边框的向内偏移。</td><td>3</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_border-image-source.asp" target="_blank" rel="noopener">border-image-source</a></td><td>规定用作边框的图片。</td><td>3</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_border-image-width.asp" target="_blank" rel="noopener">border-image-width</a></td><td>规定图片边框的宽度。</td><td>3</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_border-radius.asp" target="_blank" rel="noopener">border-radius</a></td><td>简写<strong>属性</strong>，设置所有四个 border-<em>-radius *</em>属性**。</td><td>3</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_border-top-left-radius.asp" target="_blank" rel="noopener">border-top-left-radius</a></td><td>定义边框左上角的形状。</td><td>3</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_border-top-right-radius.asp" target="_blank" rel="noopener">border-top-right-radius</a></td><td>定义边框右下角的形状。</td><td>3</td></tr><tr><td>box-decoration-break</td><td>�0�2</td><td>3</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_box-shadow.asp" target="_blank" rel="noopener">box-shadow</a></td><td>向方框添加一个或多个阴影。</td><td>3</td></tr></tbody></table><h3 id="Box-属性"><a href="#Box-属性" class="headerlink" title="Box 属性"></a><strong>Box</strong> 属性</h3><table><thead><tr><th><strong>属性</strong></th><th><strong>描述</strong></th><th><strong>CSS</strong></th></tr></thead><tbody><tr><td><a href="http://www.w3school.com.cn/cssref/pr_overflow-x.asp" target="_blank" rel="noopener">overflow-x</a></td><td>如果内容溢出了元素内容区域，是否对内容的左/右边缘进行裁剪。</td><td>3</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_overflow-y.asp" target="_blank" rel="noopener">overflow-y</a></td><td>如果内容溢出了元素内容区域，是否对内容的上/下边缘进行裁剪。</td><td>3</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_overflow-style.asp" target="_blank" rel="noopener">overflow-style</a></td><td>规定溢出元素的首选滚动方法。</td><td>3</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_rotation.asp" target="_blank" rel="noopener">rotation</a></td><td>围绕由 rotation-point <strong>属性</strong>定义的点对元素进行旋转。</td><td>3</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_rotation-point.asp" target="_blank" rel="noopener">rotation-point</a></td><td>定义距离上左边框边缘的偏移点。</td><td>3</td></tr></tbody></table><h3 id="字体属性（Font）"><a href="#字体属性（Font）" class="headerlink" title="字体属性（Font）"></a>字体属性（Font）</h3><table><thead><tr><th><strong>属性</strong></th><th><strong>描述</strong></th><th><strong>CSS</strong></th></tr></thead><tbody><tr><td><a href="http://www.w3school.com.cn/cssref/pr_font_font.asp" target="_blank" rel="noopener">font</a></td><td>在一个声明中设置所有字体<strong>属性</strong>。</td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_font_font-family.asp" target="_blank" rel="noopener">font-family</a></td><td>规定文本的字体系列。</td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_font_font-size.asp" target="_blank" rel="noopener">font-size</a></td><td>规定文本的字体尺寸。</td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_font_font-size-adjust.asp" target="_blank" rel="noopener">font-size-adjust</a></td><td>为元素规定 aspect 值。</td><td>2</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_font_font-stretch.asp" target="_blank" rel="noopener">font-stretch</a></td><td>收缩或拉伸当前的字体系列。</td><td>2</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_font_font-style.asp" target="_blank" rel="noopener">font-style</a></td><td>规定文本的字体样式。</td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_font_font-variant.asp" target="_blank" rel="noopener">font-variant</a></td><td>规定是否以小型大写字母的字体显示文本。</td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_font_weight.asp" target="_blank" rel="noopener">font-weight</a></td><td>规定字体的粗细。</td><td>1</td></tr></tbody></table><h3 id="外边距属性（Margin）"><a href="#外边距属性（Margin）" class="headerlink" title="外边距属性（Margin）"></a>外边距属性（Margin）</h3><table><thead><tr><th><strong>属性</strong></th><th><strong>描述</strong></th><th><strong>CSS</strong></th></tr></thead><tbody><tr><td><a href="http://www.w3school.com.cn/cssref/pr_margin.asp" target="_blank" rel="noopener">margin</a></td><td>在一个声明中设置所有外边距<strong>属性</strong>。</td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_margin-bottom.asp" target="_blank" rel="noopener">margin-bottom</a></td><td>设置元素的下外边距。</td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_margin-left.asp" target="_blank" rel="noopener">margin-left</a></td><td>设置元素的左外边距。</td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_margin-right.asp" target="_blank" rel="noopener">margin-right</a></td><td>设置元素的右外边距。</td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_margin-top.asp" target="_blank" rel="noopener">margin-top</a></td><td>设置元素的上外边距。</td><td>1</td></tr></tbody></table><h3 id="内边距属性（Padding）"><a href="#内边距属性（Padding）" class="headerlink" title="内边距属性（Padding）"></a>内边距属性（Padding）</h3><table><thead><tr><th><strong>属性</strong></th><th><strong>描述</strong></th><th><strong>CSS</strong></th></tr></thead><tbody><tr><td><a href="http://www.w3school.com.cn/cssref/pr_padding.asp" target="_blank" rel="noopener">padding</a></td><td>在一个声明中设置所有内边距<strong>属性</strong>。</td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_padding-bottom.asp" target="_blank" rel="noopener">padding-bottom</a></td><td>设置元素的下内边距。</td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_padding-left.asp" target="_blank" rel="noopener">padding-left</a></td><td>设置元素的左内边距。</td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_padding-right.asp" target="_blank" rel="noopener">padding-right</a></td><td>设置元素的右内边距。</td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_padding-top.asp" target="_blank" rel="noopener">padding-top</a></td><td>设置元素的上内边距。</td><td>1</td></tr></tbody></table><h3 id="定位属性（Positioning）"><a href="#定位属性（Positioning）" class="headerlink" title="定位属性（Positioning）"></a>定位属性（Positioning）</h3><table><thead><tr><th><strong>属性</strong></th><th><strong>描述</strong></th><th><strong>CSS</strong></th></tr></thead><tbody><tr><td><a href="http://www.w3school.com.cn/cssref/pr_pos_bottom.asp" target="_blank" rel="noopener">bottom</a></td><td>设置定位元素下外边距边界与其包含块下边界之间的偏移。</td><td>2</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_class_clear.asp" target="_blank" rel="noopener">clear</a></td><td>规定元素的哪一侧不允许其他浮动元素。</td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_pos_clip.asp" target="_blank" rel="noopener">clip</a></td><td>剪裁绝对定位元素。</td><td>2</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_class_cursor.asp" target="_blank" rel="noopener">cursor</a></td><td>规定要显示的光标的类型（形状）。</td><td>2</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_class_display.asp" target="_blank" rel="noopener">display</a></td><td>规定元素应该生成的框的类型。</td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_class_float.asp" target="_blank" rel="noopener">float</a></td><td>规定框是否应该浮动。</td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_pos_left.asp" target="_blank" rel="noopener">left</a></td><td>设置定位元素左外边距边界与其包含块左边界之间的偏移。</td><td>2</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_pos_overflow.asp" target="_blank" rel="noopener">overflow</a></td><td>规定当内容溢出元素框时发生的事情。</td><td>2</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_class_position.asp" target="_blank" rel="noopener">position</a></td><td>规定元素的定位类型。</td><td>2</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_pos_right.asp" target="_blank" rel="noopener">right</a></td><td>设置定位元素右外边距边界与其包含块右边界之间的偏移。</td><td>2</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_pos_top.asp" target="_blank" rel="noopener">top</a></td><td>设置定位元素的上外边距边界与其包含块上边界之间的偏移。</td><td>2</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_pos_vertical-align.asp" target="_blank" rel="noopener">vertical-align</a></td><td>设置元素的垂直对齐方式。</td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_class_visibility.asp" target="_blank" rel="noopener">visibility</a></td><td>规定元素是否可见。</td><td>2</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_pos_z-index.asp" target="_blank" rel="noopener">z-index</a></td><td>设置元素的堆叠顺序。</td><td>2</td></tr></tbody></table><h3 id="文本属性（Text）"><a href="#文本属性（Text）" class="headerlink" title="文本属性（Text）"></a>文本属性（Text）</h3><table><thead><tr><th><strong>属性</strong></th><th><strong>描述</strong></th><th><strong>CSS</strong></th></tr></thead><tbody><tr><td><a href="http://www.w3school.com.cn/cssref/pr_text_color.asp" target="_blank" rel="noopener">color</a></td><td>设置文本的颜色。</td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_text_direction.asp" target="_blank" rel="noopener">direction</a></td><td>规定文本的方向 / 书写方向。</td><td>2</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_text_letter-spacing.asp" target="_blank" rel="noopener">letter-spacing</a></td><td>设置字符间距。</td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_dim_line-height.asp" target="_blank" rel="noopener">line-height</a></td><td>设置行高。</td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_text_text-align.asp" target="_blank" rel="noopener">text-align</a></td><td>规定文本的水平对齐方式。</td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_text_text-decoration.asp" target="_blank" rel="noopener">text-decoration</a></td><td>规定添加到文本的装饰效果。</td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_text_text-indent.asp" target="_blank" rel="noopener">text-indent</a></td><td>规定文本块首行的缩进。</td><td>1</td></tr><tr><td>text-shadow</td><td>规定添加到文本的阴影效果。</td><td>2</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_text_text-transform.asp" target="_blank" rel="noopener">text-transform</a></td><td>控制文本的大小写。</td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_unicode-bidi.asp" target="_blank" rel="noopener">unicode-bidi</a></td><td>设置文本方向。</td><td>2</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_text_white-space.asp" target="_blank" rel="noopener">white-space</a></td><td>规定如何处理元素中的空白。</td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_text_word-spacing.asp" target="_blank" rel="noopener">word-spacing</a></td><td>设置单词间距。</td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_hanging-punctuation.asp" target="_blank" rel="noopener">hanging-punctuation</a></td><td>规定标点字符是否位于线框之外。</td><td>3</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_punctuation-trim.asp" target="_blank" rel="noopener">punctuation-trim</a></td><td>规定是否对标点字符进行修剪。</td><td>3</td></tr><tr><td>text-align-last</td><td>设置如何对齐最后一行或紧挨着强制换行符之前的行。</td><td>3</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_text-emphasis.asp" target="_blank" rel="noopener">text-emphasis</a></td><td>向元素的文本应用重点标记以及重点标记的前景色。</td><td>3</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_text-justify.asp" target="_blank" rel="noopener">text-justify</a></td><td>规定当 text-align 设置为 “justify” 时所使用的对齐方法。</td><td>3</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_text-outline.asp" target="_blank" rel="noopener">text-outline</a></td><td>规定文本的轮廓。</td><td>3</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_text-overflow.asp" target="_blank" rel="noopener">text-overflow</a></td><td>规定当文本溢出包含元素时发生的事情。</td><td>3</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_text-shadow.asp" target="_blank" rel="noopener">text-shadow</a></td><td>向文本添加阴影。</td><td>3</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_text-wrap.asp" target="_blank" rel="noopener">text-wrap</a></td><td>规定文本的换行规则。</td><td>3</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_word-break.asp" target="_blank" rel="noopener">word-break</a></td><td>规定非中日韩文本的换行规则。</td><td>3</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/pr_word-wrap.asp" target="_blank" rel="noopener">word-wrap</a></td><td>允许对长的不可分割的单词进行分割并换行到下一行。</td><td>3</td></tr></tbody></table><h3 id="颜色透明程度"><a href="#颜色透明程度" class="headerlink" title="颜色透明程度"></a>颜色透明程度</h3><pre><code>&lt;!--100% —FF--&gt;  &lt;!--95% — F2--&gt;  &lt;!--90% — E6--&gt;  &lt;!--85% — D9--&gt;  &lt;!--80% — CC--&gt;  &lt;!--75% — BF--&gt;  &lt;!--70% — B3--&gt;  &lt;!--65% — A6--&gt;  &lt;!--60% — 99--&gt;  &lt;!--55% — 8C--&gt;  &lt;!--50% — 80--&gt;  &lt;!--45% — 73--&gt;  &lt;!--40% — 66--&gt;  &lt;!--35% — 59--&gt;  &lt;!--30% — 4D--&gt;  &lt;!--25% — 40--&gt;  &lt;!--20% — 33--&gt;  &lt;!--15% — 26--&gt;  &lt;!--10% — 1A--&gt;  &lt;!--5% — 0D--&gt;  &lt;!--0% — 00--&gt;  </code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;QT使用QSS&lt;code&gt;（Qt Style Sheet）&lt;/code&gt;来设置控件样式并进行个性化定制和界面美化。QSS的语法和CSS十分类似，都是使用选择器来配置控件属性。&lt;/p&gt;
&lt;p&gt;QT导入QSS样式文件的方式也十分简单，只需要调用&lt;code&gt;setStyleSheet&lt;/code&gt;进行设置：&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;QApplication &lt;span class=&quot;title&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(argc, argv)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;QFile &lt;span class=&quot;title&quot;&gt;qss&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;string&quot;&gt;&quot;style.qss&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;qss.&lt;span class=&quot;built_in&quot;&gt;open&lt;/span&gt;(QFile::ReadOnly);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.setStyleSheet(qss.readAll());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;qss.&lt;span class=&quot;built_in&quot;&gt;close&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="code" scheme="https://www.yaronzz.com/categories/code/"/>
    
    
      <category term="qt" scheme="https://www.yaronzz.com/tags/qt/"/>
    
      <category term="qss" scheme="https://www.yaronzz.com/tags/qss/"/>
    
  </entry>
  
  <entry>
    <title>查询windows日志</title>
    <link href="https://www.yaronzz.com/post/windows_log/"/>
    <id>https://www.yaronzz.com/post/windows_log/</id>
    <published>2021-10-08T08:31:17.000Z</published>
    <updated>2021-10-14T02:03:47.235Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>系统日志可以用来查看系统的一些信息，比如警告、错误、验证、开关机等。</p><a id="more"></a><h2 id="打开系统日志"><a href="#打开系统日志" class="headerlink" title="打开系统日志"></a>打开系统日志</h2><p>按下快捷键<code>win+R</code>，输入<code>eventvwr.exe</code>，并点击确定</p><p><img src="https://i.loli.net/2021/10/08/tlg5DMfOEecrb1d.png" alt="image-20211008163514440"></p><p><img src="https://i.loli.net/2021/10/08/gNI5r6lEJf9KPuG.png" alt="image-20211008163551300"></p><h2 id="查询开关机记录"><a href="#查询开关机记录" class="headerlink" title="查询开关机记录"></a>查询开关机记录</h2><p>点击左侧<code>Windows日志-&gt;系统</code>，然后点击右侧<code>筛选当前日志</code>，然后在<code>所有事件ID</code>文本框中输入<code>6005,6006</code>，即可查询电脑开关机记录。</p><ul><li>6005：事件日志服务已启动。</li><li>6006：事件日志服务已停止。</li><li>6008：表示这个时间点的系统关闭是意外。</li></ul><p><img src="https://i.loli.net/2021/10/08/CQwONnxsjUa6ygS.png" alt="image-20211008163804021"></p><p><img src="https://i.loli.net/2021/10/08/GBVWLzcTdIEUjSw.png" alt="image-20211008163935075"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;系统日志可以用来查看系统的一些信息，比如警告、错误、验证、开关机等。&lt;/p&gt;
    
    </summary>
    
    
      <category term="软件" scheme="https://www.yaronzz.com/categories/%E8%BD%AF%E4%BB%B6/"/>
    
    
      <category term="windows" scheme="https://www.yaronzz.com/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>Windows共享目录设置</title>
    <link href="https://www.yaronzz.com/post/windows_share/"/>
    <id>https://www.yaronzz.com/post/windows_share/</id>
    <published>2021-04-27T03:17:40.000Z</published>
    <updated>2021-10-14T02:03:47.234Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>局域网内文件分享时，共享功能是最方便的一个方式。</p><a id="more"></a><h2 id="打开共享功能"><a href="#打开共享功能" class="headerlink" title="打开共享功能"></a>打开共享功能</h2><ol><li><p>打开控制面板中的<code>网络和共享中心</code></p><p><img src="https://i.loli.net/2021/04/27/cPaCQD4GqorXjSs.png" alt="image-20210427135616689"></p></li><li><p>选择<code>更改高级共享设置</code></p><p><img src="https://i.loli.net/2021/04/27/32nQ1orXj8saWgx.png" alt="image-20210427135702162"></p></li><li><p>打开<code>所有网络</code>，配置设置如下图：</p><p><img src="https://i.loli.net/2021/04/27/q6EXmbhdVk1Iso2.png" alt="image-20210427135752796"></p></li></ol><h2 id="修改安全选项"><a href="#修改安全选项" class="headerlink" title="修改安全选项"></a>修改安全选项</h2><ol><li><p>按WIN+R，调出运行框</p><p><img src="https://i.loli.net/2021/04/27/4ZHDmfcAVbNkCrw.png" alt="img"></p></li><li><p>在运行框输入 gpedit.msc</p><p><img src="https://i.loli.net/2021/04/27/B8QJfZIqkR5UhVu.png" alt="img"></p></li><li><p>打开安全选项路径：<code>Windows设置 -- 安全设置 -- 本地策略 -- 安全选项</code>, 设置全部账户选项，如下图：</p></li></ol><p><img src="https://i.loli.net/2021/04/27/5mNz8i9VUFG4lvc.png" alt="image-20210427135119521"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;局域网内文件分享时，共享功能是最方便的一个方式。&lt;/p&gt;
    
    </summary>
    
    
      <category term="system" scheme="https://www.yaronzz.com/categories/system/"/>
    
    
      <category term="windows" scheme="https://www.yaronzz.com/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>个人网盘搭建</title>
    <link href="https://www.yaronzz.com/post/cloud_drive/"/>
    <id>https://www.yaronzz.com/post/cloud_drive/</id>
    <published>2021-03-11T02:47:20.000Z</published>
    <updated>2021-10-14T02:03:47.230Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>个人网盘的搭建需要先搭建环境，再安装网盘程序。环境的搭建一般使用宝塔面板，网盘程序选择Cloudreve，功能全面，界面简洁而且更新频率高。</p><a id="more"></a><h2 id="安装宝塔面板"><a href="#安装宝塔面板" class="headerlink" title="安装宝塔面板"></a>安装宝塔面板</h2><h3 id="安装命令"><a href="#安装命令" class="headerlink" title="安装命令"></a>安装命令</h3><ol><li><code>Centos7.1+</code></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh</span><br></pre></td></tr></table></figure><ol start="2"><li><code>Ubuntu16.04+</code></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; sudo bash install.sh</span><br></pre></td></tr></table></figure><h3 id="组件安装"><a href="#组件安装" class="headerlink" title="组件安装"></a>组件安装</h3><ol><li>套件安装，选择Mysql，PHP，Nginx</li><li>扩展安装<code>首页 → php-X.X → 安装扩展fileinfo</code></li></ol><p><img src="https://i.loli.net/2021/06/08/ELbwsyxKgkAMCV5.png" alt="21"></p><p><img src="https://img-blog.csdnimg.cn/20201113182625409.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3M3Nzc3Nzc3Nzc3Nzc3,size_16,color_FFFFFF,t_70#pic_center" alt="5"></p><h3 id="创建网站"><a href="#创建网站" class="headerlink" title="创建网站"></a>创建网站</h3><p><img src="https://i.loli.net/2021/06/08/FETWIXjuLDpsyb7.png" alt="3"></p><h2 id="Cloudreve安装"><a href="#Cloudreve安装" class="headerlink" title="Cloudreve安装"></a>Cloudreve安装</h2><h3 id="下载版本"><a href="#下载版本" class="headerlink" title="下载版本"></a>下载版本</h3><p>下载地址：Github网址：<a href="https://github.com/cloudreve/Cloudreve/releases" target="_blank" rel="noopener">Releases · cloudreve/Cloudreve (github.com)</a></p><p>下载版本：linux_amd64</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/cloudreve/Cloudreve/releases/download/3.3.1/cloudreve_3.3.1_linux_amd64.tar.gz</span><br></pre></td></tr></table></figure><h3 id="安装SSL证书"><a href="#安装SSL证书" class="headerlink" title="安装SSL证书"></a>安装SSL证书</h3><p>如果网盘地址想用https，则需要安装SSL证书</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl https://get.acme.sh | sh</span><br><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure><p>获取证书</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --issue -d os.yaronzz.com -w &#x2F;www&#x2F;wwwroot&#x2F;cloud</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/06/08/MEqVj7nTrBQSlF9.png" alt="image-20210608105833651"></p><h3 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h3><p><img src="https://i.loli.net/2021/06/08/WDhlmriaSNb9HTB.png" alt="image-20210608105906895"></p><h3 id="安装Aria2"><a href="#安装Aria2" class="headerlink" title="安装Aria2"></a>安装Aria2</h3><p>aria2用于离线下载资源，cloudreve可以直接下载磁力链接资源，并上传到onedrive</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/aria2.sh &amp;&amp; chmod +x aria2.sh &amp;&amp; bash aria2.sh</span><br></pre></td></tr></table></figure><ul><li>启动：<code>service aria2 start</code></li><li>停止：<code>service aria2 stop</code></li><li>重启：<code>service aria2 restart</code></li><li>查看状态：<code>service aria2 status</code></li><li>配置文件：/root/.aria2/aria2.conf（配置文件包含中文注释，但是一些系统可能不支持显示中文）</li><li>下载目录：/usr/local/caddy/www/aria2/Download</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;个人网盘的搭建需要先搭建环境，再安装网盘程序。环境的搭建一般使用宝塔面板，网盘程序选择Cloudreve，功能全面，界面简洁而且更新频率高。&lt;/p&gt;
    
    </summary>
    
    
      <category term="建站" scheme="https://www.yaronzz.com/categories/%E5%BB%BA%E7%AB%99/"/>
    
    
      <category term="cloudreve" scheme="https://www.yaronzz.com/tags/cloudreve/"/>
    
  </entry>
  
  <entry>
    <title>C++类结构体与json相互转换</title>
    <link href="https://www.yaronzz.com/post/cpp_json_class_conver/"/>
    <id>https://www.yaronzz.com/post/cpp_json_class_conver/</id>
    <published>2020-10-09T04:40:33.000Z</published>
    <updated>2021-10-14T02:03:47.247Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="背景与需求"><a href="#背景与需求" class="headerlink" title="背景与需求"></a>背景与需求</h2><p>之前写C#的时候，解析json字符串一般使用的是开源的类库<code>Newtonsoft.Json</code>，方法十分简洁，比如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">class Project</span><br><span class="line">&#123;</span><br><span class="line">    public string Input &#123; get; set; &#125;</span><br><span class="line">    public string Output &#123; get; set; &#125;</span><br><span class="line">&#125;</span><br><span class="line">JavaScriptSerializer serializer &#x3D; new JavaScriptSerializer();</span><br><span class="line">Project test &#x3D; serializer.Deserialize&lt;Project&gt;(@&quot;&#123;&quot;Input&quot;:&quot;1&quot;,&quot;Output&quot;:&quot;2&quot;&#125;&quot;);</span><br></pre></td></tr></table></figure><p>一行代码就能将json字符串转为相应的类对象。</p><p>最近写C++需要处理一下json数据，于是上github找了很多很强大的开源库，像<a href="https://github.com/open-source-parsers/jsoncpp" target="_blank" rel="noopener">jsoncpp</a>、<a href="https://github.com/Tencent/rapidjson" target="_blank" rel="noopener">rapidjson</a>、<a href="https://github.com/nlohmann/json" target="_blank" rel="noopener">json</a>，基本上都满足了开发需求，但想要做成像写C#那样子就要做二次开发。于是有了自己写一个简单的json转类 | 结构体的工具的想法。</p><a id="more"></a><p>需求如下：</p><blockquote><ul><li>只有头文件，方便使用</li><li>最多三行代码解决转换</li><li>支持类|结构体 与 json的相互转换</li><li>支持多种基本数据类型，如int、float、string、bool等</li><li>支持STL基本类型，如vector、list、map&lt;string,T&gt;等</li><li>支持嵌套关系</li><li>支持成员重命名，比方说json中的关键字是name,成员命名可写成Name或其他。</li><li>支持设置成员默认值</li></ul></blockquote><h2 id="最终使用的样例代码"><a href="#最终使用的样例代码" class="headerlink" title="最终使用的样例代码"></a>最终使用的样例代码</h2><p>工程开源地址：<a href="https://github.com/AIGMix/AIGCJson" target="_blank" rel="noopener">AIGCJson：两行代码实现C++ Json与类对象相互转换</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">string</span> Name;</span><br><span class="line">    <span class="keyword">int</span> Age;</span><br><span class="line"></span><br><span class="line">    AIGC_JSON_HELPER(Name, Age)<span class="comment">//成员注册</span></span><br><span class="line">    AIGC_JSON_HELPER_RENAME(<span class="string">"name"</span>,<span class="string">"age"</span>)<span class="comment">//成员重命名，不需要可以删除这条</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//json转类对象</span></span><br><span class="line">    Student person;</span><br><span class="line">    JsonHelper::JsonToObject(person, <span class="string">R"(&#123;"name":"XiaoMing", "age":15&#125;)"</span>);</span><br><span class="line"><span class="comment">//类对象转json</span></span><br><span class="line">    <span class="built_in">string</span> jsonStr;</span><br><span class="line">    JsonHelper::ObjectToJson(person, jsonStr);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="实现方法"><a href="#实现方法" class="headerlink" title="实现方法"></a>实现方法</h2><p>因为刚好<a href="https://github.com/Tencent/rapidjson" target="_blank" rel="noopener">rapidjson</a>只需要头文件就可以使用，所以选择了<a href="https://github.com/Tencent/rapidjson" target="_blank" rel="noopener">rapidjson</a>作为基础库，进行二次开发。</p><h3 id="基础类型的转换"><a href="#基础类型的转换" class="headerlink" title="基础类型的转换"></a>基础类型的转换</h3><p>作为最底层的接口，只需要进行一个赋值的操作即可，后续如果想要增加一些其他类型支持，添加起来也比较方便。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">bool</span> <span class="title">JsonToObject</span><span class="params">(<span class="keyword">int</span> &amp;obj, rapidjson::Value &amp;jsonValue)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (jsonValue.IsNull() || !jsonValue.IsInt())</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    obj = jsonValue.GetInt();</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">bool</span> <span class="title">JsonToObject</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> &amp;obj, rapidjson::Value &amp;jsonValue)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (jsonValue.IsNull() || !jsonValue.IsUint())</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    obj = jsonValue.GetUint();</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">bool</span> <span class="title">JsonToObject</span><span class="params">(<span class="keyword">int64_t</span> &amp;obj, rapidjson::Value &amp;jsonValue)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (jsonValue.IsNull() || !jsonValue.IsInt64())</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    obj = jsonValue.GetInt64();</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//其他类型... ...</span></span><br></pre></td></tr></table></figure><h3 id="类成员注册"><a href="#类成员注册" class="headerlink" title="类成员注册"></a>类成员注册</h3><p>这里使用宏定义方式 + 可变参数模板的方式来实现，即可依次对注册的成员进行赋值</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> TYPE, <span class="keyword">typename</span>... TYPES&gt;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">bool</span> <span class="title">WriteMembers</span><span class="params">(<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt; &amp;names, <span class="keyword">int</span> index, rapidjson::Value &amp;jsonValue, TYPE &amp;arg, TYPES &amp;... args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!WriteMembers(names, index, jsonValue, arg))</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> WriteMembers(names, ++index, jsonValue, args...);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> TYPE&gt;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">bool</span> <span class="title">WriteMembers</span><span class="params">(<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt; &amp;names, <span class="keyword">int</span> index, rapidjson::Value &amp;jsonValue, TYPE &amp;arg)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span> *key = names[index].c_str();</span><br><span class="line">    <span class="keyword">if</span> (!jsonValue.HasMember(key))</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!JsonToObject(arg, jsonValue[key]))</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AIGC_JSON_HELPER(...)  \</span></span><br><span class="line">bool AIGC_CONVER_JSON_TO_OBJECT(rapidjson::Value &amp;jsonValue, std::vector&lt;std::string&gt; &amp;names) \</span><br><span class="line">&#123;     \</span><br><span class="line">    <span class="keyword">if</span> (names.<span class="built_in">size</span>() &lt;= <span class="number">0</span>)  \</span><br><span class="line">        names = aigc::JsonHelper::GetMembersNames(#__VA_ARGS__); \</span><br><span class="line">    <span class="keyword">return</span> aigc::JsonHelper::WriteMembers(names, <span class="number">0</span>, jsonValue, __VA_ARGS__); \</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="自定义类的转换"><a href="#自定义类的转换" class="headerlink" title="自定义类的转换"></a>自定义类的转换</h3><p>自定义类由于并不清楚外界使用时，是否有按规定添加好<strong>成员注册接口</strong>，所以这里采用<strong>enable_if</strong>的方式来尝试调用，编译的时候也就不会报错。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">bool</span>, <span class="class"><span class="keyword">class</span> <span class="title">TYPE</span> = <span class="title">void</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">struct</span> <span class="title">enable_if</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">TYPE</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">struct</span> <span class="title">enable_if</span>&lt;true, TYPE&gt;</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">typedef</span> TYPE type;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">HasConverFunction</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> TT&gt; <span class="function"><span class="keyword">static</span> <span class="keyword">char</span> <span class="title">func</span><span class="params">(<span class="keyword">decltype</span>(&amp;TT::AIGC_CONVER_JSON_TO_OBJECT))</span></span>;</span><br><span class="line">    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> TT&gt; <span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">func</span><span class="params">(...)</span></span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">static</span> <span class="keyword">bool</span> has = (<span class="keyword">sizeof</span>(func&lt;T&gt;(<span class="literal">NULL</span>)) == <span class="keyword">sizeof</span>(<span class="keyword">char</span>));</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> enable_if&lt;HasConverFunction&lt;T&gt;::has, <span class="keyword">int</span>&gt;::type = <span class="number">0</span>&gt;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">inline</span> <span class="keyword">bool</span> JsonToObject(T &amp;obj, rapidjson::Value &amp;jsonValue)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt; names = LoadRenameArray(obj);</span><br><span class="line">    <span class="keyword">return</span> obj.AIGC_CONVER_JSON_TO_OBJECT(jsonValue, names);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> enable_if&lt;!HasConverFunction&lt;T&gt;::has, <span class="keyword">int</span>&gt;::type = <span class="number">0</span>&gt;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">inline</span> <span class="keyword">bool</span> JsonToObject(T &amp;obj, rapidjson::Value &amp;jsonValue)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="外部调用接口"><a href="#外部调用接口" class="headerlink" title="外部调用接口"></a>外部调用接口</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief conver json string to class | struct</span></span><br><span class="line"><span class="comment"> * @param obj : class or struct</span></span><br><span class="line"><span class="comment"> * @param jsonStr : json string </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">JsonToObject</span><span class="params">(T &amp;obj, <span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span> &amp;jsonStr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    rapidjson::Document root;</span><br><span class="line">    root.Parse(jsonStr.c_str());</span><br><span class="line">    <span class="keyword">if</span> (root.IsNull())</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> JsonToObject(obj, root);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最核心的部分也就上面的几个模块，其他的都是一些琐碎的增加类型支持等操作。</p><h2 id="学习与引用"><a href="#学习与引用" class="headerlink" title="学习与引用"></a>学习与引用</h2><ol><li>腾讯json解析库：<a href="https://github.com/Tencent" target="_blank" rel="noopener">Tencent</a>/<strong><a href="https://github.com/Tencent/rapidjson" target="_blank" rel="noopener">rapidjson</a></strong></li><li>杨昕: <a href="https://zhuanlan.zhihu.com/p/166524394" target="_blank" rel="noopener">C++ 轻量级对象JSON序列化实现</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;背景与需求&quot;&gt;&lt;a href=&quot;#背景与需求&quot; class=&quot;headerlink&quot; title=&quot;背景与需求&quot;&gt;&lt;/a&gt;背景与需求&lt;/h2&gt;&lt;p&gt;之前写C#的时候，解析json字符串一般使用的是开源的类库&lt;code&gt;Newtonsoft.Json&lt;/code&gt;，方法十分简洁，比如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class Project&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public string Input &amp;#123; get; set; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public string Output &amp;#123; get; set; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;JavaScriptSerializer serializer &amp;#x3D; new JavaScriptSerializer();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Project test &amp;#x3D; serializer.Deserialize&amp;lt;Project&amp;gt;(@&amp;quot;&amp;#123;&amp;quot;Input&amp;quot;:&amp;quot;1&amp;quot;,&amp;quot;Output&amp;quot;:&amp;quot;2&amp;quot;&amp;#125;&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;一行代码就能将json字符串转为相应的类对象。&lt;/p&gt;
&lt;p&gt;最近写C++需要处理一下json数据，于是上github找了很多很强大的开源库，像&lt;a href=&quot;https://github.com/open-source-parsers/jsoncpp&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;jsoncpp&lt;/a&gt;、&lt;a href=&quot;https://github.com/Tencent/rapidjson&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;rapidjson&lt;/a&gt;、&lt;a href=&quot;https://github.com/nlohmann/json&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;json&lt;/a&gt;，基本上都满足了开发需求，但想要做成像写C#那样子就要做二次开发。于是有了自己写一个简单的json转类 | 结构体的工具的想法。&lt;/p&gt;
    
    </summary>
    
    
      <category term="code" scheme="https://www.yaronzz.com/categories/code/"/>
    
    
      <category term="cpp" scheme="https://www.yaronzz.com/tags/cpp/"/>
    
      <category term="json" scheme="https://www.yaronzz.com/tags/json/"/>
    
  </entry>
  
  <entry>
    <title>Linux上Nginx安装配置</title>
    <link href="https://www.yaronzz.com/post/nginx_set/"/>
    <id>https://www.yaronzz.com/post/nginx_set/</id>
    <published>2020-08-16T03:53:51.000Z</published>
    <updated>2021-10-14T02:03:47.229Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>主要介绍如何安装nginx和https所需的免费证书。</p><a id="more"></a><h2 id="🎁安装nginx"><a href="#🎁安装nginx" class="headerlink" title="🎁安装nginx"></a>🎁安装nginx</h2><ol><li><p>安装nginx</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install git nginx -y</span><br></pre></td></tr></table></figure></li><li><p>新建网站文件夹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /var/www/hexo</span><br><span class="line">sudo chown -R $USER:$USER /var/www/hexo</span><br><span class="line">sudo chmod -R 755 /var/www/hexo</span><br></pre></td></tr></table></figure></li><li><p>配置nginx</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/nginx/sites-available/default</span><br></pre></td></tr></table></figure><p>修改为以下内容：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">listen 80 default_server;</span><br><span class="line">listen [::]:80 default_server;</span><br><span class="line"></span><br><span class="line">    root /var/www/hexo;</span><br><span class="line">index index.html index.htm;</span><br><span class="line"></span><br><span class="line">server_name _;</span><br><span class="line">location / &#123;</span><br><span class="line"># First attempt to serve request as file, then</span><br><span class="line"># as directory, then fall back to displaying a 404.</span><br><span class="line">try_files $uri $uri/ =404;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>启停nginx</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service nginx restart</span><br></pre></td></tr></table></figure></li></ol><h2 id="🎉安装免费证书SSL"><a href="#🎉安装免费证书SSL" class="headerlink" title="🎉安装免费证书SSL"></a>🎉安装免费证书SSL</h2><p>Let’s Encrypt 是一家免费、开放、自动化的证书颁发机构（CA），为公众的利益而运行。它是一项由 <a href="https://www.abetterinternet.org/" target="_blank" rel="noopener">Internet Security Research Group（ISRG）</a>提供的服务。其以尽可能对用户友好的方式免费提供为网站启用 HTTPS（SSL/TLS）所需的数字证书来创建一个更安全，更尊重隐私的 Web 环境。</p><blockquote><p>Let’s Encrypt的关键原则为：</p><ul><li><strong>免费：</strong>任何拥有域名的人都可以使用 Let’s Encrypt 免费获取受信的证书。</li><li><strong>自动化：</strong>运行于服务器上的软件可以与 Let’s Encrypt 直接交互，以便轻松获取证书，安全地配置它，并自动进行续期。</li><li><strong>安全：</strong> 无论是作为一个证书颁发机构（CA）还是通过帮助网站运营商正确地保护其服务器。</li><li><strong>透明：</strong>所有颁发或吊销的证书将被公开记录，供任何人查阅。</li><li><strong>开放：</strong>自动颁发、续期证书的协议将作为其他人可以使用的开放标准发布。</li><li><strong>乐于合作：</strong>Let’s Encrypt 是为了让整个互联网社区受益而做出的共同努力，它不受任何单一组织的控制。</li></ul></blockquote><ol><li><p>安装Certbot</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://dl.eff.org/certbot-auto</span><br><span class="line">chmod a+x ./certbot-auto</span><br></pre></td></tr></table></figure></li><li><p>生成证书</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./certbot-auto --server https://acme-v02.api.letsencrypt.org/directory -d "xxxxxx.com" -d "*.cxxxxxx.com" --manual --preferred-challenges dns-01 certonly</span><br></pre></td></tr></table></figure></li><li><p>根据打印的信息添加两条TXT解析记录y</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">root@localhost:~# ./certbot-auto --server https://acme-v02.api.letsencrypt.org/directory -d "yaronzz.com" -d "*.yaronzz.com" --manual --preferred-challenges dns-01 certonly</span><br><span class="line">Saving debug log to /var/log/letsencrypt/letsencrypt.log</span><br><span class="line">Plugins selected: Authenticator manual, Installer None</span><br><span class="line">Obtaining a new certificate</span><br><span class="line">Performing the following challenges:</span><br><span class="line">dns-01 challenge for yaronzz.com</span><br><span class="line">dns-01 challenge for yaronzz.com</span><br><span class="line"></span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line">NOTE: The IP of this machine will be publicly logged as having requested this</span><br><span class="line">certificate. If you're running certbot in manual mode on a machine that is not</span><br><span class="line">your server, please ensure you're okay with that.</span><br><span class="line"></span><br><span class="line">Are you OK with your IP being logged?</span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line">(Y)es/(N)o: y   #选择y</span><br><span class="line"></span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line">Please deploy a DNS TXT record under the name</span><br><span class="line">_acme-challenge.yaronzz.com with the following value:</span><br><span class="line"><span class="meta">#</span><span class="bash">将第一条主机记录_acme-challenge和下面的记录值添加的解析</span></span><br><span class="line">fXseZpKheNVwMxxxxxxxxxxxxxxxxxxxxxxxxxxx </span><br><span class="line"></span><br><span class="line">Before continuing, verify the record is deployed.</span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line">Press Enter to Continue</span><br><span class="line"></span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line">Please deploy a DNS TXT record under the name</span><br><span class="line">_acme-challenge.yaronzz.com with the following value:</span><br><span class="line"><span class="meta">#</span><span class="bash">将第二条主机记录_acme-challenge和下面的记录值添加的解析</span></span><br><span class="line">xOuUgL4jxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</span><br><span class="line"></span><br><span class="line">Before continuing, verify the record is deployed.</span><br><span class="line">(This must be set up in addition to the previous challenges; do not remove,</span><br><span class="line">replace, or undo the previous challenge tasks yet. Note that you might be</span><br><span class="line">asked to create multiple distinct TXT records with the same name. This is</span><br><span class="line">permitted by DNS standards.)</span><br><span class="line"></span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line">Press Enter to Continue</span><br><span class="line">Waiting for verification...</span><br><span class="line">Cleaning up challenges</span><br><span class="line"></span><br><span class="line">IMPORTANT NOTES:</span><br><span class="line"> - Congratulations! Your certificate and chain have been saved at:</span><br><span class="line">   /etc/letsencrypt/live/yaronzz.com/fullchain.pem</span><br><span class="line">   Your key file has been saved at:</span><br><span class="line">   /etc/letsencrypt/live/yaronzz.com/privkey.pem</span><br><span class="line">   Your cert will expire on 2020-11-14. To obtain a new or tweaked</span><br><span class="line">   version of this certificate in the future, simply run certbot-auto</span><br><span class="line">   again. To non-interactively renew *all* of your certificates, run</span><br><span class="line">   "certbot-auto renew"</span><br><span class="line"> - If you like Certbot, please consider supporting our work by:</span><br><span class="line"></span><br><span class="line">   Donating to ISRG / Let's Encrypt:   https://letsencrypt.org/donate</span><br><span class="line">   Donating to EFF:                    https://eff.org/donate-le</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/08/16/RfecFn1uW7SUD2P.png" alt="image-20200816120331944"></p></li><li><p>查看生成的证书</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls /etc/letsencrypt/live/xxxxxx.com</span><br></pre></td></tr></table></figure></li><li><p>续签证书</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">./certbot-auto renew</span><br><span class="line"><span class="meta">#</span><span class="bash"> 如果提示未到期，cert not due <span class="keyword">for</span> renewal，可以强制更新如下</span></span><br><span class="line">./certbot-auto renew --force-renew</span><br><span class="line"><span class="meta">#</span><span class="bash"> 看到success表示成功了</span></span><br></pre></td></tr></table></figure></li><li><p>nginx添加证书</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/nginx/sites-available/default</span><br></pre></td></tr></table></figure><p>   修改为以下内容：</p>   <figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">listen 80 default_server;</span><br><span class="line">listen [::]:80 default_server;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    listen 443 ssl default_server;</span><br><span class="line">server_name xxxxxx.com;</span><br><span class="line">    </span><br><span class="line">    ssl_certificate     /etc/letsencrypt/live/xxxxxx.com/fullchain.pem;</span><br><span class="line">ssl_certificate_key /etc/letsencrypt/live/xxxxxx.com/privkey.pem;</span><br><span class="line"></span><br><span class="line">    ssl_protocols   TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">    ssl_ciphers     ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;</span><br><span class="line">    ssl_prefer_server_ciphers on;</span><br><span class="line">    ssl_session_cache  shared:SSL:10m;</span><br><span class="line">    ssl_session_timeout 10m;</span><br><span class="line">    </span><br><span class="line">    root /var/www/hexo;</span><br><span class="line">index index.html index.htm;</span><br><span class="line"></span><br><span class="line">server_name _;</span><br><span class="line">location / &#123;</span><br><span class="line"># First attempt to serve request as file, then</span><br><span class="line"># as directory, then fall back to displaying a 404.</span><br><span class="line">try_files $uri $uri/ =404;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;主要介绍如何安装nginx和https所需的免费证书。&lt;/p&gt;
    
    </summary>
    
    
      <category term="建站" scheme="https://www.yaronzz.com/categories/%E5%BB%BA%E7%AB%99/"/>
    
    
      <category term="linux" scheme="https://www.yaronzz.com/tags/linux/"/>
    
      <category term="ssl" scheme="https://www.yaronzz.com/tags/ssl/"/>
    
      <category term="nginx" scheme="https://www.yaronzz.com/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>Rclone使用教程 - 挂载Onedrive和谷歌网盘</title>
    <link href="https://www.yaronzz.com/post/rclone_use/"/>
    <id>https://www.yaronzz.com/post/rclone_use/</id>
    <published>2020-08-15T00:57:02.000Z</published>
    <updated>2021-10-14T02:03:47.243Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Rclone 是一个用于多个云平台之间同步文件和目录的命令行工具，其支持多种运营商网盘。</p><ul><li>官网网址：<a href="https://www.moewah.com/go/aHR0cHM6Ly9yY2xvbmUub3Jn" target="_blank" rel="noopener">https://rclone.org</a></li><li>开源地址：<a href="https://github.com/ncw/rclone" target="_blank" rel="noopener">https://github.com/ncw/rclone</a></li></ul><a id="more"></a><h2 id="安装与配置"><a href="#安装与配置" class="headerlink" title="安装与配置"></a>安装与配置</h2><h3 id="下载安装rclone"><a href="#下载安装rclone" class="headerlink" title="下载安装rclone"></a>下载安装rclone</h3><ol><li><p>windows版本：下载<a href="https://rclone.org/downloads/" target="_blank" rel="noopener">rclone</a>并解压</p></li><li><p>Linux版本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl https://rclone.org/install.sh | sudo bash</span><br></pre></td></tr></table></figure></li></ol><h3 id="配置OneDrive"><a href="#配置OneDrive" class="headerlink" title="配置OneDrive"></a>配置OneDrive</h3><ol><li><p>在目录下打开cmd运行命令 <code>rclone authorize &quot;onedrive&quot;</code></p><p>世纪互联运行的命令 <code>rclone authorize onedrive &quot;应用程序(客户端)ID&quot; &quot;客户端密码值&quot; --onedrive-is-21vianet-version=true</code></p></li><li><p>复制授权码：<code>{&quot;access_token&quot;:&quot;xxxx&quot;}</code></p><p><img src="https://i.loli.net/2020/08/15/4p2tTQ8yJ7RsxHO.png" alt="image-20200815092021152"></p></li><li><p>配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rclone config</span><br></pre></td></tr></table></figure><p>设置步骤如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br></pre></td><td class="code"><pre><span class="line">root@localhost:~# rclone config</span><br><span class="line">No remotes found - make a new one</span><br><span class="line">n) New remote</span><br><span class="line">s) Set configuration password</span><br><span class="line">q) Quit config</span><br><span class="line"><span class="meta">n/s/q&gt;</span><span class="bash"> n  <span class="comment">#新建一个挂载</span></span></span><br><span class="line"><span class="meta">name&gt;</span><span class="bash"> onedrive  <span class="comment">#设置挂载的名称onedrive</span></span></span><br><span class="line">Type of storage to configure.</span><br><span class="line">Enter a string value. Press Enter for the default ("").</span><br><span class="line">Choose a number from below, or type in your own value</span><br><span class="line"> 1 / 1Fichier</span><br><span class="line">   \ "fichier"</span><br><span class="line"> 2 / Alias for an existing remote</span><br><span class="line">   \ "alias"</span><br><span class="line"> 3 / Amazon Drive</span><br><span class="line">   \ "amazon cloud drive"</span><br><span class="line"> 4 / Amazon S3 Compliant Storage Provider (AWS, Alibaba, Ceph, Digital Ocean, Dreamhost, IBM COS, Minio, etc)</span><br><span class="line">   \ "s3"</span><br><span class="line"> 5 / Backblaze B2</span><br><span class="line">   \ "b2"</span><br><span class="line"> 6 / Box</span><br><span class="line">   \ "box"</span><br><span class="line"> 7 / Cache a remote</span><br><span class="line">   \ "cache"</span><br><span class="line"> 8 / Citrix Sharefile</span><br><span class="line">   \ "sharefile"</span><br><span class="line"> 9 / Dropbox</span><br><span class="line">   \ "dropbox"</span><br><span class="line">10 / Encrypt/Decrypt a remote</span><br><span class="line">   \ "crypt"</span><br><span class="line">11 / FTP Connection</span><br><span class="line">   \ "ftp"</span><br><span class="line">12 / Google Cloud Storage (this is not Google Drive)</span><br><span class="line">   \ "google cloud storage"</span><br><span class="line">13 / Google Drive</span><br><span class="line">   \ "drive"</span><br><span class="line">14 / Google Photos</span><br><span class="line">   \ "google photos"</span><br><span class="line">15 / Hubic</span><br><span class="line">   \ "hubic"</span><br><span class="line">16 / In memory object storage system.</span><br><span class="line">   \ "memory"</span><br><span class="line">17 / Jottacloud</span><br><span class="line">   \ "jottacloud"</span><br><span class="line">18 / Koofr</span><br><span class="line">   \ "koofr"</span><br><span class="line">19 / Local Disk</span><br><span class="line">   \ "local"</span><br><span class="line">20 / Mail.ru Cloud</span><br><span class="line">   \ "mailru"</span><br><span class="line">21 / Mega</span><br><span class="line">   \ "mega"</span><br><span class="line">22 / Microsoft Azure Blob Storage</span><br><span class="line">   \ "azureblob"</span><br><span class="line">23 / Microsoft OneDrive</span><br><span class="line">   \ "onedrive"</span><br><span class="line">24 / OpenDrive</span><br><span class="line">   \ "opendrive"</span><br><span class="line">25 / OpenStack Swift (Rackspace Cloud Files, Memset Memstore, OVH)</span><br><span class="line">   \ "swift"</span><br><span class="line">26 / Pcloud</span><br><span class="line">   \ "pcloud"</span><br><span class="line">27 / Put.io</span><br><span class="line">   \ "putio"</span><br><span class="line">28 / QingCloud Object Storage</span><br><span class="line">   \ "qingstor"</span><br><span class="line">29 / SSH/SFTP Connection</span><br><span class="line">   \ "sftp"</span><br><span class="line">30 / Sugarsync</span><br><span class="line">   \ "sugarsync"</span><br><span class="line">31 / Tardigrade Decentralized Cloud Storage</span><br><span class="line">   \ "tardigrade"</span><br><span class="line">32 / Transparently chunk/split large files</span><br><span class="line">   \ "chunker"</span><br><span class="line">33 / Union merges the contents of several upstream fs</span><br><span class="line">   \ "union"</span><br><span class="line">34 / Webdav</span><br><span class="line">   \ "webdav"</span><br><span class="line">35 / Yandex Disk</span><br><span class="line">   \ "yandex"</span><br><span class="line">36 / http Connection</span><br><span class="line">   \ "http"</span><br><span class="line">37 / premiumize.me</span><br><span class="line">   \ "premiumizeme"</span><br><span class="line">38 / seafile</span><br><span class="line">   \ "seafile"</span><br><span class="line"><span class="meta">Storage&gt;</span><span class="bash"> 23  <span class="comment">#选择第23项的onedrive</span></span></span><br><span class="line">** See help for onedrive backend at: https://rclone.org/onedrive/ **</span><br><span class="line"></span><br><span class="line">Microsoft App Client Id</span><br><span class="line">Leave blank normally.</span><br><span class="line">Enter a string value. Press Enter for the default ("").</span><br><span class="line"><span class="meta">client_id&gt;</span><span class="bash">   <span class="comment">#跳过</span></span></span><br><span class="line">Microsoft App Client Secret</span><br><span class="line">Leave blank normally.</span><br><span class="line">Enter a string value. Press Enter for the default ("").</span><br><span class="line"><span class="meta">client_secret&gt;</span><span class="bash">  <span class="comment">#跳过</span></span></span><br><span class="line">Edit advanced config? (y/n)</span><br><span class="line">y) Yes</span><br><span class="line">n) No (default)</span><br><span class="line"><span class="meta">y/n&gt;</span><span class="bash">  <span class="comment">#跳过</span></span></span><br><span class="line">Remote config</span><br><span class="line">Use auto config?</span><br><span class="line"> * Say Y if not sure</span><br><span class="line"> * Say N if you are working on a remote or headless machine</span><br><span class="line">y) Yes (default)</span><br><span class="line">n) No</span><br><span class="line"><span class="meta">y/n&gt;</span><span class="bash"> n  <span class="comment">#选择n</span></span></span><br><span class="line">For this to work, you will need rclone available on a machine that has</span><br><span class="line">a web browser available.</span><br><span class="line"></span><br><span class="line">For more help and alternate methods see: https://rclone.org/remote_setup/</span><br><span class="line"></span><br><span class="line">Execute the following on the machine with the web browser (same rclone</span><br><span class="line">version recommended):</span><br><span class="line"></span><br><span class="line">        rclone authorize "onedrive"</span><br><span class="line"></span><br><span class="line">Then paste the result below:</span><br><span class="line"><span class="meta">result&gt;</span><span class="bash"> &#123;<span class="string">"access_token"</span>:<span class="string">"xxxxxxxx"</span>&#125;  <span class="comment">#输入授权码</span></span></span><br><span class="line">Choose a number from below, or type in an existing value</span><br><span class="line"> 1 / OneDrive Personal or Business</span><br><span class="line">   \ "onedrive"</span><br><span class="line"> 2 / Root Sharepoint site</span><br><span class="line">   \ "sharepoint"</span><br><span class="line"> 3 / Type in driveID</span><br><span class="line">   \ "driveid"</span><br><span class="line"> 4 / Type in SiteID</span><br><span class="line">   \ "siteid"</span><br><span class="line"> 5 / Search a Sharepoint site</span><br><span class="line">   \ "search"</span><br><span class="line">Your choice&gt; 1   #选择1，onedrive</span><br><span class="line">Found 1 drives, please select the one you want to use:</span><br><span class="line">0:  (personal) id=xxxxxxxx</span><br><span class="line">Chose drive to use:&gt; 0  #选择挂载的onedrive网盘</span><br><span class="line">Found drive 'root' of type 'personal', URL: https://onedrive.live.com/?cid=xxxxxxxx</span><br><span class="line">Is that okay?</span><br><span class="line">y) Yes (default)</span><br><span class="line">n) No</span><br><span class="line"><span class="meta">y/n&gt;</span><span class="bash">  <span class="comment">#跳过</span></span></span><br><span class="line">--------------------</span><br><span class="line">[myone]</span><br><span class="line">type = onedrive</span><br><span class="line">token = &#123;"access_token":"xxxxxxxx"&#125;</span><br><span class="line">drive_id = xxxxxx</span><br><span class="line">drive_type = personal</span><br><span class="line">--------------------</span><br><span class="line">y) Yes this is OK (default)</span><br><span class="line">e) Edit this remote</span><br><span class="line">d) Delete this remote</span><br><span class="line"><span class="meta">y/e/d&gt;</span><span class="bash"> y  <span class="comment">#跳过</span></span></span><br><span class="line">Current remotes:</span><br><span class="line"></span><br><span class="line">Name                 Type</span><br><span class="line">====                 ====</span><br><span class="line">onedrive                onedrive</span><br><span class="line"></span><br><span class="line">e) Edit existing remote</span><br><span class="line">n) New remote</span><br><span class="line">d) Delete remote</span><br><span class="line">r) Rename remote</span><br><span class="line">c) Copy remote</span><br><span class="line">s) Set configuration password</span><br><span class="line">q) Quit config</span><br><span class="line"><span class="meta">e/n/d/r/c/s/q&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="配置谷歌网盘"><a href="#配置谷歌网盘" class="headerlink" title="配置谷歌网盘"></a>配置谷歌网盘</h3><p>运行命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rclone config</span><br></pre></td></tr></table></figure><p>设置步骤如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ./rclone.exe config</span></span><br><span class="line">Current remotes:</span><br><span class="line"></span><br><span class="line">Name                 Type</span><br><span class="line">====                 ====</span><br><span class="line">onedrive             onedrive</span><br><span class="line"></span><br><span class="line">e) Edit existing remote</span><br><span class="line">n) New remote</span><br><span class="line">d) Delete remote</span><br><span class="line">r) Rename remote</span><br><span class="line">c) Copy remote</span><br><span class="line">s) Set configuration password</span><br><span class="line">q) Quit config</span><br><span class="line"><span class="meta">e/n/d/r/c/s/q&gt;</span><span class="bash"> n <span class="comment">#新建</span></span></span><br><span class="line"><span class="meta">name&gt;</span><span class="bash"> gdrive  <span class="comment">#名称</span></span></span><br><span class="line">Type of storage to configure.</span><br><span class="line">Enter a string value. Press Enter for the default ("").</span><br><span class="line">Choose a number from below, or type in your own value</span><br><span class="line"> 1 / 1Fichier</span><br><span class="line">   \ "fichier"</span><br><span class="line"> 2 / Alias for an existing remote</span><br><span class="line">   \ "alias"</span><br><span class="line"> 3 / Amazon Drive</span><br><span class="line">   \ "amazon cloud drive"</span><br><span class="line"> 4 / Amazon S3 Compliant Storage Provider (AWS, Alibaba, Ceph, Digital Ocean, Dreamhost, IBM COS,</span><br><span class="line"> Minio, etc)</span><br><span class="line">   \ "s3"</span><br><span class="line"> 5 / Backblaze B2</span><br><span class="line">   \ "b2"</span><br><span class="line"> 6 / Box</span><br><span class="line">   \ "box"</span><br><span class="line"> 7 / Cache a remote</span><br><span class="line">   \ "cache"</span><br><span class="line"> 8 / Citrix Sharefile</span><br><span class="line">   \ "sharefile"</span><br><span class="line"> 9 / Dropbox</span><br><span class="line">   \ "dropbox"</span><br><span class="line">10 / Encrypt/Decrypt a remote</span><br><span class="line">   \ "crypt"</span><br><span class="line">11 / FTP Connection</span><br><span class="line">   \ "ftp"</span><br><span class="line">12 / Google Cloud Storage (this is not Google Drive)</span><br><span class="line">   \ "google cloud storage"</span><br><span class="line">13 / Google Drive</span><br><span class="line">   \ "drive"</span><br><span class="line">14 / Google Photos</span><br><span class="line">   \ "google photos"</span><br><span class="line">15 / Hubic</span><br><span class="line">   \ "hubic"</span><br><span class="line">16 / In memory object storage system.</span><br><span class="line">   \ "memory"</span><br><span class="line">17 / Jottacloud</span><br><span class="line">   \ "jottacloud"</span><br><span class="line">18 / Koofr</span><br><span class="line">   \ "koofr"</span><br><span class="line">19 / Local Disk</span><br><span class="line">   \ "local"</span><br><span class="line">20 / Mail.ru Cloud</span><br><span class="line">   \ "mailru"</span><br><span class="line">21 / Mega</span><br><span class="line">   \ "mega"</span><br><span class="line">22 / Microsoft Azure Blob Storage</span><br><span class="line">   \ "azureblob"</span><br><span class="line">23 / Microsoft OneDrive</span><br><span class="line">   \ "onedrive"</span><br><span class="line">24 / OpenDrive</span><br><span class="line">   \ "opendrive"</span><br><span class="line">25 / OpenStack Swift (Rackspace Cloud Files, Memset Memstore, OVH)</span><br><span class="line">   \ "swift"</span><br><span class="line">26 / Pcloud</span><br><span class="line">   \ "pcloud"</span><br><span class="line">27 / Put.io</span><br><span class="line">   \ "putio"</span><br><span class="line">28 / QingCloud Object Storage</span><br><span class="line">   \ "qingstor"</span><br><span class="line">29 / SSH/SFTP Connection</span><br><span class="line">   \ "sftp"</span><br><span class="line">30 / Sugarsync</span><br><span class="line">   \ "sugarsync"</span><br><span class="line">31 / Tardigrade Decentralized Cloud Storage</span><br><span class="line">   \ "tardigrade"</span><br><span class="line">32 / Transparently chunk/split large files</span><br><span class="line">   \ "chunker"</span><br><span class="line">33 / Union merges the contents of several upstream fs</span><br><span class="line">   \ "union"</span><br><span class="line">34 / Webdav</span><br><span class="line">   \ "webdav"</span><br><span class="line">35 / Yandex Disk</span><br><span class="line">   \ "yandex"</span><br><span class="line">36 / http Connection</span><br><span class="line">   \ "http"</span><br><span class="line">37 / premiumize.me</span><br><span class="line">   \ "premiumizeme"</span><br><span class="line">38 / seafile</span><br><span class="line">   \ "seafile"</span><br><span class="line"><span class="meta">Storage&gt;</span><span class="bash">     13  <span class="comment">#第13选谷歌网盘</span></span></span><br><span class="line">** See help for drive backend at: https://rclone.org/drive/ **</span><br><span class="line"></span><br><span class="line">Google Application Client Id</span><br><span class="line">Setting your own is recommended.</span><br><span class="line">See https://rclone.org/drive/#making-your-own-client-id for how to create your own.</span><br><span class="line">If you leave this blank, it will use an internal key which is low performance.</span><br><span class="line">Enter a string value. Press Enter for the default ("").</span><br><span class="line"><span class="meta">client_id&gt;</span></span><br><span class="line">Google Application Client Secret</span><br><span class="line">Setting your own is recommended.</span><br><span class="line">Enter a string value. Press Enter for the default ("").</span><br><span class="line"><span class="meta">client_secret&gt;</span></span><br><span class="line">Scope that rclone should use when requesting access from drive.</span><br><span class="line">Enter a string value. Press Enter for the default ("").</span><br><span class="line">Choose a number from below, or type in your own value</span><br><span class="line"> 1 / Full access all files, excluding Application Data Folder.</span><br><span class="line">   \ "drive"</span><br><span class="line"> 2 / Read-only access to file metadata and file contents.</span><br><span class="line">   \ "drive.readonly"</span><br><span class="line">   / Access to files created by rclone only.</span><br><span class="line"> 3 | These are visible in the drive website.</span><br><span class="line">   | File authorization is revoked when the user deauthorizes the app.</span><br><span class="line">   \ "drive.file"</span><br><span class="line">   / Allows read and write access to the Application Data folder.</span><br><span class="line"> 4 | This is not visible in the drive website.</span><br><span class="line">   \ "drive.appfolder"</span><br><span class="line">   / Allows read-only access to file metadata but</span><br><span class="line"> 5 | does not allow any access to read or download file content.</span><br><span class="line">   \ "drive.metadata.readonly"</span><br><span class="line"><span class="meta">scope&gt;</span><span class="bash">     1  <span class="comment">#输入1赋予访问权限</span></span></span><br><span class="line">ID of the root folder</span><br><span class="line">Leave blank normally.</span><br><span class="line"></span><br><span class="line">Fill in to access "Computers" folders (see docs), or for rclone to use</span><br><span class="line">a non root folder as its starting point.</span><br><span class="line"></span><br><span class="line">Enter a string value. Press Enter for the default ("").</span><br><span class="line"><span class="meta">root_folder_id&gt;</span></span><br><span class="line">Service Account Credentials JSON file path </span><br><span class="line">Leave blank normally.</span><br><span class="line">Needed only if you want use SA instead of interactive login.</span><br><span class="line">Enter a string value. Press Enter for the default ("").</span><br><span class="line"><span class="meta">service_account_file&gt;</span></span><br><span class="line">Edit advanced config? (y/n)</span><br><span class="line">y) Yes</span><br><span class="line">n) No (default)</span><br><span class="line"><span class="meta">y/n&gt;</span><span class="bash">   <span class="comment">#跳过</span></span></span><br><span class="line">Remote config</span><br><span class="line">Use auto config?</span><br><span class="line"> * Say Y if not sure</span><br><span class="line"> * Say N if you are working on a remote or headless machine</span><br><span class="line">y) Yes (default)</span><br><span class="line">n) No</span><br><span class="line"><span class="meta">y/n&gt;</span><span class="bash">  <span class="comment">#跳过</span></span></span><br></pre></td></tr></table></figure><h3 id="获取配置文件"><a href="#获取配置文件" class="headerlink" title="获取配置文件"></a>获取配置文件</h3><p>搜索 ，windows下正常都在 <code>C:\Users\你的用户名\\.config\rclone</code>目录下，Linux正常都在 <code>./.config/rclone/</code>目录下</p><h2 id="使用教程"><a href="#使用教程" class="headerlink" title="使用教程"></a>使用教程</h2><p>常用命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">rclone config - 以控制会话的形式添加rclone的配置，配置保存在.rclone.conf文件中。</span><br><span class="line">rclone copy - 将文件从源复制到目的地址，跳过已复制完成的。</span><br><span class="line">rclone sync - 将源数据同步到目的地址，只更新目的地址的数据。</span><br><span class="line">rclone move - 将源数据移动到目的地址。</span><br><span class="line">rclone delete - 删除指定路径下的文件内容。</span><br><span class="line">rclone purge - 清空指定路径下所有文件数据。</span><br><span class="line">rclone mkdir - 创建一个新目录。</span><br><span class="line">rclone rmdir - 删除空目录。</span><br><span class="line">rclone check - 检查源和目的地址数据是否匹配。</span><br><span class="line">rclone ls - 列出指定路径下所有的文件以及文件大小和路径。</span><br><span class="line">rclone lsd - 列出指定路径下所有的目录/容器/桶。</span><br><span class="line">rclone lsl - 列出指定路径下所有文件以及修改时间、文件大小和路径。</span><br><span class="line">rclone md5sum - 为指定路径下的所有文件产生一个md5sum文件。</span><br><span class="line">rclone sha1sum - 为指定路径下的所有文件产生一个sha1sum文件。</span><br><span class="line">rclone size - 获取指定路径下，文件内容的总大小。.</span><br><span class="line">rclone version - 查看当前版本。</span><br><span class="line">rclone cleanup - 清空remote。</span><br><span class="line">rclone dedupe - 交互式查找重复文件，进行删除/重命名操作。</span><br></pre></td></tr></table></figure><ol><li><p>显示网盘上的目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rclone lsd onedrive:   #onedrive是上面设置的名称</span><br><span class="line">rclone lsd gdrive:    #gdrive是上面设置的名称</span><br></pre></td></tr></table></figure></li><li><p>拷贝谷歌网盘上的文件到Onedrive</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">!rclone copy gdrive:music onedrive:音乐 --ignore-existing --config ./music/rclone.conf </span><br><span class="line"><span class="meta">#</span><span class="bash"> --config xxxx.conf 表示指定配置文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> --ignore-existing表示跳过已存在的文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 此命令表示将谷歌网盘下的music目录复制到Onedrive网盘下的音乐目录</span></span><br></pre></td></tr></table></figure></li><li><p>挂在Onedrive</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rclone mount onedrive:音乐 music --copy-links --no-gzip-encoding --no-check-certificate --allow-other --allow-non-empty --umask 000 --config /content/gdrive/My\ Drive/music/rclone.conf</span><br></pre></td></tr></table></figure></li></ol><h2 id="Linux上挂载网盘"><a href="#Linux上挂载网盘" class="headerlink" title="Linux上挂载网盘"></a>Linux上挂载网盘</h2><ol><li><p>新建Linux下的文件夹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rm -rf /root/music  #删除已有的目录</span><br><span class="line">mkdir /root/music  #新建目录</span><br></pre></td></tr></table></figure></li><li><p>挂载磁盘</p><p>下载脚本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate https://raw.githubusercontent.com/x91270/Centos/master/rcloned</span><br></pre></td></tr></table></figure><p>使用 <code>vim rcloned</code>修改脚本项</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">NAME&#x3D;&quot;myone&quot; #创建的rclone名，本文此处填ojbk</span><br><span class="line">REMOTE&#x3D;&quot;音乐&quot; #远程挂载地址对应的文件夹，是你OneDrive对应的具体目录</span><br><span class="line">LOCAL&#x3D;&quot;&#x2F;root&#x2F;music&quot; #在本机上的挂载地址</span><br></pre></td></tr></table></figure><p>启动脚本 <code>rcloned start</code></p></li><li><p>挂载成功后，输入<code>df -h</code>命令查看</p><p><img src="https://i.loli.net/2020/08/15/y2B5TYqenzbkDcX.png" alt="image-20200815181741080"></p></li><li><p>设置开机启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mv rcloned /etc/init.d/rcloned    #移动rcloned到init(开机启动目录)下</span><br><span class="line">chmod +x /etc/init.d/rcloned      #给rcloned可执行权限</span><br><span class="line">chkconfig rcloned on                   #设置自启动</span><br><span class="line">bash /etc/init.d/rcloned start       #启动rclone</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Rclone 是一个用于多个云平台之间同步文件和目录的命令行工具，其支持多种运营商网盘。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;官网网址：&lt;a href=&quot;https://www.moewah.com/go/aHR0cHM6Ly9yY2xvbmUub3Jn&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://rclone.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;开源地址：&lt;a href=&quot;https://github.com/ncw/rclone&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/ncw/rclone&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="软件" scheme="https://www.yaronzz.com/categories/%E8%BD%AF%E4%BB%B6/"/>
    
    
      <category term="linux" scheme="https://www.yaronzz.com/tags/linux/"/>
    
      <category term="onedrive" scheme="https://www.yaronzz.com/tags/onedrive/"/>
    
      <category term="rclone" scheme="https://www.yaronzz.com/tags/rclone/"/>
    
      <category term="googledrive" scheme="https://www.yaronzz.com/tags/googledrive/"/>
    
  </entry>
  
  <entry>
    <title>CefSharp的使用</title>
    <link href="https://www.yaronzz.com/post/cefsharp_use/"/>
    <id>https://www.yaronzz.com/post/cefsharp_use/</id>
    <published>2020-07-30T07:30:48.000Z</published>
    <updated>2021-10-14T02:03:47.245Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>之前一直使用WPF自带的<code>WebBrowser</code>控件，但由于它使用的是IE内核，十分难用。于是换了一个开源的浏览器包CefSharp，其支持Winform和WPF，内嵌了Chrome浏览器组件并且有比较详细的说明文档。</p><ul><li><a href="https://github.com/cefsharp/CefSharp" target="_blank" rel="noopener">开源项目地址</a></li><li><a href="https://github.com/cefsharp/CefSharp/wiki/CefSharp中文帮助文档" target="_blank" rel="noopener">官方中文帮助文档</a></li></ul><a id="more"></a><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol><li><p>通过Nuget安装，右击项目 -&gt; 管理Nuget程序包 -&gt; 在打开的界面中搜索CefSharp，依次安装 <code>CefSharp.Common</code>和 <code>CefSharp.Wpf</code> ，至于 <code>cef.redist.x64</code>和 <code>cef.redist.x86</code>会自动安装。</p><p><img src="https://i.loli.net/2020/07/30/7NdrJnzxabOZfPh.png" alt="image-20200730153609000"></p></li><li><p>配置解决方案平台</p><p>因为CefSharp不支持ANYCPU所以要配置x86、x64，点击菜单生成 -&gt; 配置管理器。选择解决方案平台，点击编辑，先将x64和x86删掉，再重新新建，重新配置比较容易些。</p><p><img src="https://i.loli.net/2020/07/30/Unib4OjqVvwKB7P.png" alt="image-20200730154155013"></p></li></ol><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>使用时可以直接在xaml文件中直接添加<code>ChromiumWebBrowser</code>控件，不过一个<code>ChromiumWebBrowser</code>控件就要占几M的内存，所以代码动态添加也是一种选择。</p><h3 id="在xaml中添加浏览器"><a href="#在xaml中添加浏览器" class="headerlink" title="在xaml中添加浏览器"></a>在xaml中添加浏览器</h3><ol><li><p>xmal文件头部插入引用<code>xmlns:wpf=&quot;clr-namespace:CefSharp.Wpf;assembly=CefSharp.Wpf&quot;</code>，添加控件如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;Grid x:Name&#x3D;&quot;ctrlBrowerGrid&quot;&gt;</span><br><span class="line">    &lt;wpf:ChromiumWebBrowser x:Name&#x3D;&quot;Browser&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;Grid&gt;</span><br></pre></td></tr></table></figure></li><li><p>cs文件中操作控件访问网址：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Browser.Load(“www.baidu.com”);</span><br></pre></td></tr></table></figure></li></ol><h3 id="动态添加浏览器"><a href="#动态添加浏览器" class="headerlink" title="动态添加浏览器"></a>动态添加浏览器</h3><ol><li><p>添加浏览器类：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">internal sealed class CollapsableChromiumWebBrowser : ChromiumWebBrowser</span><br><span class="line">&#123;</span><br><span class="line">    public CollapsableChromiumWebBrowser()</span><br><span class="line">    &#123;</span><br><span class="line">        this.Loaded +&#x3D; this.BrowserLoaded;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void BrowserLoaded(object sender, System.Windows.RoutedEventArgs e)</span><br><span class="line">    &#123;</span><br><span class="line">        &#x2F;&#x2F; Avoid loading CEF in designer</span><br><span class="line">        if (DesignerProperties.GetIsInDesignMode(this))</span><br><span class="line">            return;</span><br><span class="line">        &#x2F;&#x2F; Avoid NRE in AbstractRenderHandler.OnPaint</span><br><span class="line">        ApplyTemplate();</span><br><span class="line">        CreateOffscreenBrowser(new Size(400, 400));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>动态添加和操作控件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CollapsableChromiumWebBrowser Browser &#x3D; new CollapsableChromiumWebBrowser();</span><br><span class="line">&#x2F;&#x2F;页面插入控件</span><br><span class="line">ctrlBrowerGrid.Children.Add(Browser);</span><br><span class="line">&#x2F;&#x2F;这里不能用Load()的方法，会报错。</span><br><span class="line">Browser.Address &#x3D; “www.baidu.com”;</span><br></pre></td></tr></table></figure></li></ol><h3 id="获取Cookie和Html"><a href="#获取Cookie和Html" class="headerlink" title="获取Cookie和Html"></a>获取Cookie和Html</h3><ol><li><p>添加Cookie访问类</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">public class CookieVisitor : ICookieVisitor</span><br><span class="line">&#123;</span><br><span class="line">    public static string Cookies &#x3D; null;</span><br><span class="line">    public static string Html &#x3D; null;</span><br><span class="line">    public event Action&lt;object&gt; Action;</span><br><span class="line">    public bool Visit(CefSharp.Cookie cookie, int count, int total, ref bool deleteCookie)</span><br><span class="line">    &#123;</span><br><span class="line">        if(count &#x3D;&#x3D; 0)</span><br><span class="line">            Cookies &#x3D; null;</span><br><span class="line">        </span><br><span class="line">        Cookies +&#x3D; cookie.Name + &quot;&#x3D;&quot; + cookie.Value + &quot;;&quot;;</span><br><span class="line">        deleteCookie &#x3D; false;</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void Dispose() </span><br><span class="line">    &#123;</span><br><span class="line">        if (Action !&#x3D; null)</span><br><span class="line">            Action((Html, Cookies));</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>添加Cookie和Html获取回调函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">public async void RecieveCookie(object data)</span><br><span class="line">&#123;</span><br><span class="line">    (string html,string cookies) &#x3D; ((string,string))data;</span><br><span class="line">    return;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>浏览器控件访问网址，并设置回调</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">async void LoadWebBrowser()</span><br><span class="line">&#123;</span><br><span class="line">    Browser.FrameLoadEnd +&#x3D; Browser_FrameLoadEnd;</span><br><span class="line">    Browser.Address &#x3D; &quot;www.baidu.com&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">private async void Browser_FrameLoadEnd(object sender, FrameLoadEndEventArgs e)</span><br><span class="line">&#123;</span><br><span class="line">    CookieVisitor.Html &#x3D; await Browser.GetSourceAsync();</span><br><span class="line">    CookieVisitor visitor &#x3D; new CookieVisitor();</span><br><span class="line">    visitor.Action +&#x3D; RecieveCookie;</span><br><span class="line">    Cef.GetGlobalCookieManager().VisitAllCookies(visitor);</span><br><span class="line">    return;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前一直使用WPF自带的&lt;code&gt;WebBrowser&lt;/code&gt;控件，但由于它使用的是IE内核，十分难用。于是换了一个开源的浏览器包CefSharp，其支持Winform和WPF，内嵌了Chrome浏览器组件并且有比较详细的说明文档。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/cefsharp/CefSharp&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;开源项目地址&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/cefsharp/CefSharp/wiki/CefSharp中文帮助文档&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官方中文帮助文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="code" scheme="https://www.yaronzz.com/categories/code/"/>
    
    
      <category term="WPF" scheme="https://www.yaronzz.com/tags/WPF/"/>
    
      <category term="C#" scheme="https://www.yaronzz.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>Get AccessToken From Tidal</title>
    <link href="https://www.yaronzz.com/post/get_accesstoken/"/>
    <id>https://www.yaronzz.com/post/get_accesstoken/</id>
    <published>2020-07-16T08:16:33.000Z</published>
    <updated>2021-10-14T02:03:47.223Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>AccessToken is a key to get the track\video streamurl.</p><ul><li>AccessToken from Tidal Desktop: Support MQA Flac, can’t download 360\Dobly</li><li>AccessToken from Tidal Android: Support all</li><li>AccessToken from Tidal IOS: Can’t download Flac</li></ul><a id="more"></a><p>How to use AccessToken.</p><ul><li>For tidal-dl: Open tidal-dl and Enter 10 to set AccessToken</li><li>For tidal-gui: Open file tidal-ini and add a key “accesstoken=xxxxxxxxx” (xxxxxxx is your AccessToken)</li></ul><h2 id="Get-AccessToken-from-Tidal-Android"><a href="#Get-AccessToken-from-Tidal-Android" class="headerlink" title="Get AccessToken from Tidal Android"></a>Get AccessToken from Tidal Android</h2><ol><li><p>Login Tidal Android and play a track</p></li><li><p>With any file explorer, go to /sdcard/Android/data/com.aspiro.tidal/cache/okhttp</p><p><img src="https://i.loli.net/2020/07/16/Ihax72DuVU4wnZR.png" alt="image-20200716170648460"></p></li><li><p>Open a file in the folder and Find the ‘Authorization: Bearer’ <strong>very_long_key</strong> (At the beginning of the file)<br><strong>very_long_key</strong> is what you need to copy/paste, if the file not contain the ‘Authorization: Bearer’, open another file.</p><p><img src="https://i.loli.net/2020/07/16/WRMmrUIHOBpizc1.png" alt="image-20200716171249033"></p></li></ol><h2 id="Get-AccessToken-from-Tidal-Desktop"><a href="#Get-AccessToken-from-Tidal-Desktop" class="headerlink" title="Get AccessToken from Tidal Desktop"></a>Get AccessToken from Tidal Desktop</h2><h3 id="Download-Software"><a href="#Download-Software" class="headerlink" title="Download Software"></a>Download Software</h3><ul><li><a href="https://offer.tidal.com/download?lang=en" target="_blank" rel="noopener">Tidal Desktop</a></li><li><a href="https://www.charlesproxy.com/download/" target="_blank" rel="noopener"><em>Charles</em></a> : View all of the HTTP and SSL / HTTPS traffic between their machine and the Internet</li></ul><h3 id="Install-Charles"><a href="#Install-Charles" class="headerlink" title="Install Charles"></a>Install Charles</h3><ol><li><p>Install Charles Root Certificate<br>Select menu: Help –&gt; SSL Proxying –&gt; Install Charles Root Certificate</p><img src="https://cdn.jsdelivr.net/gh/yaronzz/CDN@latest//blog/charles1.png" alt="charles1" style="zoom: 67%;" /></li><li><p>SSL Proxying Settings</p><p>Select menu: Proxy–&gt;SSL Proxying Settings</p><p>Open SSL Proxying page and follow picture settings</p><p><img src="https://cdn.jsdelivr.net/gh/yaronzz/CDN@latest/blog/charles3.png" alt="charles3"></p></li><li><p>Open Options</p><ul><li>Windows Proxy</li><li>Start Recording</li><li>Start SSL Proxying</li></ul><p><img src="https://i.loli.net/2020/07/16/MU6zIPGOoe3KxBq.png" alt="image-20200716151604188"></p></li><li><p>External Proxy Settings (If you need VPN to use Tidal Desktop)</p><p>Select menu: Proxy–&gt;Proxying Settings</p><p>Open Proxies page \ Windows page and follow picture settings</p><p><img src="https://cdn.jsdelivr.net/gh/yaronzz/CDN@latest/blog/charles4.png" alt="charles3"></p><p><img src="https://i.loli.net/2020/07/16/WXKotBSPAglIOh5.png" alt="image-20200716155401866"></p><p>Select menu: Proxy–&gt;External Proxying Settings</p><p>Follow picture settings (IP and Port come from your VPN)</p><p><img src="https://i.loli.net/2020/07/16/2KIwGsdkFVDeSxl.png" alt="image-20200716155638668"></p></li></ol><h3 id="Get-AccessToken"><a href="#Get-AccessToken" class="headerlink" title="Get AccessToken"></a>Get AccessToken</h3><ol><li><p>Install Charles and Open it </p></li><li><p>Open Tidal Desktop</p><p>Charles will view all of the HTTP / HTTPS traffic between tidal and the Internet.</p><p><img src="https://i.loli.net/2020/07/16/WzHRUks6TLvuflO.png" alt="image-20200716152531935"></p></li><li><p>Relogin on the Tidal Desktop and play a track </p><p><img src="https://i.loli.net/2020/07/16/lwV96j7QcYXqkaN.png" alt="image-20200716155903395"></p></li><li><p>‘Ctrl + F’ on the Charles</p><ul><li><p>Enter ‘authorization: Bearer’ or ‘authorization’ and click Find-Button</p></li><li><p>Select url contains ‘tidal’</p></li><li><p>Double click the selection</p><p><img src="https://i.loli.net/2020/07/16/PfL7GX1oZrAVkiv.png" alt="image-20200716161326262"></p></li><li><p>Select Contents page copy the authorization (remove ‘Bearer ‘)</p><p><img src="https://i.loli.net/2020/07/16/2CFoVeZ6DxHrb18.png" alt="image-20200716161139356"></p></li></ul></li></ol><h2 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h2><ol><li>Follow documentation but I can’t get the AccessToken’<br>Google how to use Charles.</li><li>How to get AccessToken from Tidal IOS<br>Google Charles IOS.</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;AccessToken is a key to get the track\video streamurl.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AccessToken from Tidal Desktop: Support MQA Flac, can’t download 360\Dobly&lt;/li&gt;
&lt;li&gt;AccessToken from Tidal Android: Support all&lt;/li&gt;
&lt;li&gt;AccessToken from Tidal IOS: Can’t download Flac&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="软件" scheme="https://www.yaronzz.com/categories/%E8%BD%AF%E4%BB%B6/"/>
    
    
      <category term="tidal" scheme="https://www.yaronzz.com/tags/tidal/"/>
    
  </entry>
  
  <entry>
    <title>音频相关知识点</title>
    <link href="https://www.yaronzz.com/post/audio_knowledge_point/"/>
    <id>https://www.yaronzz.com/post/audio_knowledge_point/</id>
    <published>2020-06-30T01:00:33.000Z</published>
    <updated>2021-10-14T02:03:47.227Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>音频知识点包括音频属性与音频格式等。</p><a id="more"></a><h2 id="音频属性"><a href="#音频属性" class="headerlink" title="音频属性"></a>音频属性</h2><h3 id="采样频率-Hz"><a href="#采样频率-Hz" class="headerlink" title="采样频率 Hz"></a>采样频率 Hz</h3><p>采样频率就是采用一段音频，做为样本，因为wav使用的是数码信号，它是用一堆数字来描述原来的模拟信号，所以它要对原来的模拟信号进行分析，我们知道所有的声音都有其波形，数码信号就是在原有的模拟信号波形上每隔一段时间进行一次“取点”，赋予每一个点以一个数值，这就是“采样”，然后把所有的“点”连起来就可以描述模拟信号了，很明显，在一定时间内取的点越多，描述出来的波形就越精确，这个尺度我们就称为“采样频率”。</p><p>我们最常用的采样频率是44.1kHz，它的意思是每秒取样44100次。之所以使用这个数值是因为经过了反复实验（实际上是那个时代才是视频27/1.0001时钟做CD刻录遗留问题），人们发现这个采样频率最合适，低于这个值就会有较明显的损失，而高于这个值人的耳朵已经很难分辨，而且增 大了数字音频所占用的空间。</p><p>一般为了达到“万分精确”，我们还会使用48kHz甚至96kHz的采样频率，实际上，96kHz采样频率和44.1kHz采样频率的区别绝对不会象44.1kHz和22kHz那样区别如此之大，我们所使用的CD的采样标准就是44.1kHz，目前44.1kHz还是一个最通行的标准，有些人认为96kHz将是未来录音界的趋势。采样频率提高应该是一件好事，但我们真的能听出96kHz采样频率制作的音乐与44.1kHz采样频率制作的音乐的区别吗？</p><p>注：16bit/44.1kHz是CD中音频的采样，24bit/48kHz是DVD中音频的采样，24bit/192kHz是蓝光中音频的采样。</p><h3 id="采样位数-bit（位深）"><a href="#采样位数-bit（位深）" class="headerlink" title="采样位数  bit（位深）"></a>采样位数  bit（位深）</h3><p>比特率是大家常听说的一个名词，数码录音一般使用16比特、20比特或24比特制作音乐。什么是“比特”？我们知道声音有轻有响，影响声音<a href="https://baike.baidu.com/item/响度" target="_blank" rel="noopener">响度</a>的物理要素是<a href="https://baike.baidu.com/item/振幅" target="_blank" rel="noopener">振幅</a>，作为<a href="https://baike.baidu.com/item/数码录音" target="_blank" rel="noopener">数码录音</a>，必须也要能精确表示乐曲的轻响，所以一定要对波形的振幅有一个精确的描述。“比特(bit)”就是这样一个单位，16比特就是指把波形的振幅划为2^16即65536个等级，根据<a href="https://baike.baidu.com/item/模拟信号" target="_blank" rel="noopener">模拟信号</a>的轻响把它划分到某个等级中去，就可以用数字来表示了。</p><p>和采样频率一样，比特率越高，越能细致地反映乐曲的轻响变化。20比特就可以产生1048576个等级，表现交响乐这类动态十分大的音乐已经没有什么问题了。刚才提到了一个名词“动态”，它其实指的是一首乐曲最响和最轻的对比能达到多少，我们也常说“<a href="https://baike.baidu.com/item/动态范围" target="_blank" rel="noopener">动态范围</a>”，单位是dB，而动态范围和我们录音时采用的比特率是紧密结合在一起的，如果我们使用了一个很低的比特率，那么就只有很少的等级可以用来描述音响的强弱，当然就不能听到大幅度的强弱对比了。</p><p>动态范围和比特率的关系是；<a href="https://baike.baidu.com/item/比特率" target="_blank" rel="noopener">比特率</a>每增加1比特，动态范围就增加6dB。所以假如我们使用1比特录音，那么我们的动态范围就只有6dB，这样的音乐是不可能听的。16比特时，动态范围是96dB。这可以满足一般的需求了。20比特时，动态范围是120dB，对比再强烈的交响乐都可以应付自如了，表现音乐的强弱是绰绰有余了。发烧级的<a href="https://baike.baidu.com/item/录音师" target="_blank" rel="noopener">录音师</a>还使用24比特，但是和采样精度一样，它不会比20比特有很明显的变化，理论上24比特可以做到144 dB的动态范围，但实际上是很难达到的，因为任何设备都不可避免会产生<a href="https://baike.baidu.com/item/噪音" target="_blank" rel="noopener">噪音</a>，至少在现阶段24比特很难达到其预期效果。</p><h3 id="码率-kbps"><a href="#码率-kbps" class="headerlink" title="码率 kbps"></a>码率 kbps</h3><p>表示每秒存储声音容量，如CD标准的声音信号参数为：信号采样频率为44.1kHz，量化精度为16位，包含两个声道。根据每秒钟存储声音容量的公式：</p><p>字节数 = 采样频率×采样精度(位数)×声道数，可计算出其数据率为 <strong>1411.2kbps</strong>， 即176.4kBps。</p><p>(大写B表示byte,即<a href="https://baike.baidu.com/item/字节" target="_blank" rel="noopener">字节</a>，一个字节=八个位，即1B=8b；前面的小写k表示千的意思，即千个位kb或千个字节kB)</p><h2 id="音频格式"><a href="#音频格式" class="headerlink" title="音频格式"></a>音频格式</h2><h3 id="CD"><a href="#CD" class="headerlink" title="CD"></a>CD</h3><p>标准CD格式也就是44.1K的采样频率，速率88K/秒，16位量化位数，因为CD音轨可以说是近似无损的，因此它的声音基本上是忠于原声的。一个CD音频文件是一个<em>.cda文件，这只是一个索引信息，并不是真正的包含声音信息，所以不论CD音乐的长短，在电脑上看到的“</em>.cda文件”都是44字节长。</p><h3 id="WAV"><a href="#WAV" class="headerlink" title="WAV"></a>WAV</h3><p><strong>无损</strong>，是<a href="https://baike.baidu.com/item/微软公司" target="_blank" rel="noopener">微软公司</a>开发的一种声音文件格式，标准格式的WAV文件和CD格式一样，也是44.1K的采样频率，速率88K/秒，16位量化位数。</p><h3 id="MP3"><a href="#MP3" class="headerlink" title="MP3"></a>MP3</h3><p>MPEG音频文件的压缩是一种有损压缩，MPEG3<a href="https://baike.baidu.com/item/音频编码" target="_blank" rel="noopener">音频编码</a>具有10：1~12：1的高<a href="https://baike.baidu.com/item/压缩率" target="_blank" rel="noopener">压缩率</a>，同时基本保持低音频部分不失真，但是牺牲了声音文件中12KHz到16KHz高音频这部分的质量来换取文件的尺寸，相同长度的音乐文件，用<em>.mp3格式来储存，一般只有</em>.wav文件的1/10，而音质要次于CD格式或WAV格式的声音文件。</p><h3 id="OGG"><a href="#OGG" class="headerlink" title="OGG"></a>OGG</h3><p><a href="https://baike.baidu.com/item/ogg格式" target="_blank" rel="noopener">ogg格式</a>完全开源，完全免费， 和mp3不相上下的新格式。 与MP3类似，OGGVorbis也是对音频进行有损压缩编码，但通过使用更加先进的<a href="https://baike.baidu.com/item/声学模型" target="_blank" rel="noopener">声学模型</a>去减少损失，因此，相同<a href="https://baike.baidu.com/item/码率" target="_blank" rel="noopener">码率</a>编码的OGGVorbis比MP3音质更好一些，文件也更小一些。</p><h3 id="FLAC"><a href="#FLAC" class="headerlink" title="FLAC"></a>FLAC</h3><p><a href="https://baike.baidu.com/item/FLAC" target="_blank" rel="noopener">FLAC</a>即是Free Lossless Audio Codec的缩写，中文可解为无损音频压缩编码。FLAC是一套著名的自由音频压缩编码，其特点是<a href="https://baike.baidu.com/item/无损压缩" target="_blank" rel="noopener">无损压缩</a>。不同于其他有损压缩编码如<a href="https://baike.baidu.com/item/MP3" target="_blank" rel="noopener">MP3</a>及<a href="https://baike.baidu.com/item/AAC" target="_blank" rel="noopener">AAC</a>，它不会破坏任何原有的音频资讯，所以可以还原音乐光盘音质。</p><h3 id="APE"><a href="#APE" class="headerlink" title="APE"></a>APE</h3><p>APE是流行的数字音乐文件格式之一。与<a href="https://baike.baidu.com/item/MP3" target="_blank" rel="noopener">MP3</a>这类<a href="https://baike.baidu.com/item/有损压缩" target="_blank" rel="noopener">有损压缩</a>方式不同，APE是一种无损压缩<a href="https://baike.baidu.com/item/音频技术" target="_blank" rel="noopener">音频技术</a>，也就是说当你将从音频CD上读取的音频数据文件压缩成<a href="https://baike.baidu.com/item/APE格式" target="_blank" rel="noopener">APE格式</a>后，你还可以再将APE格式的文件还原，而还原后的音频文件与压缩前的一模一样，没有任何损失。APE的文件大小大概为CD的一半。</p><h3 id="AAC"><a href="#AAC" class="headerlink" title="AAC"></a>AAC</h3><p>应用相对广泛的有AAC,（高级音频编码技术，Advanced Audio Coding）是<a href="https://baike.baidu.com/item/杜比实验室" target="_blank" rel="noopener">杜比实验室</a>为音乐社区提供的技术。AAC号称「最大能容纳48通道的音轨，采样率达96 KHz，并且在320Kbps的数据速率下能为5.1声道音乐节目提供相当于ITU-R广播的品质」。和MP3比起来，它的音质比较好，也能够节省大约30%的储存空间与带宽。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;音频知识点包括音频属性与音频格式等。&lt;/p&gt;
    
    </summary>
    
    
      <category term="学习" scheme="https://www.yaronzz.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="audio" scheme="https://www.yaronzz.com/tags/audio/"/>
    
  </entry>
  
  <entry>
    <title>Office365家庭版却需要激活专业增强版的解决办法</title>
    <link href="https://www.yaronzz.com/post/office365/"/>
    <id>https://www.yaronzz.com/post/office365/</id>
    <published>2020-06-26T07:00:33.000Z</published>
    <updated>2021-10-14T02:03:47.241Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>由于之前使用KMS破解过office，所以安装了正版的office365家庭版之后，打开却显示当前版本是专业增强版，并且需要许可证。</p><a id="more"></a><img src="https://i.loli.net/2020/06/26/H8pUtY6SxTqszQ4.png" alt="IMG" style="zoom:67%;" /><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><ol><li>以<strong>管理员</strong>身份运行CMD</li><li>输入命令切换到office目录 <code>cd C:\Program Files\Microsoft Office\Office16</code></li><li>输入命令查询破解软件的KEY(位) <code>cscript ospp.vbs /dstatus</code></li><li>输入命令卸载KEY <code>cscript ospp.vbs /unpkey:XXXXX</code></li></ol><img src="https://i.loli.net/2020/06/26/FyX3YQ5KoGfzbPx.png" alt="IMG" style="zoom:67%;" />]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于之前使用KMS破解过office，所以安装了正版的office365家庭版之后，打开却显示当前版本是专业增强版，并且需要许可证。&lt;/p&gt;
    
    </summary>
    
    
      <category term="软件" scheme="https://www.yaronzz.com/categories/%E8%BD%AF%E4%BB%B6/"/>
    
    
      <category term="office" scheme="https://www.yaronzz.com/tags/office/"/>
    
  </entry>
  
  <entry>
    <title>Typora快捷键</title>
    <link href="https://www.yaronzz.com/post/typora_keymap/"/>
    <id>https://www.yaronzz.com/post/typora_keymap/</id>
    <published>2020-06-26T07:00:33.000Z</published>
    <updated>2021-10-14T02:03:47.242Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Typora快捷键包括菜单栏、文件、编辑、段落、格式、视图等。</p><a id="more"></a><h2 id="一：菜单栏"><a href="#一：菜单栏" class="headerlink" title="一：菜单栏"></a>一：菜单栏</h2><ul><li>文件：alt+F</li><li>编辑：alt+</li><li>段落：alt+P</li><li>格式：alt+O</li><li>视图：alt+V</li><li>主题：alt+T</li><li>帮助：alt+H</li></ul><h2 id="二：文件"><a href="#二：文件" class="headerlink" title="二：文件"></a>二：文件</h2><ul><li>新建：Ctrl+N</li><li>新建窗口：Ctrl+Shift+N</li><li>打开：Ctrl+O</li><li>快速打开：Ctrl+P</li><li>保存：Ctrl+S</li><li>另存为：Ctrl+Shift+S</li><li>偏好：Ctrl+,</li><li>关闭：Ctrl+W</li></ul><h2 id="三：编辑"><a href="#三：编辑" class="headerlink" title="三：编辑"></a>三：编辑</h2><ul><li>撤销：Ctrl+Z</li><li>重做：Ctrl+Y</li><li>剪切：Ctrl+X</li><li>复制：Ctrl+C</li><li>粘贴：Ctrl+V</li><li>插入链接：Ctrl+K</li><li>复制为MarkDown：Ctrl+Shift+C</li><li>粘贴为纯文本：Ctrl+Shift+V</li><li>全选：Ctrl+A</li><li>选中当前行/句：Ctrl+L</li><li>选中当前格式文本：Ctrl+E</li><li>选中当前词：Ctrl+D</li><li>跳转到文首：Ctrl+Home</li><li>跳转到所选内容：Ctrl+J</li><li>跳转到文末：Ctrl+End</li><li>查找：Ctrl+F</li><li>查找下一个：F3</li><li>查找上一个：Shift+F3</li><li>替换：Ctrl+H</li></ul><h2 id="四：段落"><a href="#四：段落" class="headerlink" title="四：段落"></a>四：段落</h2><ul><li>标题：Ctrl+1/2/3/4/5</li><li>段落：Ctrl+0</li><li>增大标题级别：Ctrl+=</li><li>减少标题级别：Ctrl+-</li><li>表格：Ctrl+T</li><li>代码块：Ctrl+Shift+K</li><li>公式块：Ctrl+Shift+M</li><li>引用：Ctrl+Shift+Q</li><li>有序列表：Ctrl+Shift+[</li><li>无序列表：Ctrl+Shift+]</li><li>增加缩进：Ctrl+]</li><li>减少缩进：Ctrl+[</li></ul><h2 id="五：格式"><a href="#五：格式" class="headerlink" title="五：格式"></a>五：格式</h2><ul><li>加粗：Ctrl+B</li><li>斜体：Ctrl+I</li><li>下划线：Ctrl+U</li><li>代码：Ctrl+Shift+`</li><li>删除线：Alt+Shift+5</li><li>超链接：Ctrl+K</li><li>图像：Ctrl+Shift+I</li><li>清除样式：Ctrl+</li></ul><h2 id="六：视图"><a href="#六：视图" class="headerlink" title="六：视图"></a>六：视图</h2><ul><li>显示隐藏侧边栏：Ctrl+Shift+L</li><li>大纲视图：Ctrl+Shift+1</li><li>文档列表视图：Ctrl+Shift+2</li><li>文件树视图：Ctrl+Shift+3</li><li>源代码模式：Ctrl+/</li><li>专注模式：F8</li><li>打字机模式：F9</li><li>切换全屏：F11</li><li>实际大小：Ctrl+Shift+0</li><li>放大：Ctrl+Shift+=</li><li>缩小：Ctrl+Shift+-</li><li>应用内窗口切换：Ctrl+Tab</li><li>打开DevTools：Shift+F12</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Typora快捷键包括菜单栏、文件、编辑、段落、格式、视图等。&lt;/p&gt;
    
    </summary>
    
    
      <category term="软件" scheme="https://www.yaronzz.com/categories/%E8%BD%AF%E4%BB%B6/"/>
    
    
      <category term="typora" scheme="https://www.yaronzz.com/tags/typora/"/>
    
  </entry>
  
</feed>
